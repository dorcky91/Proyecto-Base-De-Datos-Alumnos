%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 26.3)
%%For: ayib
%%CreationDate: 30/08/22
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.3.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.3.1 x1103 R agm 5.512 ct 6.513%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.cb7c5a1, 2022/04/14-05:22:35        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">UP - School logo_38-04</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2022-08-30T14:21:34+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2022-08-30T14:21:34+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2022-08-30T14:21:34+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator 26.3 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBIAEgAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABIAAAAAEA&#xA;AQEgAAAAAQAB/+ICQElDQ19QUk9GSUxFAAEBAAACMEFEQkUCEAAAbW50clJHQiBYWVogB88ABgAD&#xA;AAAAAAAAYWNzcEFQUEwAAAAAbm9uZQAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1BREJFAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKY3BydAAAAPwAAAAy&#xA;ZGVzYwAAATAAAABrd3RwdAAAAZwAAAAUYmtwdAAAAbAAAAAUclRSQwAAAcQAAAAOZ1RSQwAAAdQA&#xA;AAAOYlRSQwAAAeQAAAAOclhZWgAAAfQAAAAUZ1hZWgAAAggAAAAUYlhZWgAAAhwAAAAUdGV4dAAA&#xA;AABDb3B5cmlnaHQgMTk5OSBBZG9iZSBTeXN0ZW1zIEluY29ycG9yYXRlZAAAAGRlc2MAAAAAAAAA&#xA;EUFkb2JlIFJHQiAoMTk5OCkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAA&#xA;ARbMWFlaIAAAAAAAAAAAAAAAAAAAAABjdXJ2AAAAAAAAAAECMwAAY3VydgAAAAAAAAABAjMAAGN1&#xA;cnYAAAAAAAAAAQIzAABYWVogAAAAAAAAnBgAAE+lAAAE/FhZWiAAAAAAAAA0jQAAoCwAAA+VWFla&#xA;IAAAAAAAACYxAAAQLwAAvpz/7gAOQWRvYmUAZMAAAAAB/9sAhAAGBAQEBQQGBQUGCQYFBgkLCAYG&#xA;CAsMCgoLCgoMEAwMDAwMDBAMDg8QDw4MExMUFBMTHBsbGxwfHx8fHx8fHx8fAQcHBw0MDRgQEBga&#xA;FREVGh8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx//wAAR&#xA;CAEAAQADAREAAhEBAxEB/8QBogAAAAcBAQEBAQAAAAAAAAAABAUDAgYBAAcICQoLAQACAgMBAQEB&#xA;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&#xA;VQPlj4ku8q6TRNGlZ3ksLZ2kpzZoUJanSpI3x8SXeVVJtN06cRie1hlESlIg8atxVhQqtRsCNqYB&#xA;Mjqrl0zTlhSBbWEQx8uEQjUKvMFXotKDkGIPjXHjPeqmND0UGMjT7YGI1iIhj+E1r8O22++HxJd5&#xA;VUGm6cONLWEcPT4fu129H+7pt+xX4fDtg4j3qicirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:c9b33626-f06b-4fa5-945a-fcf308cf5419</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:c9b33626-f06b-4fa5-945a-fcf308cf5419</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:641bd080-1a4d-4831-a2a3-7925323422bf</stRef:instanceID>
            <stRef:documentID>xmp.did:641bd080-1a4d-4831-a2a3-7925323422bf</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c9b33626-f06b-4fa5-945a-fcf308cf5419</stEvt:instanceID>
                  <stEvt:when>2022-08-30T14:21:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
         <pdf:Producer>Adobe PDF library 16.07</pdf:Producer>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Montserrat-MediumItalic</stFnt:fontName>
                  <stFnt:fontFamily>Montserrat</stFnt:fontFamily>
                  <stFnt:fontFace>Medium Italic</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 7.200;PS 007.200;hotconv 1.0.88;makeotf.lib2.5.64775</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Montserrat-MediumItalic.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Montserrat-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Montserrat</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 7.200;PS 007.200;hotconv 1.0.88;makeotf.lib2.5.64775</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Montserrat-Bold.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Oswald-DemiBold</stFnt:fontName>
                  <stFnt:fontFamily>Oswald</stFnt:fontFamily>
                  <stFnt:fontFace>DemiBold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>3.0; ttfautohint (v0.95) -l 8 -r 50 -G 200 -x 0 -w "G" -W -c</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Oswald-DemiBold.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.976471 .984314 .988235 rgb
f
287.01 138.26 mo
298.91 145.12 li
322.64 145.12 li
322.64 222.82 li
322.64 257.71 290.06 286.1 250 286.1 cv
209.94 286.1 177.36 257.71 177.36 222.82 cv
177.36 145.12 li
201.21 145.12 li
213.07 138.26 li
170.5 138.26 li
170.5 222.82 li
170.5 261.49 206.16 292.96 250 292.96 cv
293.84 292.96 329.5 261.49 329.5 222.82 cv
329.5 138.26 li
287.01 138.26 li
cp
level3{
gsave
clp
[92.7766 160.694 -160.694 92.7766 208.176 116.508 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.854902 0 .415686 ]
/C1 [.45098 .231373 .894118 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[92.7766 160.694 -160.694 92.7766 208.176 116.508 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~g=b03f[na,f%/C%e^W*te'landF$@gd*L%acHa\Zc-4DTbKJ&NaiVZGaN)?A`l?!:`Pf^4_o'@._83t'
^q[Y!^:q:o]tD"i]=YYc\[f8\\@8rU[^NTO['[3HZa-mBZ*CO;Yck75Y-+n/XK8M(X/`2"WMuhpW2HPj
VP^2dUnjf]US=KWTqS-PTV%jJSt;LDS=H+=S!oe7R@0G0R$X/*QBmf$Pa%AqPEM)kOcb`eO,o?^NfB$X
N/W[QMi*CKM2@%ELPLY>L4t>8KS4u1K7\]+JUr?%It)rsIXQWmI!g9fH[:!`H$OXZGB\7SG'.qMFEDSF
~>
<~z!!**$!<N<(!WiH+!s8Z/"9\l3"U,&6"pP8:#6tJ>#RC\A#mgnE$47+I$O[=M$OdFP$k3XT%1WjX%Ls!
[%hB3_&.fEc&J5Tf&eYfj',)#n'GM5q'bqGu()@Z$(Ddl((Dmu+(`=2/)&aD3)B'P6)]Kb:*#ot>*??.
A*Zc@E+!2RI+<VdL+X&!P+sJ3T,9nEX,:"N[,UF`_,pjrc-71)f-RU;j-n$Mn.4H\q.Olnu.k<,$/1`>
'/M/P+/hSb/0/"t30/,(60JP::0etL>1,:XA1G^jE1c.'I2)R6L2E!HP2`EZT3&ilW3B9)[3]];_~>
<~C2.L!CM[g(D/O60DfBZ8EH6)@F*)MGF`hkNGB\:VH$O^^H[C-fI=6QnIXcitJ:W9'JqJ]/KS>,7L51P?
LkpnEMMd=MN/WaUNfK0]OH>TeP*1ulPE_;sQ'R`&Q^F/.R@9S6S"-"=SXl@DT:_dLTqS3TUSFW\V5:&d
Vl-GkW2ZbrWiN2%XKAV-Y-5%5Yd(I<ZEggC['[6K[^NZS\@B)[]"5Mc]=bei]tV4q^VIY$_8=(,_o0L4
`Poj:a2c9BaiV]JbKJ,Rc-=PZcd0qad*^7hdaQ[peCE+#f%8O+f\+s2g=k<9gt^`AhVR/Ii8ESQio9"Y
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
306.84 149.69 mo
310.81 151.98 li
315.79 151.98 li
315.79 222.82 li
315.79 253.93 286.27 279.25 250 279.25 cv
213.73 279.25 184.21 253.93 184.21 222.82 cv
184.21 151.98 li
189.35 151.98 li
193.31 149.69 li
181.93 149.69 li
181.93 222.82 li
181.93 255.19 212.46 281.53 250 281.53 cv
287.54 281.53 318.07 255.19 318.07 222.82 cv
318.07 149.69 li
306.84 149.69 li
cp
level3{
gsave
clp
[79.267 137.294 -137.294 79.267 214.162 131.081 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.933333 .741177 .184314 ]
/C1 [.854902 .337255 .0941177 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.267 137.294 -137.294 79.267 214.162 131.081 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~md9E/mHs<.mHs<.mHj3+m-O**m-O**m-O'(lg*m&lg*m&lg*m%lK[["lK[["lK[["l07Hsl07Hsl07Hs
l0.?pkih6okih6oki_-lkND$kkND$kkND!ik2tggk2tggk2tgfjlPUcjlPUcjlPUcjQ,C_jQ,C_jQ,C_
jQ#:\j5]1[j5]1[j5T(Xio8tWio8tWio8qUiSibSiSibSiSibRi8EPOi8EPOi8EPOhr!>Khr!>Khr!>K
hqm5HhVR,GhVR,GhVI#Dh;-oCh;-oCh;-lAgt^]?gt^]?gt^]>gY:K;gY:K;gY:K;g=k97g=k97g=k97
~>
<~]tD"i]=PSb\[f5[\@8rU[^NTO['[3HZa-mBZ*CO;Yck75Y-+n/XK8M(X/`2"WMuhpW2HPjVP^2dUnjf]
US=KWTqS-PTV%jJSt;LDS=H+=S!oe6R@0G0Q^=&)QBd`#Pa%AqPEM)kOcb`eO,o?^NfB$XN/W[QMi*CK
M2@%ELPLY>L4t>8KS4u1K7\]+JUr?%It)rsIXQWmI!g9fH[:!`H$OXZGB\4RG'.qLFEDSFEcQ2?EH#l9
Df9N2DJa6,Ci!m&C2.KtBkV0nB4kggAn>OaA7T1[@U`eT@:3JN?XI,G?<piA>[1K;>$>*4=]ed.='&F'
~>
<~0.nk0/hSb//hSb//M/P+/M/P+/M/P*/1`>'/1`>'/1`;%.k<,#.k<,#.k3"u.Olnt.Olnt.4H\p.4H\p
.4H\o-n$Jl-n$Jl-n$Gj-RU8h-RU8h-RU5f-71&d-71&d-7'ra,pai`,pai`,U=W\,U=W\,U=W[,9nEX
,9nEX,9nBV+sJ3T+sJ3T+sA*Q+X&!P+X&!P+<VdL+<VdL+<VdK+!2RH+!2RH+!2RG*Zc@D*Zc@D*Zc=B
*??.@*??.@*?6%=*#oq<*#oq<)]K_8)]K_8)]K_7)B'M4)B'M4)B'J2)&X;0)&X;0)&O2-(`4),(`4),
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
357.205 194.478 mo
357.325 182.23 li
364.524 181.358 370.656 175.099 371.22 167.83 cv
371.22 167.83 li
365.058 168.187 359.531 172.545 357.365 178.231 cv
357.447 169.849 li
361.587 164.14 361.375 155.666 356.752 150.265 cv
352.023 155.575 351.645 164.043 355.673 169.833 cv
355.59 178.216 li
353.537 172.488 348.096 168.02 341.942 167.543 cv
342.362 174.822 348.371 181.2 355.551 182.213 cv
355.431 194.462 li
353.378 188.734 347.937 184.267 341.782 183.789 cv
342.203 191.068 348.211 197.447 355.391 198.459 cv
355.271 210.709 li
353.218 204.981 347.777 200.514 341.622 200.036 cv
342.043 207.315 348.052 213.693 355.232 214.706 cv
355.111 226.955 li
353.058 221.228 347.617 216.761 341.463 216.283 cv
341.463 216.283 li
341.884 223.562 347.892 229.94 355.072 230.953 cv
354.952 243.202 li
352.898 237.474 347.457 233.007 341.303 232.53 cv
341.724 239.809 347.732 246.187 354.912 247.2 cv
354.785 260.149 li
356.559 260.166 li
356.687 247.217 li
363.885 246.345 370.018 240.087 370.582 232.818 cv
364.419 233.174 358.891 237.533 356.726 243.219 cv
356.846 230.97 li
364.045 230.099 370.177 223.84 370.741 216.571 cv
364.579 216.927 359.051 221.286 356.886 226.972 cv
357.006 214.724 li
364.204 213.852 370.337 207.593 370.901 200.324 cv
364.739 200.68 359.211 205.039 357.045 210.725 cv
357.166 198.477 li
364.364 197.605 370.496 191.346 371.06 184.077 cv
364.898 184.434 359.371 188.792 357.205 194.478 cv
cp
level3{
gsave
clp
[58.5214 117.043 -117.043 58.5214 331.36 151.709 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[58.5214 117.043 -117.043 58.5214 331.36 151.709 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
144.682 194.478 mo
144.802 182.23 li
152.001 181.358 158.133 175.099 158.697 167.83 cv
158.697 167.83 li
152.535 168.187 147.007 172.545 144.842 178.231 cv
144.924 169.849 li
149.064 164.14 148.852 155.666 144.229 150.265 cv
139.5 155.575 139.122 164.043 143.15 169.833 cv
143.067 178.216 li
141.014 172.488 135.573 168.02 129.418 167.543 cv
129.839 174.822 135.848 181.2 143.028 182.213 cv
142.908 194.462 li
140.855 188.734 135.414 184.267 129.259 183.789 cv
129.68 191.068 135.688 197.447 142.868 198.459 cv
142.748 210.709 li
140.695 204.981 135.254 200.514 129.099 200.036 cv
129.52 207.315 135.529 213.693 142.709 214.706 cv
142.588 226.955 li
140.535 221.228 135.094 216.761 128.94 216.283 cv
128.94 216.283 li
129.36 223.562 135.369 229.94 142.549 230.953 cv
142.429 243.202 li
140.375 237.474 134.934 233.007 128.78 232.53 cv
129.201 239.809 135.209 246.187 142.389 247.2 cv
142.262 260.149 li
144.036 260.166 li
144.164 247.217 li
151.362 246.345 157.495 240.087 158.058 232.818 cv
151.896 233.174 146.368 237.533 144.203 243.219 cv
144.323 230.97 li
151.522 230.099 157.654 223.84 158.218 216.571 cv
152.056 216.927 146.528 221.286 144.363 226.972 cv
144.483 214.724 li
151.681 213.852 157.814 207.593 158.378 200.324 cv
152.215 200.68 146.688 205.039 144.522 210.725 cv
144.643 198.477 li
151.841 197.605 157.973 191.346 158.537 184.077 cv
152.375 184.434 146.848 188.792 144.682 194.478 cv
cp
level3{
gsave
clp
[58.5214 117.043 -117.043 58.5214 118.837 151.709 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[58.5214 117.043 -117.043 58.5214 118.837 151.709 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
250.538 259.24 mo
250.538 257.581 li
250.538 257.581 li
250.538 257.581 li
250.538 257.581 259.072 253.881 273.54 253.881 cv
280.191 253.881 288.095 254.662 297.004 256.945 cv
303.102 202.137 li
303.908 203.796 li
297.716 258.604 li
288.671 256.321 280.646 255.54 273.893 255.54 cv
259.203 255.54 250.538 259.24 250.538 259.24 cv
303.102 202.136 mo
303.102 202.136 303.102 202.136 303.102 202.136 cv
303.102 202.136 li
303.102 202.136 li
level3{
gsave
clp
[-45.8129 -16.504 16.504 -45.8129 302.731 240.023 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.345098 .6 1 ]
/C1 [.309804 .223529 .933333 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-45.8129 -16.504 16.504 -45.8129 302.731 240.023 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~=BAR*='&I)='&I)='&I)='&I)='&I)='&I)=&r@&<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`N."<E3%!
<E3%!<E3%!<E3%!<E3%!<E3%!<E3!t<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cdp;c?Un;c?Un;c?Un
;c?Un;c?Un;c?Un;c?Um;GpCj;GpCj;GpCj;GpCj;GpCj;GpCj;GpCi;,L1f;,L1f;,L1f;,L1f;,L1f
;,L1f;,L1f:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:f'tb:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^
~>
<~R@'A.Q^=#(QBd`"Pa%AqPEM)kOcb`eOH5H_NfK*YNJrgSMi3IMMM[1GLkphALPCP;KnY25KS+o/JqAQ)
JUi9#It)orIXQWlI!g9fH[:!`H$OXZG^"@TG'8"NF`__HF)uABEcH)<E,]`6Df0H0D/F**Chmg$C2.Hs
BkV0mB4kggAn>OaA7T1[@q&nU@:<PO?sd8I?=$oC?!LW=>?b97=]nm0=BJX+=&r@%<E3!t<)Z^n;Gp@h
:f'ta:JX_\9he>U9MA)P8kM]I8P)HD7n6'=7Rfg86psF16UO1,5s[e%5X7Ou5!D.n4Ztni4$,Mb3]]8]
~>
<~s8N#srr2orrr2orrr2orrVc]nrVc]nrVc]nrVc]mr;?Kjr;?Kjr;?Kjr;?Hhqtp9fqtp9fqtp9fqtg0c
qYL'bqYL'bqYL'bq>'j^q>'j^q>'j^q>'j]q"XXZq"XXZq"XXZq"XUXp\4FVp\4FVp\4FVp\+=Sp@e4R
p@e4Rp@e4Rp%A"Np%A"Np%A"Np%A"Mo^qeJo^qeJo^qeJo^qbHoCMSFoCMSFoCMSFoCDJCo()ABo()AB
o()ABnaZ/>naZ/>naZ/>naZ/=nF5r:nF5r:nF5r:nF5o8n*f`6n*f`6n*f`6n*]W3mdBN2mdBN2mdBN2
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
250.538 257.581 li
250.538 257.581 261.381 251.469 279.206 251.469 cv
283.621 251.469 288.461 251.843 293.674 252.778 cv
299.035 200.356 li
301.602 201.411 303.081 202.126 303.102 202.136 cv
303.102 202.136 303.102 202.136 303.102 202.136 cv
303.102 202.136 303.102 202.136 303.102 202.136 cv
303.102 202.137 li
297.004 256.945 li
288.095 254.662 280.191 253.881 273.54 253.881 cv
259.072 253.881 250.538 257.581 250.538 257.581 cv
level3{
gsave
clp
[-16.3001 -3.77269 2.41484 -15.3836 308.698 235.947 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-16.3001 -3.77269 2.41484 -15.3836 308.698 235.947 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
250.538 257.581 li
250.538 257.581 263.34 248.516 283.801 248.516 cv
285.937 248.516 288.157 248.615 290.454 248.833 cv
295.412 195.957 li
297.902 196.814 299.335 197.423 299.335 197.423 cv
299.035 200.356 li
293.674 252.778 li
288.461 251.843 283.621 251.469 279.206 251.469 cv
261.381 251.469 250.538 257.581 250.538 257.581 cv
level3{
gsave
clp
[-15.2106 -2.25343 2.25343 -15.2106 304.691 230.569 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.945098 .8 .376471 ]
/C1 [.960784 .886275 .666667 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.960784 .886275 .666667 ]
/C1 [.898039 .623529 .184314 ]
/N 1 
>>
]
/Bounds [.30985 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-15.2106 -2.25343 2.25343 -15.2106 304.691 230.569 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~naZ/>naZ/>naZ/>naZ/>naZ/>o()ABo()ABo()ABo()ABo()ABoCMSFoCMSFoCMSFoCMSFoCMSFo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeIoCMSFoCMSFoCMPDo()ABo()ABo'u8?naZ/>naZ/>nF5r:
nF5r:nF5r9n*f`6n*f`6n*f]4mdBN2mdBN2md9E/mHs<.mHs<.m-O**m-O**m-O*)lg*m&lg*m&lg*j$
lK[["lK[["lKRQtl07Hsl07Hskih6okih6okih6nkND$kkND$kkND!ik2tggk2tggk2k^djlPUcjlPUc
~>
<~bfn;Tc-=MXcHa_]cd0qad*U.edF$CjdaHUne'umseCE+"e^i=&f@SX+f\"j0g"G'4g=k98gY:N=gt^`A
h;7#FhV[5Jhr*GNiSibSiSi_Qi8<GLhVR)Eh;$f@gY:H9g=b04f\"g-f@JO'e^`1!eC2mpdaHOjdEp7d
cd0n^cHXVXbfn8Rb0%lKaiVWFa2c6?`l?!:`5KU3_o'@._83t'^q[Y!^:q=p]tD"j]=Y\d]",A^\@B&X
\$i`R[C*BK['R*FZEga?Z*:I:YHP+3Y-"h.XK8J'X/`2!WMuhpW2HPjVP^2dV50o^USFQXU7n9RTV.pL
~>
<~?smDP@q9._B4u!oCM[j)DJsK6EcZ>FG'A1VH@(!dI=?ZrJV&N-KnbA=M2@+JN/`jYOHG]iPa.Q$Q^F20
S"-%@T:hmPUSO`_VPgAlWMlbnVP^2cUSFQWTqJ$MSt2CAS!oe6R$a5+QBd\uPEM&jOH5H_NJrgSMMd7H
Lkg_>KnP)2Jq8K'It)oqI!g9eH?ja[GBS.PFE;MDEH,r9Df0E.Chmd#BkV0mAn>Oa@q/tV@:3GL?<pf@
>?Y35=BJX*<E3!s;c6Ii:esk^9h\5R8kMZG84Q-<779L16:!n&5<h=p4?P\d3]T/Z2`<NN1c$pC0ek@8
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
250.538 257.581 264.9 244.913 287.252 244.715 cv
291.773 191.774 li
294.256 192.442 295.692 192.96 295.692 192.96 cv
295.412 195.957 li
290.454 248.833 li
288.157 248.615 285.937 248.516 283.801 248.516 cv
263.34 248.516 250.538 257.581 250.538 257.581 cv
level3{
gsave
clp
[-41.3128 -17.2763 17.2763 -41.3128 308.826 240.204 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-41.3128 -17.2763 17.2763 -41.3128 308.826 240.204 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
250.538 207.93 li
253.672 207.902 256.8 207.626 259.825 207.102 cv
256.988 208.137 254.717 209.236 253.079 210.13 cv
253.079 212.073 li
256.972 209.827 266.27 205.409 279.246 205.409 cv
279.25 205.409 279.254 205.409 279.258 205.409 cv
281.709 205.409 284.299 205.568 288.003 206.061 cv
288.147 204.372 li
284.41 203.877 281.764 203.715 279.258 203.715 cv
275.463 203.716 271.974 204.082 268.83 204.659 cv
270.659 203.955 272.393 203.138 274.003 202.207 cv
276.512 200.752 278.544 199.122 280.095 197.385 cv
282.417 197.517 285.089 197.828 288.652 198.453 cv
288.797 196.759 li
285.824 196.242 283.45 195.939 281.374 195.775 cv
281.384 195.761 281.393 195.747 281.403 195.734 cv
283.052 193.378 283.871 190.867 283.869 188.365 cv
283.868 186.856 li
288.889 187.411 292.07 188.302 292.07 188.302 cv
291.773 191.774 li
287.252 244.715 li
264.9 244.913 250.538 257.581 250.538 257.581 cv
250.538 257.581 li
250.538 257.581 li
250.538 257.581 li
285.492 235.455 mo
269.814 236.059 258.284 242.54 253.079 246.122 cv
253.079 248.19 li
257.504 244.983 269.168 237.822 285.348 237.151 cv
285.492 235.455 li
285.629 227.576 mo
269.862 227.583 258.294 233.723 253.079 237.126 cv
253.079 239.159 li
257.547 236.087 269.301 229.271 285.608 229.271 cv
285.616 229.271 285.621 229.271 285.629 229.271 cv
285.758 229.271 285.89 229.275 286.02 229.276 cv
286.165 227.584 li
285.987 227.582 285.806 227.576 285.629 227.576 cv
283.488 219.699 mo
268.807 219.705 258.048 225.063 253.079 228.129 cv
253.079 230.127 li
257.372 227.336 268.302 221.393 283.471 221.393 cv
283.477 221.393 283.482 221.393 283.488 221.393 cv
284.53 221.393 285.603 221.436 286.685 221.495 cv
286.829 219.805 li
285.698 219.743 284.578 219.699 283.488 219.699 cv
281.363 211.745 mo
267.767 211.749 257.8 216.385 253.079 219.131 cv
253.079 221.1 li
257.173 218.587 267.279 213.439 281.348 213.439 cv
281.353 213.439 281.358 213.439 281.363 213.439 cv
283.176 213.439 285.064 213.528 287.344 213.775 cv
287.488 212.087 li
285.161 211.836 283.225 211.745 281.363 211.745 cv
250.538 194.327 mo
250.538 194.327 li
261.231 188.143 li
261.231 188.143 li
250.538 194.327 li
level3{
gsave
clp
[41.5321 0 0 41.5321 250.538 222.001 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
253.079 239.159 mo
253.079 237.126 li
258.294 233.723 269.862 227.583 285.629 227.576 cv
285.806 227.576 285.987 227.582 286.165 227.584 cv
286.02 229.276 li
285.89 229.275 285.758 229.271 285.629 229.271 cv
285.621 229.271 285.616 229.271 285.608 229.271 cv
269.301 229.271 257.547 236.087 253.079 239.159 cv
level3{
gsave
clp
[41.5321 0 0 41.5321 250.538 222.001 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~lF]mW]MIh+;!P_klFg*\^/O=2<9h1slb?Hc^K9a9=R3b)lbHZh_-60@>O0+2lbZrn_HuQF?gGR:lb[)r
_IDiKA*_$Cm)*E$`+A;RBC*QMm)<]*`G4bYC@&rUm)Eo/a):7aDX>D^m)X/4aDpRfEpUnhmE'J;a`[!n
G4!FrmE0\@bB`KuHL8n&mEBqEb^Jm&IdPC0mEL.Jc@G<-JaLa8m`pLRc@kW2L$m9Ama$[Vc\V#9M=/`J
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ma-jZc\Uu6L[EB@mEL=Ob_#3)JF(F.m)XVAa*[-lHL&Oqlbn#5_fk=^FR$_`lG7K*^i/JPDX"lOl+Lir
]P6TABBZp<kdY0e[pnO/@HY(+kI"UYZs;b">3<+mk-8%NYZBni<9C>^k,hMCXAJ#Z:?AKLjf(o7W(H'J
8*$O:jJ>9*UdO1;60"\(j.SZsTKM5+3oZbligr*gSMoGs2;t#\iL)I[Qn[Hb0&W$Ii0>hNPUYLR.,U48
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.30985 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~lK[["lK[["lK[[#lg*m&lg*m&lg*m&lg*m&lg*m'm-O**m-O**m-O**m-O**m-O*+mHs<.mHs<.mHs<.
mHs<.mHs</mdBN2mdBN2mdBN1mHs<.mHs<.mHs9,m-O**m-O**m-F!'lg*m&lg*m&lK[["lK[["lK[[!
l07Hsl07Hsl07Hrkih6okih6okih3mkND$kkND$kkN:phk2tggk2tggk2tggk2tggk2tggjlPUcjlPUc
jlPUbjQ,C_jQ,C_jQ,@]j5]1[j5]1[j5T(Xio8tWio8tWiSibSiSibSiSibSi8EPOi8EPOi8EPNhr!>K
~>
<~]Y(nj]tM+n^:q=r^V@S"^qmk'_8=(+_SX1,_o'C0`5KU4`Pog8`l?'>a2c9BaN2KFai_cKb0.uObKS2S
bg"DXcHa_\cHa_]cd0qacd0q_cHa_\c-=MWbfn8RbK@uLaiMNCa2Z-=`Pog7`5BL1_SX1,_SX.*_8*k$
^V@Ls^:h4n]Y(nh]=YYc\[f5Z\$rfS[^NWQ[C*BK['R*FZEgd@Z*CO;YHP.4Y-+n/XfSV*X/i8#Wi;ts
W2QYmVl-DhV5:#aUnjc\US=KWTqS-PTV%jKT:_aISt;LDS=H+=S"#k7R@'A/Q^=#(QBd`#Pa%DrPEV2o
~>
<~:/4S];,L4i<)cgt='/R,=^#$8?!UcD?smDP@q9+]AS5[iBkhBtCi+'-DJsK6EcQ5CF`qqPG^4U]H[C0i
IXcitJV&N-KS5&6LPUbCM26tCLPCP;KS5#2JqAQ(J:E&tIXQTkH[:!aH$O[[GBS.QF`heIEcQ/>EH#i6
DJj<.Chmg$Bk_9pB4kgfA7T4\@q&kT@:3GL?<pf@>[(E9=]ed.=BJX*<E3!s;c?Rk;,C(c:JOVY9M8#O
8kDTF7n6$<77BU36UO1+5sRY!5!D+m4?GVc3B9)Z2`EWQ2)R6J1c$mB1,1I:0.nh./M&G'.Ocep-n$Gi
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
253.079 230.127 mo
253.079 228.129 li
258.048 225.063 268.807 219.705 283.488 219.699 cv
284.578 219.699 285.698 219.743 286.829 219.805 cv
286.685 221.495 li
285.603 221.436 284.53 221.393 283.488 221.393 cv
283.482 221.393 283.477 221.393 283.471 221.393 cv
268.302 221.393 257.372 227.336 253.079 230.127 cv
level3{
gsave
clp
[41.5321 0 0 41.5321 250.538 222.001 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
253.079 248.19 mo
253.079 246.122 li
258.284 242.54 269.814 236.059 285.492 235.455 cv
285.348 237.151 li
269.168 237.822 257.504 244.983 253.079 248.19 cv
level3{
gsave
clp
[41.5321 0 0 41.5321 250.538 222.001 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
288.652 198.453 mo
285.089 197.828 282.417 197.517 280.095 197.385 cv
280.566 196.857 280.992 196.32 281.374 195.775 cv
283.45 195.939 285.824 196.242 288.797 196.759 cv
288.652 198.453 li
level3{
gsave
clp
[41.5321 0 0 41.5321 250.538 222.001 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
253.079 212.073 mo
253.079 210.13 li
254.717 209.236 256.988 208.137 259.825 207.102 cv
262.976 206.557 266.015 205.742 268.83 204.659 cv
271.974 204.082 275.463 203.716 279.258 203.715 cv
281.764 203.715 284.41 203.877 288.147 204.372 cv
288.003 206.061 li
284.299 205.568 281.709 205.409 279.258 205.409 cv
279.254 205.409 279.25 205.409 279.246 205.409 cv
266.27 205.409 256.972 209.827 253.079 212.073 cv
level3{
gsave
clp
[41.5321 0 0 41.5321 250.538 222.001 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
253.079 221.1 mo
253.079 219.131 li
257.8 216.385 267.767 211.749 281.363 211.745 cv
283.225 211.745 285.161 211.836 287.488 212.087 cv
287.344 213.775 li
285.064 213.528 283.176 213.439 281.363 213.439 cv
281.358 213.439 281.353 213.439 281.348 213.439 cv
267.279 213.439 257.173 218.587 253.079 221.1 cv
level3{
gsave
clp
[41.5321 0 0 41.5321 250.538 222.001 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
253.78 255.839 257.274 254.601 260.817 253.601 cv
264.37 252.618 268.011 251.955 271.678 251.547 cv
272.595 251.443 273.517 251.394 274.436 251.315 cv
275.817 251.207 li
277.201 251.17 li
279.969 251.11 li
282.737 251.203 li
284.586 251.217 286.419 251.471 288.26 251.61 cv
290.096 251.806 291.916 252.127 293.745 252.379 cv
293.27 252.737 li
294.171 243.507 295.191 234.289 296.153 225.065 cv
297.698 211.239 li
299.334 197.423 li
298.141 211.285 li
296.855 225.137 li
295.93 234.364 295.063 243.598 294.077 252.819 cv
294.032 253.239 li
293.602 253.177 li
291.792 252.917 289.99 252.587 288.173 252.382 cv
286.351 252.233 284.535 251.97 282.704 251.946 cv
279.962 251.836 li
277.219 251.867 li
275.846 251.878 li
274.476 251.96 li
273.564 252.022 272.648 252.053 271.737 252.14 cv
268.089 252.465 264.472 253.092 260.909 253.953 cv
257.355 254.831 253.834 255.948 250.538 257.581 cv
cp
level3{
gsave
clp
[22.9873 39.8152 -39.8152 22.9873 267.887 215.293 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.9873 39.8152 -39.8152 22.9873 267.887 215.293 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
253.404 255.626 256.539 254.086 259.753 252.774 cv
262.976 251.475 266.311 250.438 269.713 249.704 cv
273.116 248.997 276.566 248.414 280.05 248.279 cv
281.787 248.124 283.531 248.183 285.273 248.166 cv
287.015 248.179 288.752 248.35 290.492 248.434 cv
290.056 248.795 li
290.871 239.478 291.831 230.174 292.717 220.863 cv
294.157 206.907 li
295.693 192.96 li
294.608 206.949 li
293.43 220.93 li
292.569 230.243 291.784 239.563 290.853 248.87 cv
290.814 249.253 li
290.416 249.231 li
288.697 249.138 286.979 248.957 285.257 248.934 cv
283.534 248.94 281.809 248.87 280.09 249.013 cv
276.644 249.145 273.22 249.628 269.833 250.271 cv
266.441 250.921 263.129 251.931 259.88 253.101 cv
256.641 254.298 253.467 255.725 250.538 257.581 cv
cp
level3{
gsave
clp
[23.302 40.3603 -40.3603 23.302 264.646 210.602 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[23.302 40.3603 -40.3603 23.302 264.646 210.602 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
253.045 255.431 255.822 253.604 258.705 251.982 cv
261.586 250.353 264.619 248.985 267.743 247.877 cv
270.866 246.774 274.065 245.834 277.343 245.292 cv
280.605 244.653 283.93 244.439 287.248 244.319 cv
286.857 244.681 li
287.603 235.274 288.48 225.878 289.302 216.478 cv
290.636 202.386 li
292.07 188.302 li
291.094 202.425 li
290.02 216.539 li
289.236 225.943 288.507 235.351 287.646 244.749 cv
287.614 245.1 li
287.255 245.111 li
283.98 245.209 280.696 245.398 277.469 246.01 cv
274.231 246.538 271.044 247.366 267.931 248.412 cv
264.806 249.436 261.795 250.782 258.866 252.28 cv
255.945 253.795 253.117 255.519 250.538 257.581 cv
cp
level3{
gsave
clp
[23.6234 40.9169 -40.9169 23.6234 261.375 205.744 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[23.6234 40.9169 -40.9169 23.6234 261.375 205.744 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
250.538 259.24 mo
250.538 259.24 241.873 255.54 227.183 255.54 cv
220.43 255.54 212.405 256.321 203.359 258.604 cv
197.168 203.796 li
197.974 202.136 li
197.974 202.136 li
197.974 202.136 197.974 202.136 197.974 202.136 cv
204.072 256.945 li
212.981 254.662 220.884 253.881 227.536 253.881 cv
242.004 253.881 250.538 257.581 250.538 257.581 cv
250.538 257.581 li
250.538 259.24 li
level3{
gsave
clp
[45.8129 -16.504 -16.504 -45.8129 198.345 240.023 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[45.8129 -16.504 -16.504 -45.8129 198.345 240.023 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
250.538 257.581 242.004 253.881 227.536 253.881 cv
220.884 253.881 212.981 254.662 204.072 256.945 cv
197.974 202.136 li
197.974 202.136 197.974 202.136 197.974 202.136 cv
197.994 202.127 199.474 201.411 202.041 200.356 cv
207.402 252.778 li
212.615 251.843 217.455 251.469 221.869 251.469 cv
239.695 251.469 250.538 257.581 250.538 257.581 cv
250.538 257.581 li
level3{
gsave
clp
[16.3001 -3.77269 -2.41484 -15.3836 192.378 235.947 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[16.3001 -3.77269 -2.41484 -15.3836 192.378 235.947 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
250.538 257.581 239.695 251.469 221.869 251.469 cv
217.455 251.469 212.615 251.843 207.402 252.778 cv
202.041 200.356 li
201.741 197.423 li
201.741 197.423 203.174 196.814 205.664 195.957 cv
210.622 248.833 li
212.919 248.615 215.139 248.516 217.275 248.516 cv
237.736 248.516 250.538 257.581 250.538 257.581 cv
250.538 257.581 li
level3{
gsave
clp
[15.2106 -2.25343 -2.25343 -15.2106 196.384 230.569 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.2106 -2.25343 -2.25343 -15.2106 196.384 230.569 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
250.538 257.581 237.736 248.516 217.275 248.516 cv
215.139 248.516 212.919 248.615 210.622 248.833 cv
205.664 195.957 li
205.383 192.96 li
205.383 192.96 206.82 192.442 209.302 191.774 cv
213.824 244.715 li
236.175 244.913 250.538 257.581 250.538 257.581 cv
level3{
gsave
clp
[41.3128 -17.2763 -17.2763 -41.3128 192.25 240.204 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.3128 -17.2763 -17.2763 -41.3128 192.25 240.204 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
250.538 257.581 li
250.538 257.581 li
250.538 257.581 li
250.538 257.581 li
250.538 257.581 236.175 244.913 213.824 244.715 cv
209.302 191.774 li
209.006 188.302 li
209.006 188.302 211.759 187.531 216.185 186.977 cv
216.186 188.417 li
216.188 190.951 217.031 193.484 218.717 195.861 cv
216.879 196.038 214.793 196.322 212.279 196.759 cv
212.424 198.453 li
215.493 197.915 217.9 197.61 219.993 197.451 cv
221.547 199.178 223.577 200.797 226.083 202.243 cv
227.445 203.028 228.896 203.732 230.418 204.354 cv
227.765 203.956 224.892 203.716 221.818 203.715 cv
219.312 203.715 216.666 203.877 212.929 204.372 cv
213.073 206.061 li
216.777 205.568 219.366 205.409 221.818 205.409 cv
221.822 205.409 221.826 205.409 221.83 205.409 cv
234.806 205.409 244.104 209.827 247.996 212.073 cv
247.996 210.13 li
246.508 209.318 244.498 208.336 242.015 207.388 cv
244.636 207.751 247.319 207.933 250.002 207.933 cv
250.181 207.933 250.359 207.932 250.538 207.93 cv
250.538 257.581 li
215.584 235.455 mo
215.728 237.151 li
231.908 237.822 243.572 244.983 247.996 248.19 cv
247.996 246.122 li
242.791 242.54 231.262 236.059 215.584 235.455 cv
215.468 229.271 mo
231.774 229.271 243.529 236.087 247.996 239.159 cv
247.996 237.126 li
242.782 233.723 231.214 227.583 215.447 227.576 cv
215.27 227.576 215.089 227.582 214.911 227.584 cv
215.056 229.276 li
215.186 229.275 215.318 229.271 215.447 229.271 cv
215.455 229.271 215.46 229.271 215.468 229.271 cv
217.605 221.393 mo
232.774 221.393 243.704 227.336 247.996 230.127 cv
247.996 228.129 li
243.028 225.063 232.269 219.705 217.588 219.699 cv
216.498 219.699 215.378 219.743 214.247 219.805 cv
214.391 221.495 li
215.473 221.436 216.545 221.393 217.588 221.393 cv
217.594 221.393 217.599 221.393 217.605 221.393 cv
219.728 213.439 mo
233.797 213.439 243.902 218.587 247.996 221.1 cv
247.996 219.131 li
243.276 216.385 233.309 211.749 219.713 211.745 cv
217.851 211.745 215.915 211.836 213.588 212.087 cv
213.732 213.775 li
216.012 213.528 217.899 213.439 219.713 213.439 cv
219.718 213.439 219.723 213.439 219.728 213.439 cv
250.027 194.623 mo
250.027 194.623 li
250.538 194.327 li
250.538 194.327 li
250.027 194.623 li
level3{
gsave
clp
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
247.996 239.159 mo
243.529 236.087 231.774 229.271 215.468 229.271 cv
215.46 229.271 215.455 229.271 215.447 229.271 cv
215.318 229.271 215.186 229.275 215.056 229.276 cv
214.911 227.584 li
215.089 227.582 215.27 227.576 215.447 227.576 cv
231.214 227.583 242.782 233.723 247.996 237.126 cv
247.996 239.159 li
level3{
gsave
clp
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
247.996 230.127 mo
243.704 227.336 232.774 221.393 217.605 221.393 cv
217.599 221.393 217.594 221.393 217.588 221.393 cv
216.545 221.393 215.473 221.436 214.391 221.495 cv
214.247 219.805 li
215.378 219.743 216.498 219.699 217.588 219.699 cv
232.269 219.705 243.028 225.063 247.996 228.129 cv
247.996 230.127 li
level3{
gsave
clp
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
247.996 248.19 mo
243.572 244.983 231.908 237.822 215.728 237.151 cv
215.584 235.455 li
231.262 236.059 242.791 242.54 247.996 246.122 cv
247.996 248.19 li
level3{
gsave
clp
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
212.424 198.453 mo
212.279 196.759 li
214.793 196.322 216.879 196.038 218.717 195.861 cv
219.099 196.399 219.524 196.93 219.993 197.451 cv
217.9 197.61 215.493 197.915 212.424 198.453 cv
level3{
gsave
clp
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
247.996 212.073 mo
244.104 209.827 234.806 205.409 221.83 205.409 cv
221.826 205.409 221.822 205.409 221.818 205.409 cv
219.366 205.409 216.777 205.568 213.073 206.061 cv
212.929 204.372 li
216.666 203.877 219.312 203.715 221.818 203.715 cv
224.892 203.716 227.765 203.956 230.418 204.354 cv
233.974 205.809 237.92 206.82 242.015 207.388 cv
244.498 208.336 246.508 209.318 247.996 210.13 cv
247.996 212.073 li
level3{
gsave
clp
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
247.996 221.1 mo
243.902 218.587 233.797 213.439 219.728 213.439 cv
219.723 213.439 219.718 213.439 219.713 213.439 cv
217.899 213.439 216.012 213.528 213.732 213.775 cv
213.588 212.087 li
215.915 211.836 217.851 211.745 219.713 211.745 cv
233.309 211.749 243.276 216.385 247.996 219.131 cv
247.996 221.1 li
level3{
gsave
clp
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
247.242 255.948 243.721 254.831 240.166 253.953 cv
236.604 253.092 232.987 252.465 229.339 252.14 cv
228.428 252.053 227.512 252.022 226.6 251.96 cv
225.23 251.878 li
223.857 251.867 li
221.114 251.836 li
218.372 251.946 li
216.541 251.97 214.725 252.233 212.903 252.382 cv
211.086 252.587 209.284 252.917 207.474 253.177 cv
207.044 253.239 li
206.999 252.819 li
206.013 243.598 205.146 234.364 204.221 225.137 cv
202.935 211.285 li
201.741 197.423 li
203.378 211.239 li
204.923 225.065 li
205.885 234.289 206.905 243.507 207.805 252.737 cv
207.331 252.379 li
209.16 252.127 210.98 251.806 212.816 251.61 cv
214.657 251.471 216.49 251.217 218.339 251.203 cv
221.106 251.11 li
223.875 251.17 li
225.259 251.207 li
226.64 251.315 li
227.559 251.394 228.481 251.443 229.398 251.547 cv
233.065 251.955 236.706 252.618 240.259 253.601 cv
243.802 254.601 247.296 255.839 250.538 257.581 cv
cp
level3{
gsave
clp
[-22.9873 39.8152 -39.8152 -22.9873 233.189 215.293 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-22.9873 39.8152 -39.8152 -22.9873 233.189 215.293 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
247.609 255.725 244.435 254.298 241.196 253.101 cv
237.947 251.931 234.634 250.921 231.243 250.271 cv
227.856 249.628 224.432 249.145 220.986 249.013 cv
219.267 248.87 217.542 248.94 215.819 248.934 cv
214.097 248.957 212.379 249.138 210.66 249.231 cv
210.262 249.253 li
210.223 248.87 li
209.292 239.563 208.507 230.243 207.646 220.93 cv
206.467 206.949 li
205.383 192.96 li
206.919 206.907 li
208.359 220.863 li
209.245 230.174 210.205 239.478 211.02 248.795 cv
210.584 248.434 li
212.324 248.35 214.061 248.179 215.803 248.166 cv
217.545 248.183 219.289 248.124 221.026 248.279 cv
224.51 248.414 227.96 248.997 231.363 249.704 cv
234.765 250.438 238.1 251.475 241.323 252.774 cv
244.537 254.086 247.672 255.626 250.538 257.581 cv
cp
level3{
gsave
clp
[-23.302 40.3603 -40.3603 -23.302 236.43 210.602 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-23.302 40.3603 -40.3603 -23.302 236.43 210.602 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
250.538 257.581 mo
247.959 255.519 245.131 253.795 242.21 252.28 cv
239.281 250.782 236.27 249.436 233.145 248.412 cv
230.032 247.366 226.845 246.538 223.607 246.01 cv
220.38 245.398 217.095 245.209 213.821 245.111 cv
213.462 245.1 li
213.43 244.749 li
212.569 235.351 211.84 225.943 211.056 216.539 cv
209.981 202.425 li
209.006 188.302 li
210.439 202.386 li
211.774 216.478 li
212.596 225.878 213.473 235.274 214.219 244.681 cv
213.828 244.319 li
217.146 244.439 220.471 244.653 223.733 245.292 cv
227.011 245.834 230.21 246.774 233.332 247.877 cv
236.457 248.985 239.49 250.353 242.371 251.982 cv
245.254 253.604 248.03 255.431 250.538 257.581 cv
cp
level3{
gsave
clp
[-23.6234 40.9169 -40.9169 -23.6234 239.701 205.744 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-23.6234 40.9169 -40.9169 -23.6234 239.701 205.744 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
250.027 194.623 mo
216.176 175.113 li
216.176 175.113 li
216.176 175.114 li
189.985 160.019 li
189.985 156.799 li
195.553 156.799 li
249.974 125.324 li
304.586 156.799 li
310.015 156.799 li
310.015 159.928 li
261.231 188.143 li
250.538 194.327 li
250.026 194.623 li
level3{
gsave
clp
[52.288 61.673 -61.673 52.288 222.84 126.374 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[52.288 61.673 -61.673 52.288 222.84 126.374 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
250.002 207.933 mo
247.319 207.933 244.636 207.751 242.015 207.388 cv
237.92 206.82 233.974 205.809 230.418 204.354 cv
228.896 203.732 227.445 203.028 226.083 202.243 cv
223.577 200.797 221.547 199.178 219.993 197.451 cv
219.524 196.93 219.099 196.399 218.717 195.861 cv
217.031 193.484 216.188 190.951 216.186 188.417 cv
216.185 186.977 li
216.179 179.774 li
250.026 199.281 li
283.862 179.712 li
283.868 186.856 li
283.869 188.365 li
283.871 190.867 283.052 193.378 281.403 195.734 cv
281.393 195.747 281.384 195.761 281.374 195.775 cv
280.992 196.32 280.566 196.857 280.095 197.385 cv
278.544 199.122 276.512 200.752 274.003 202.207 cv
272.393 203.138 270.659 203.955 268.83 204.659 cv
266.015 205.742 262.976 206.557 259.825 207.102 cv
256.8 207.626 253.672 207.902 250.538 207.93 cv
250.359 207.932 250.181 207.933 250.002 207.933 cv
250.027 194.623 mo
216.176 175.113 li
216.176 175.113 li
250.027 194.623 li
level3{
gsave
clp
[47.2128 0 0 47.2128 215.963 191.494 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.317647 .309804 .94902 ]
/C1 [.345098 .6 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.345098 .6 1 ]
/C1 [.309804 .223529 .933333 ]
/N 1 
>>
]
/Bounds [.30457 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.2128 0 0 47.2128 215.963 191.494 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~;,L1f;,L1f;,L1f;GpCj;GpCj;GpCk;c?Un;c?Un;c?Xp<)cgr<)cgr<)lpu<E3%!<E3%!<`W7%<`W7%
<`W7&='&I)='&I)='&I)='&I)='&I)='&I)='&I)='&F'<`W7%<`W7%<`W7%<`W7%<`W4#<E3%!<E3%!
<E3%!<E3%!<E3!t<)cgr<)cgr<)cgr<)cgr<)cdp;c?Un;c?Un;c?Un;c?Un;c6Lk;GpCj;GpCj;GpCj
;GpCj;Gg:g;,L1f;,L1f;,L1f;,L1f;,C(c:f'tb:f'tb:f'tb:f'tb:esk_:JXb^:JXb^:JXb^:JXb^
~>
<~:JXea;H$Op<``C+>$G6;?=.)K@:E_WAS,RgBkhF"D/O92EH6,BFEMbNG^4U^I!pHnJ:W<)KS>/8LPUeE
Mi<XUO-#KePE_>uQ^F/-Q^=#(Q'ISuPEV/lOcYZcO,f6[NJrgSMMd7ILkphAL5(D9KS+o/Jq8K'J:E&t
IXQTkH[C'bH$OXZGB\4QF`__HF)l;@EH#l8DJj<.Ci!m&C2.HrBP1siAn>OaA7K+Y@:<PO?XI,G?!U]?
>?Y35=]ed-=&r@%<E)mq;Gp@h:f'q`:/4MW9M8#N8kDTF84Q0>77BU46UO1,5s[b$5<_7o4Zkhg4$#D_
~>
<~o()ABo()DDoCMSFo^qeJo^qhLp%A"Np@e4Rp@e7Tp\4FVq"XXZq"X[\q>'j^qYL'bqYL*dqtp9fr;?Kj
r;?NlrVc]nrr2orrr2orrr2orrr2orrr)forVc]nrVc]mr;?Kjr;?Kjr;?Hhqtp9fqtp9fqYL'bqYL'b
qYL'aq>'j^q>'j^q=sa[q"XXZq"XXZp\4FVp\4FVp\4CTp@e4Rp@e4Rp@\+Op%A"Np%A"Mo^qeJo^qeJ
o^qbHoCMSFoCMSFo()ABo()ABo()AAnaZ/>naZ/>naQ&;nF5r:nF5r:n*f`6n*f`6n*f]4mdBN2mdBN2
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
249.974 122.195 mo
189.985 156.89 li
250.026 191.494 li
310.015 156.799 li
249.974 122.195 li
cp
level3{
gsave
clp
[76.0212 105.937 -105.937 76.0212 227.339 125.267 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[76.0212 105.937 -105.937 76.0212 227.339 125.267 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
261.231 188.143 mo
283.859 175.056 li
283.862 179.712 li
283.862 179.712 li
283.859 175.056 li
261.231 188.143 li
261.23 188.143 261.233 188.143 261.231 188.143 cv
.843137 .894118 .92549 rgb
f
250.538 194.327 mo
250.538 194.327 li
261.231 188.143 li
261.233 188.143 261.23 188.143 261.231 188.143 cv
250.538 194.327 li
level3{
gsave
clp
[41.5321 0 0 41.5321 250.538 222.001 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~d(3E-\m*On>gU)hd(<Z3]3s!t@F2VpdC`r9]O]F&A^S2'dCj2?^1bp.C!jY1dD'MF^MVB5DUH7<dD0_K
^i@c<Em_^Ed_U%R_KF;DGLF?Qd_g@Y_g9bKHd]i[d_pU_`IH=TJ'u;dd`$dc`IcOWK[Rkoe&I-k`eW$`
LssD%e&RBqaGeThNRPt/e&dX!acOunOjhI9e&mm'bEUK!Q.*pCe'+3.baHr(Ra]NNe'4E3c(3>/T$tuW
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~e'=T7c(3>-SC>ZMe&n',ad1ArPg[U8d`%<r`K&?aNR>Y&dDCdg_2-IRL=!\gd(Y+Y]n"GAJ'Y`Tcb"PM
\p;T3GL!^@cF.f>[;jHuE6Y_,c*D01Z"hLfB[!\mbcbU%Y%,\X@Ebf\bc>'oWa*`H>0EjHbGJ=`VGt^7
;Tbe4b+hbTU.rb'9?Ehuae))FSjg_k6cbcaaIGN:Rm4r^4i`sPa-Sg,Q8cgK29(k;`fi0tOtan=0#j#)
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.30985 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.5321 0 0 41.5321 250.538 222.001 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~d*U.dd*U.dd*U.edF$@hdF$@hdF$@hdF$@hdF$@idaHRldaHRldaHRldaHRldaHRme'ldpe'ldpe'ldp
e'ldpe'ldpe'ldpe'ldpe'ldpe'ldpe'ldpe'landaHRldaHRlda?IidF$@hdF$@hd*U.dd*U.dd*U.c
cd0q`cd0q`cd0q_cHa_\cHa_\cHa\Zc-=MXc-=MXc-4DUbfn;Tbfn;Tbfn;Tbfn;Tbfn;TbKJ)PbKJ)P
bKJ)Ob0%lLb0%lLb0%iJaiVZHaiVZHaiMQEaN2HDaN2HDa2c6@a2c6@a2c6@`l?$<`l?$<`l?$<`l?$<
~>
<~]"5Jb]=Y\e]=Y\f]Y(qk]tV4p^;%Ft^qdb$_83t(_SX1,_o'C0`5KX6`Pog8`Poj:`lH-?a2l?CaN;QG
ai_cLbKJ)Qbfn;Uc-=MYc-=MWbfe2Qb0%lKaiVWFaN)?@`l5p9`Pf^5_o'C/_SO()^qdb#^V@Ls^:h4m
]Y(kg]=Y\e]"5J`\[f5[\$rfR[C*BK['R*FZEga?Z*CR=Yct@8YHP+3Xf\_,XK8J'X/`2"WMuhpW2HPj
VP^5eV59u`USFTYU8"?TTqJ'OT:_^HSt2FCS=H+>S=H(<R[T\5R@0G/Q^3r'Q'ISuP`q;pP*1ukP*1ri
~>
<~>$>-8?=$uH@:<SSA7]@bB4u!pCM[j*Df9T7EcZ;DFa&(TH$XgaI=?ZqIt3*%KS5&6LPUeEMi<XTNfK3`
OckomQ'Rc(R@0M5S=Q4BSt2FBS=?":R@0G/QBmf#P`q8mOcYWbNfB$XN/W^RMM[1GLPLV<KS4u0Jq8H%
It)orI=-EhH?jd\GB\4QFEDSEEcH&;E,TW3D/=!'C2%BqB4baeAS#C^@U`bR?sm>J?<pf@>?Y04=BAR)
<E)pr;Gp@h:f'q_:/+DT91hcI84Q-=779O26:+")5X7Ou5!D+l4?GSa3B/rV2Dm<J1c$pC0eb:7/hS_,
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
216.179 179.774 mo
216.179 179.774 li
216.176 175.114 li
216.176 175.114 li
216.179 179.774 li
.843137 .894118 .92549 rgb
f
216.176 175.114 mo
216.176 175.114 li
216.176 175.113 li
216.176 175.113 li
216.176 175.113 li
level3{
gsave
clp
[52.288 61.673 -61.673 52.288 222.84 126.374 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~9T/@5M=4,omS&E(98;k-K^MKcm7W#t97ZD&IdKdWlq2Zl8pfnsH0\(IlUl?d8p0GlFQuG=l:H!\8T<rd
DWs`/kt,[T8S[K\C$8*#kX]=L87^pTA*?HlkX]+F871ON?KXjak=Ah?86P(G=QW.Tk!rJ67o\S?;rpMH
j[W,-7o&,89]SZ:j@2c%7S2W08)m'.j$lGr7RQ0(6K1F"iC,ui76][!4Q/^ji'fZa6oa*m2rI(^haB<Y
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[52.288 61.673 -61.673 52.288 222.84 126.374 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~9MA,R9MA,R9MA,R9M8#O91qoN91qoN91qoN91qoN91qoN91qoN91hfK8kM]J8kM]J8kM]J8kM]J8kM]J
8kM]J8kMZH8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P)HD84Z9B84Z9B84Z9B84Z9B84Z9B84Z9B84Z9B
84Z9B84Z9B84Z9B84Z9B84Z9B84Z9B84Z9A7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'=7Rfj:7Rfj:
7Rfj:7Rfj:7Rfj:7Rfj:7Rfj:77BX677BX677BX677BX677BX677BX677BX66psF26psF26psF26psF2
~>
<~Mi*CKM26tDLkgb@LPCP<L4t>7KS+o0K7\]+JUi9$J:E&tIXZ`pIXQWlI!^3eH[:!`H$FRYG^"@TG'.qM
F`heJFEDSFF)uABEH,r:E,]`6DJj<.Ci!m&CMR["C2.HsBk_6oB4kggAnGUcA7T1[@q/tW@:<PO?sm>K
?XI/H?=$rD?!LW=>?b<8>$5!1=BJ[,=&r@&<`W7$<E)pr;c?Um;Gg:f:esk^:/4PY9h\5S9MA,Q91hfJ
8P)KF84Z6@7Rfj:77BU46UO4.6:+"*5s[e&5X7Ou5!D.o4Ztni4$,Mc3]]8]3&ilW2`EZS2E!HO2)R3I
~>
<~n*f`6n*]W3mdBN2mdBN2mdBN2md9E/mHs<.mHs<.mHs<.mHj3+m-O**m-O**m-F!'lg*m&lg*m&lg*m&
lg*j$lK[["lK[["lK[["lK[Wul07Hsl07Hsl07Hsl07Eqkih6okih6okih6okih6okih6okih6okih3m
kND$kkND$kkND$kkND$jk2tggk2tggk2tgfjlPUcjlPUcjlPUcjlPUbjQ,C_jQ,C_jQ,C_jQ,C^j5]1[
j5]1[j5]1[j5]1[io8tWio8tWio8tWiSibSiSibSiSibSiSibSi8EPOi8EPOi8EPOi8EPOhr!>Khr!>K
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
250.026 199.281 mo
216.179 179.774 li
216.176 175.113 li
250.027 194.623 li
250.538 194.327 li
261.231 188.143 li
283.859 175.056 li
283.862 179.712 li
250.026 199.281 li
level3{
gsave
clp
[47.2128 0 0 47.2128 215.963 191.494 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~7S)Q/8`N94j$l`'7SMl5:#nf>j@<#,7o8;;;WUDIj[W;37oeY@<ouqRk"&V:86P(G>3AF\k=Ak@86tCL
?fssfkX]+F87C^Q@d$?nkX]:K87q'VBBVm"kX]FO8S[K]C["E,kt,aV8T*caDsBo6l:H$]8TX/hFQuJ?
lUl?d8pBSnGj@tIlUlKi8pfnsII'UUlq;fp97Q>%JF-!\m7W*!98)_+L$hTgmS&E(9Si+1M=4,qmnAZ.
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~9T/@5M=4,omS&E(98;k-K^MKcm7W#t97ZD&IdKdWlq2Zl8pfnsH0\(IlUl?d8p0GlFQuG=l:H!\8T<rd
DWs`/kt,[T8S[K\C$8*#kX]=L87^pTA*?HlkX]+F871ON?KXjak=Ah?86P(G=QW.Tk!rJ67o\S?;rpMH
j[W,-7o&,89]SZ:j@2c%7S2W08)m'.j$lGr7RQ0(6K1F"iC,ui76][!4Q/^ji'fZa6oa*m2rI(^haB<Y
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.30457 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.2128 0 0 47.2128 215.963 191.494 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~7Rfj:7Rfj;7n6'>7n6'>7n6*@84Z9B84Z9B84Z9B84Z9B84Z9B8P)KF8P)KF8P)KG8kM]J8kM]J8kM`L
91qoN91qoN91qrP9MA,R9MA,R9MA,Q91qoN91qoN91qoN91qoN91qoM8kM]J8kM]J8kM]J8kM]J8kM]I
8P)KF8P)KF8P)KF8P)KF8P)HD84Z9B84Z9B84Z9B84Z9B84Z9B84Z9B84Z9B84Z9B84Z9B84Z6@7n6'>
7n6'>7n6'>7n6'>7n6$<7Rfj:7Rfj:7Rfj:7Rfj:7R]a777BX677BX677BX677BX6779O36psF26psF2
~>
<~84Z<E9MA,S:/=\`;H$Op<E<1'=]np4>[:]D?smDP@q9._B4kmlC27U$D/O92EH6,BFEMbNG^4R\H[U?l
IXcm!JqJ`1L5(J>M2I1JM26tDLPLY>L5(D8KS+o/Jq8H&J:E#sIXZ`oI!g9fH?sj]G^+FUG'.qMFEDVG
F)l;@E,]c7DJj<-Chmg$C2.HsBkV0mAnGXdA7T1[@U`bR?sm>K?X@&F?!LW=>?Y35=BJ[,<`W7%<`N*u
;c?Rl;,C(b:/4PY9MA,R91qlK8P)HD7n,s;779O26UF++5s[e%5<h=q5!;"j4$,Ja3B/uX2`EZR2E!EL
~>
<~j5]1[jQ,C_jQ,FajlPUcjlY^fk2tjikND$kkih6okih6okih6ol07Hsl07KulK[["lg*m&lg*m'm-O**
mHs<.mHs?0mdBN2n*f`6n*]W3mdBN2mdBN2md9E/mHs<.mHs<.m-O**m-O**lg*m&lg*m&lg*m&lK[["
lK[["lK[[!l07Hsl07Hsl07Eqkih6okih6okih6okih6okih3mkND$kkND$kkN:phk2tggk2tdejlPUc
jlPUcjlGL`jQ,C_jQ,C_j5]1[j5]1[j5]1[io8tWio8tWiSibSiSibSiSibSi8EPOi8EPOi8EPNhr!>K
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
255.645 156.845 mo
255.645 158.691 253.118 160.188 250 160.188 cv
246.882 160.188 244.355 158.691 244.355 156.845 cv
244.355 154.998 246.882 153.501 250 153.501 cv
253.118 153.501 255.645 154.998 255.645 156.845 cv
cp
level3{
gsave
clp
[9.28179 12.9344 -12.9344 9.28179 247.233 152.989 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.28179 12.9344 -12.9344 9.28179 247.233 152.989 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
280.394 204.529 mo
279.736 204.529 279.203 203.996 279.203 203.339 cv
279.203 196.3 li
279.203 195.643 279.736 195.109 280.394 195.109 cv
281.051 195.109 281.584 195.643 281.584 196.3 cv
281.584 203.339 li
281.584 203.996 281.051 204.529 280.394 204.529 cv
cp
level3{
gsave
clp
[2.38086 0 0 2.38086 279.203 199.819 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.38086 0 0 2.38086 279.203 199.819 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
280.394 200.131 mo
279.517 200.131 278.806 199.42 278.806 198.543 cv
278.806 196.827 li
278.806 195.95 279.517 195.239 280.394 195.239 cv
281.271 195.239 281.981 195.95 281.981 196.827 cv
281.981 198.543 li
281.981 199.42 281.271 200.131 280.394 200.131 cv
cp
level3{
gsave
clp
[2.06177 0 0 2.06177 280.394 197.685 ]ct
/9 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.905882 .6 .152941 ]
/C1 [.866667 .4 .109804 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.06177 0 0 2.06177 280.394 197.685 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~kN:phk2tggk2tggk2tggk2tggk2tggk2tdejlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjQ,C_jQ,C_jQ,C_
jQ,C_jQ,C_jQ,C_jQ#:\j5]1[j5]1[j5]1[j5]1[j5]1[j5]1Zio8tWio8tWio8tWio8tWio8tWio8tW
io/kTiSibSiSibSiSibSiSibSiSibSiSi_Qi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOhr!>Khr!>Khr!>K
hr!>Khr!>Khr!>Khqm5HhVR,GhVR,GhVR,GhVR,GhVR,GhVR,Fh;-oCh;-oCh;-oCh;-oCh;-oCh;-oC
~>
<~R@'A/R$a5,Q^=&)QBmi&Q'IW"Q'@MtPa%AqPEV2nP*1ukOcbcgOcYZdOH>NaO,o?^NfK-[NK&pWNJrgT
N/W[QMi3LNMMd:KM2@(GM26tDLkphALPLY>L5(G;KnY57KnP,4KS4u1K7ef.JqAT+JUrB'JUi9$J:N-!
It)rsIXZ`pI=6NlI=-EiI!g9fH[C*cH?sm`H$O[\H$FRYG^+FVGB\7SG'8%PF`hhLF`__IFEDSFF)uDC
EcQ2@EH,u<EH#l9E,]`6Df9Q3DJj?0D/F-,D/=$)Ci!m&CMR^#C2.KuBk_9qBkV0nBP;$kB4kjhAnGXe
~>
<~-RL/e-71&d-71&d-71&d-71&d-71&d,pai`,pai`,pai`,pai`,pai`,pai_,U=W\,U=W\,U=W\,U=W\
,U=W\,U=TZ,9nEX,9nEX,9nEX,9nEX,9nEX,9nBV+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sA*Q+X&!P+X&!P
+X&!P+X&!P+X&!P+<VdL+<VdL+<VdL+<VdL+<VdL+<VdK+!2RH+!2RH+!2RH+!2RH+!2RH+!2RG*Zc@D
*Zc@D*Zc@D*Zc@D*Zc@D*Zc=B*??.@*??.@*??.@*??.@*??.@*?6%=*#oq<*#oq<*#oq<*#oq<*#oq<
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
280.394 197.094 mo
279.955 197.094 279.6 196.738 279.6 196.3 cv
279.6 174.39 li
250.351 157.532 li
249.971 157.313 249.841 156.828 250.06 156.448 cv
250.279 156.069 250.764 155.938 251.144 156.157 cv
280.79 173.243 li
281.036 173.385 281.188 173.646 281.188 173.931 cv
281.188 196.3 li
281.188 196.738 280.832 197.094 280.394 197.094 cv
cp
level3{
gsave
clp
[31.2339 0 0 31.2339 249.954 176.572 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[31.2339 0 0 31.2339 249.954 176.572 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
316.501 114.69 mo
318.457 118.653 li
322.831 119.289 li
323.772 119.425 324.148 120.582 323.467 121.246 cv
320.302 124.331 li
321.049 128.687 li
321.21 129.625 320.226 130.34 319.384 129.897 cv
315.472 127.841 li
311.56 129.897 li
310.718 130.34 309.734 129.625 309.895 128.687 cv
310.642 124.331 li
307.477 121.246 li
306.796 120.582 307.172 119.425 308.113 119.289 cv
312.487 118.653 li
314.443 114.69 li
314.864 113.837 316.08 113.837 316.501 114.69 cv
cp
level3{
gsave
clp
[6.49876 4.22935 -4.22935 6.49876 312.541 120.56 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.49876 4.22935 -4.22935 6.49876 312.541 120.56 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
286.192 114.69 mo
288.148 118.653 li
292.522 119.289 li
293.463 119.425 293.839 120.582 293.158 121.246 cv
289.993 124.331 li
290.74 128.687 li
290.901 129.625 289.917 130.34 289.075 129.897 cv
285.163 127.841 li
281.251 129.897 li
280.409 130.34 279.425 129.625 279.586 128.687 cv
280.333 124.331 li
277.168 121.246 li
276.487 120.582 276.863 119.425 277.804 119.289 cv
282.178 118.653 li
284.134 114.69 li
284.555 113.837 285.771 113.837 286.192 114.69 cv
cp
level3{
gsave
clp
[6.49876 4.22935 -4.22935 6.49876 282.232 120.56 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.49876 4.22935 -4.22935 6.49876 282.232 120.56 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
219.472 114.69 mo
221.428 118.653 li
225.802 119.289 li
226.743 119.425 227.119 120.582 226.438 121.246 cv
223.273 124.331 li
224.02 128.687 li
224.181 129.625 223.197 130.34 222.355 129.897 cv
218.443 127.841 li
214.531 129.897 li
213.689 130.34 212.705 129.625 212.866 128.687 cv
213.613 124.331 li
210.448 121.246 li
209.767 120.582 210.143 119.425 211.084 119.289 cv
215.458 118.653 li
217.414 114.69 li
217.835 113.837 219.051 113.837 219.472 114.69 cv
cp
level3{
gsave
clp
[6.49876 4.22935 -4.22935 6.49876 215.512 120.56 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.49876 4.22935 -4.22935 6.49876 215.512 120.56 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
189.163 114.69 mo
191.119 118.653 li
195.493 119.289 li
196.434 119.425 196.81 120.582 196.129 121.246 cv
192.964 124.331 li
193.711 128.687 li
193.872 129.625 192.888 130.34 192.046 129.897 cv
188.134 127.841 li
184.222 129.897 li
183.38 130.34 182.396 129.625 182.557 128.687 cv
183.304 124.331 li
180.139 121.246 li
179.458 120.582 179.834 119.425 180.775 119.289 cv
185.149 118.653 li
187.105 114.69 li
187.526 113.837 188.742 113.837 189.163 114.69 cv
cp
level3{
gsave
clp
[6.49876 4.22935 -4.22935 6.49876 185.203 120.56 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.49876 4.22935 -4.22935 6.49876 185.203 120.56 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
.45098 .231373 .894118 rgb
%ADOBeginSubsetFont: Montserrat-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Montserrat-Bold def/FontInfo 7 dict dup begin/Notice (Copyright 2011 The Montserrat Project Authors \\\(https://github.com/JulietaUla/Montserrat\\\)) def/Weight (Bold) def/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 67 /C putdup 69 /E putdup 73 /I putdup 78 /N putdup 83 /S putdef/FontBBox {-882 -266 1679 1076} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-17 0 538 555 575 591 600 617 700 717 742 759] def/OtherBlues [-211 -194 -117 -100] def/BlueScale 0.037 def/BlueFuzz 0 def/StdHW [137] def/StdVW [162] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings6 dict dup begin/C <1C60D8A8C9B610D9B8D63FD290453AF6837F76C6D9E86AA3845B767CE8D2C974E0327AAFC55D2147831B559AD31B03280746BD5919FC48FF791861814497FB4B2009DC01AF22759A96E86F84BBCB5F54CC5D0A8EF148A99304BA2D552C41F2150F88EF8B61EAF3779616DA70120AA39FF8C8570280A10C79937AB374> |-/E <1C60D8A8C9B65201E037803A1A00E7346892CE29B31AB4562A204A10D5981592571990BADEA7D567228D98EFB9A132ED8980A20537141413AD359DB0E01CBE8B7B22> |-/I <1C60D8A8C9B8228187BB6E1139BEC562C3570EEDAF15A957D81418D5AA493740> |-/N <1C60D8A8C9B6DD2C4E9A8BBBAD80DB21782D1B35CFCF6F4B40D627EF36F69EA2532BB39E14BFBD917E1B9A990242775BD09EDD7286E4CC6B37C9B3CA14EE> |-/S <1C60D8A8C9B673A5EF60E025500148D21979042A5336EE4C60AF53E430FD0FFAEDE8510EF88FA73F919A14FB2517045602F0C20824FF68C9AE4F20D1C03B47936A12BB3DD3CBF73AD146523AC740EDC9486FA5DED43FA4F2AB508DF2FF1951EF1B5801ABA680029A15B58F89A9C71E7442ED4ABA1F1391F693C27E63F1F6C995891EB2> |-/.notdef <1C60D8A8C9B7F000AD2CED2D91C8738E548389197D6E2F99BF39E6741036AD2264474D1145D8CDDD45FA26C6F5A246AC44> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/IGSWOA+Montserrat-Bold /Montserrat-Bold findfont ct_VMDictPut/IGSWOA+Montserrat-Bold*1 [67{/.notdef}rp /C /.notdef /E 3{/.notdef}rp /I 4{/.notdef}rp /N 4{/.notdef}rp /S 172{/.notdef}rp]IGSWOA+Montserrat-Bold nfIGSWOA+Montserrat-Bold*1 [11.0029 0 0 -11.0029 0 0 ]msf154.5 288.232 mo(SIN)sh174.019 288.232 mo(CE)[8.06494 0 ]xsh.576471 .592157 .701961 rgb
IGSWOA+Montserrat-Bold*1 [11.0029 0 0 -11.0029 0 0 ]msf154.5 288.232 mo(SIN)sh174.019 288.232 mo(CE)[8.06494 0 ]xsh.45098 .231373 .894118 rgb
%ADOBeginSubsetFont: Montserrat-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginIGSWOA+Montserrat-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B733AA9A156AA5B3DADE86A6EB1CD871AF81062E7D2958687D4DC749995DEE5438F90E116C> |-/two <1C60D8A8C9B7CDD8BE5957E313628A8F003899E001039A12202A34B8A301786DDABA91C4A5413F31DF24797EA1861C4FC51A5941DB82F3E7C75FF7B775ACC3D76A88DF868977456B930D077773108F344ED5A020EBB1455DA986228E> |-/five <1C60D8A8C9B7C8C1DAC49756941F6D63C8789EE71E82A83698B6F856F8742678BEBFF710E91731DF52B68DAB5AAB40D7D0330E7DF710C0413CD51401051FCFF7B41C34710495B41BEF0BB4AC22F0325FBCF2134677FADA59007429FC310BD3D734960194> |-/nine <1C60D8A8C9B6703148B68D918574FD853A69E9020E15F4792979312B0AAA8FB9298660C07D08FB06B41179EAD0513FC77E33B019DDD7BC7652F628F6464E71EA0E3F6C51DB4C67EDAA42B69E19DA0565496233FE7FDCA63D0E8EDD1E73739A2E43EE38F14E3FC301C8D40BFD96BE5F3514856937C6890344BFCBD7E8971EC77A985D> |-systemdict /gcheck known {setglobal} if end {end} ifendIGSWOA+Montserrat-Bold /Encoding getdup 49 /one putdup 50 /two putdup 53 /five putdup 57 /nine putpop%ADOEndSubsetFont
/IGSWOA+Montserrat-Bold*1 [49{/.notdef}rp /one /two 2{/.notdef}rp /five 3{/.notdef}rp /nine 9{/.notdef}rp /C /.notdef /E 3{/.notdef}rp /I 4{/.notdef}rp /N 4{/.notdef}rp /S 172{/.notdef}rp]IGSWOA+Montserrat-Bold nfIGSWOA+Montserrat-Bold*1 [11.0029 0 0 -11.0029 0 0 ]msf308.473 288.232 mo(195)sh326.287 288.232 mo(2)sh.576471 .592157 .701961 rgb
IGSWOA+Montserrat-Bold*1 [11.0029 0 0 -11.0029 0 0 ]msf308.473 288.232 mo(195)sh326.287 288.232 mo(2)sh.45098 .231373 .894118 rgb
%ADOBeginSubsetFont: Oswald-DemiBold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Oswald-DemiBold def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 67 /C putdup 71 /G putdup 72 /H putdup 73 /I putdup 76 /L putdup 79 /O putdup 83 /S putdef/FontBBox {-92 -344 1940 1104} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings9 dict dup begin/.notdef <1C60D8A8C9B72E922B87B4B3253F12513A2BED589E8E1FD86BE4C6041810BA890C8EE287D3> |-/space <1C60D8A8C9B8714DD1> |-/C <1C60D8A8C9B794D334C034EA4BD297F03E5A548A7342B8598514995FB875545D4419B5C85BB33531D3C92F79D04112EA0B83EBD94C461CE964F5B936E15147C1CEB3791947D06CDA4496970A511C2F70E9FF12C3524FF93576E3CABAAB4CAE56BAFA0D825EE460A35F02E2740B49C4F80399E7A262E12B2759040C3362659C0CB714EF2C0F15074473FFD9C9FCCB4AAED245A85DDFEDB4B4A9A5551AC730D1B3D5DA733CC6C5630A0396BE1454264AE5B1B8CA06071DFF9490891102322103EA6A41DE66BEC26692B7375BADC5FA957FE8A97D0B5F217DFC9581CB96200AAB34D37BD09201A7E3D309F12FF022B24DF27DF60E104EF2CE489240E335C26F41348E58A5D85E55B6E7ED3477472E9285B9DEBC8DE8A61BC725DCC190DFFFA7560A74E99FD524F01706E029D3AE> |-/G <1C60D8A8C9B7E02AA536FB802D8A81E56285C8EE5BF96ECF968607C1F897237FA27E49D25515A238C6CC19FC4CB0EF58E5A1D9AB606D3D77577E7935CE962FAB561159EC6412F7A5CF3D9FF0FE5CC9986A439A4A16E75E9520110C93FEC6E9CCD53876C9B05A49194AE08E1F31A82DDA15234AAB1E25F7EE545809BB655A61DFAF4EFA2FBD623A518AB78ECADBBA056EF2B8FED00EB58376F4F49266970A3543717E01A73FFE6A6A38F23A27B08E669B3835589B40504C116F4E14DE8BF5FED4B0F2C34B95650056946AD689C6986B58139CF0844D4C631E7D5ACB8F721C2601970BDE348960AF4A0B337823E07B632227> |-/H <1C60D8A8C9B7C56CBB41877DC4530AC30C7345E62EE36BC651AE597C69F09FE767106B42DA5C5C8EDC9D03C037C9> |-/I <1C60D8A8C9B84B913F691E19B92658057325C33942A8> |-/L <1C60D8A8C9B76BC2A407B084C74F38C6405740EE330351BA515069F6> |-/O <1C60D8A8C9B7FCB6DCE90D07CB6C1A7C0D88A0C2383DE9F324A4BF22F1A6F4ED2ECA5D9A57D977D404A3E60CAAA916E5E8C4A744A0C3E9B2E459143CBF258E03C5DADA6F1FC97B207353CB0AC0A88C1D6F11AFA38485CDA58C414A0E97C0807FC7683C035CC399089416113DEC6B14E42B08746EAE99B66A86436F6C25E357DA30CA6751105FE94234337E84D6308925E1A61EE61A23CB0FA75CA2C02636239A2B7D00FD54799F73CE7D6FCFB0FBC595BD9C84545330F57069661760A5B46AE02494323664A8530047617918B5A9180163ADE06CD81BF7D38AEF75DA558EB2F7BB66DDD5D4A10334887E03B66C3FC8E543D94CFA300879394DFFA234C6CA28> |-/S <1C60D8A8C9B7A3FAB2B412451F23317594764BEA5794D8CFDB4EC5F5B182B1626FBA96B732719C8BEED1172EB4D225407E58ADD999C8D16CEF243B9A472116EEDE0BFC60619AE3565475DAF36820A0382628E0AF051BB350C7C82B8C1D33ECFED7A7C1869FD1D27577101ABCA065E51DAAF5982FAA64F5EF41D5DCD1B9757409E6C629E0EAF3065580D8D73B37D7FA893E07D684FB51F113D38163CB833508C28AFEE56CE5426B55655ED454EE025679657672209D9A479BD8765A3264F768E1BDF80C39FAED2DA65A0C6B862B31D91EBA44F47010EB37E416A05E63F800A260F9C03FC8BC8B924C68265B481E658DA0078D92BC1A2231711906C24FBB72EA0B4D80DBE1F4348E4CEDC1B0FDA512AB411FCA39F306A2E82B02D3E0AEC3446F> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/IGSWOB+Oswald-DemiBold /Oswald-DemiBold findfont ct_VMDictPut/IGSWOB+Oswald-DemiBold*1 [32{/.notdef}rp /space 34{/.notdef}rp /C 3{/.notdef}rp /G /H /I 2{/.notdef}rp /L 2{/.notdef}rp /O 3{/.notdef}rp /S 172{/.notdef}rp]IGSWOB+Oswald-DemiBold nfIGSWOB+Oswald-DemiBold*1 [49.9517 0 0 -49.9517 0 0 ]msf110.511 342.059 mo(HIGH SCHOOL)[29.854 14.4146 28.5127 29.854 12.561 25.1953 27.5371 29.8535 28.708 28.7075 0 ]xsh113.633 342.059 mo
113.633 301.619 li
121.877 301.619 li
121.877 318.205 li
128.999 318.205 li
128.999 301.619 li
137.243 301.619 li
137.243 342.059 li
128.999 342.059 li
128.999 324.083 li
121.877 324.083 li
121.877 342.059 li
113.633 342.059 li
cp
level3{
gsave
clp
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.231373 .223529 .478431 ]
/C1 [.337255 .329412 .54902 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.337255 .329412 .54902 ]
/C1 [.196078 .188235 .454902 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.196078 .188235 .454902 ]
/C1 [.196078 .188235 .454902 ]
/N 1 
>>
]
/Bounds [.313383 .951869 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~4$,Md4?Pbi4[)%n5<h@t5X7V$5sdn)6UO4/6psI477Ka97n6'?84Z<D8P2TI91qoO9MA/T9hnGY:JXb_
:f("d;,U:i;c?Uo<)cjt<E3%!<E)ps<)cdp;c?Rl;GpCi;,L1e:f'tb:JXb^:JOY[:/+GW9he;T9MA)P
91qoM8kM]I8P)KF84Z9B7n6'>7n,s;7R]a777BU46psC06UO4-6:+"*5s[e&5X7S"5X.It5<_7p5!D+m
4Ztni4?P_f4$,Mb3]];_3B9)[3&ilW3&`cT2`<QP2E!EM2)R6J1c.$F1G^gC1,:U?1,:U?1,:U?1,:U?
~>
<~3B9)\3]]>a4$5Vf4Ztql5!D1q5<qJ!5s[e'6:+%,6UX=177BX77Rfm<7n?0A8P)KG8kM`L92&#Q9he>W
:/4S\:Jaka;,L1g;GpFl;c?Un;c6Lk;Gp@h;,L.d:f'ta:JXb]:/4PZ9he>V9h\5S9M8#O91qlL8kMZH
8P)KE84Z9A7n6'>7Rfj:77BX6779O36pj=/6UO1,6:*t(5s[e%5X7S"5<h@s5!D.o5!;%l4Zkhh4?P\e
4$,Ja3]];^3B9)Z3&ilW2`EZS2E!HO2Dm?L2)I-H1c.!E1G^gB1,:U>0ekC;0JG170JG170JG170JG17
~>
<~H?sm`H@(!cH[L3gI!g?jI=6QnIXZ`qIt)ruJ:N0#JUrB'JqAT+JqJ].K7no2KS5&5KnY89L5(J=LPLY@
LkpkDM2@(GMMd:KMi3LOMi3LOMi3LOMMd:KMMd7IM2@(GM26tDLkpkCLPLY?LPLY>L5(G;L5(D9KnY57
KS5#3KS5#2K7ef/K7ec-JqAT+Jq8K(JUrB'J:N0#J:N-!It)rtIsuiqIXZ`pI=6NlI=6NkI!g<hI!g9f
H[C*dH[:!aH?sm_H$O[\H$OXZG^+IXG^"@UGB\7TG'8%PG'8%OF`hhLF`__IFEDVHFEDVHFEDVHFEDVH
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
143.511 342.059 mo
143.511 301.619 li
151.682 301.619 li
151.682 342.059 li
143.511 342.059 li
cp
level3{
gsave
clp
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
168.146 342.619 mo
166.146 342.619 164.43 342.294 162.999 341.644 cv
161.568 340.994 160.43 340.043 159.584 338.79 cv
158.739 337.538 158.125 336.079 157.743 334.412 cv
157.36 332.746 157.169 330.807 157.169 328.595 cv
157.169 315.278 li
157.169 313.457 157.287 311.839 157.523 310.424 cv
157.759 309.01 158.161 307.705 158.73 306.51 cv
159.299 305.314 160.031 304.331 160.926 303.559 cv
161.82 302.786 162.946 302.185 164.304 301.754 cv
165.661 301.323 167.234 301.107 169.023 301.107 cv
171.137 301.107 172.95 301.372 174.462 301.899 cv
175.975 302.429 177.173 303.221 178.06 304.278 cv
178.946 305.335 179.588 306.57 179.987 307.985 cv
180.385 309.399 180.584 311.059 180.584 312.961 cv
180.584 315.254 li
172.609 315.254 li
172.609 312.522 li
172.609 311.774 172.592 311.164 172.56 310.692 cv
172.527 310.221 172.446 309.729 172.316 309.217 cv
172.186 308.705 171.999 308.302 171.755 308.01 cv
171.511 307.717 171.173 307.478 170.743 307.29 cv
170.312 307.104 169.779 307.01 169.146 307.01 cv
168.479 307.01 167.917 307.128 167.462 307.363 cv
167.007 307.599 166.657 307.884 166.414 308.217 cv
166.169 308.55 165.979 309.018 165.84 309.619 cv
165.702 310.221 165.621 310.758 165.597 311.23 cv
165.572 311.701 165.56 312.318 165.56 313.083 cv
165.56 330.619 li
165.56 332.587 165.828 334.083 166.365 335.107 cv
166.901 336.132 167.901 336.644 169.365 336.644 cv
170.844 336.644 171.873 336.095 172.45 334.997 cv
173.027 333.9 173.316 332.335 173.316 330.303 cv
173.316 326.327 li
169.34 326.327 li
169.34 321.254 li
180.731 321.254 li
180.731 342.059 li
175.34 342.059 li
174.804 338.352 li
173.584 341.197 171.365 342.619 168.146 342.619 cv
cp
level3{
gsave
clp
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
186.414 342.059 mo
186.414 301.619 li
194.658 301.619 li
194.658 318.205 li
201.78 318.205 li
201.78 301.619 li
210.024 301.619 li
210.024 342.059 li
201.78 342.059 li
201.78 324.083 li
194.658 324.083 li
194.658 342.059 li
186.414 342.059 li
cp
level3{
gsave
clp
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
239.195 342.595 mo
235.439 342.595 232.634 341.563 230.78 339.498 cv
228.927 337.433 227.918 334.262 227.756 329.985 cv
234.878 328.717 li
234.91 331.237 235.248 333.136 235.89 334.412 cv
236.532 335.688 237.52 336.327 238.854 336.327 cv
239.813 336.327 240.508 336.019 240.939 335.4 cv
241.37 334.782 241.585 333.985 241.585 333.01 cv
241.585 331.416 241.24 330.079 240.549 328.997 cv
239.857 327.916 238.748 326.709 237.219 325.376 cv
232.878 321.619 li
231.772 320.66 230.882 319.762 230.207 318.924 cv
229.532 318.087 228.963 317.022 228.5 315.73 cv
228.036 314.437 227.805 313.002 227.805 311.424 cv
227.805 308.156 228.772 305.624 230.707 303.827 cv
232.642 302.03 235.3 301.124 238.683 301.107 cv
239.821 301.107 240.861 301.221 241.805 301.448 cv
242.748 301.677 243.557 301.985 244.231 302.376 cv
244.906 302.766 245.504 303.254 246.024 303.839 cv
246.544 304.424 246.967 305.03 247.292 305.656 cv
247.618 306.282 247.894 306.989 248.122 307.777 cv
248.35 308.566 248.512 309.314 248.61 310.022 cv
248.707 310.73 248.78 311.497 248.829 312.326 cv
241.756 313.448 li
241.723 312.619 241.683 311.929 241.634 311.375 cv
241.585 310.823 241.492 310.25 241.354 309.656 cv
241.215 309.063 241.032 308.599 240.805 308.266 cv
240.577 307.933 240.268 307.66 239.878 307.448 cv
239.488 307.237 239.024 307.147 238.488 307.181 cv
237.577 307.229 236.874 307.579 236.378 308.229 cv
235.882 308.88 235.634 309.668 235.634 310.595 cv
235.634 311.326 235.719 311.989 235.89 312.583 cv
236.061 313.177 236.341 313.741 236.731 314.277 cv
237.122 314.814 237.476 315.245 237.792 315.57 cv
238.109 315.896 238.569 316.335 239.17 316.888 cv
243.439 320.595 li
244.35 321.408 245.142 322.196 245.817 322.961 cv
246.492 323.726 247.13 324.595 247.731 325.57 cv
248.333 326.546 248.792 327.619 249.11 328.79 cv
249.427 329.961 249.585 331.205 249.585 332.522 cv
249.585 335.465 248.63 337.88 246.719 339.766 cv
244.809 341.652 242.301 342.595 239.195 342.595 cv
cp
level3{
gsave
clp
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
265.147 342.595 mo
262.935 342.595 261.049 342.273 259.488 341.632 cv
257.927 340.989 256.699 340.051 255.805 338.814 cv
254.91 337.579 254.268 336.164 253.878 334.57 cv
253.488 332.978 253.292 331.124 253.292 329.01 cv
253.292 314.741 li
253.292 312.546 253.488 310.644 253.878 309.034 cv
254.268 307.424 254.91 306.01 255.805 304.79 cv
256.699 303.57 257.923 302.652 259.476 302.034 cv
261.028 301.416 262.918 301.107 265.147 301.107 cv
267.26 301.107 269.061 301.38 270.549 301.924 cv
272.037 302.47 273.208 303.27 274.061 304.327 cv
274.915 305.384 275.533 306.6 275.915 307.973 cv
276.297 309.347 276.488 310.953 276.488 312.79 cv
276.488 316.302 li
268.463 316.302 li
268.463 312.497 li
268.463 312.042 268.463 311.726 268.463 311.546 cv
268.463 311.367 268.455 311.074 268.439 310.668 cv
268.423 310.262 268.394 309.973 268.354 309.802 cv
268.313 309.632 268.256 309.384 268.183 309.059 cv
268.11 308.733 268.021 308.497 267.915 308.351 cv
267.809 308.205 267.675 308.025 267.512 307.814 cv
267.35 307.604 267.159 307.453 266.939 307.363 cv
266.72 307.274 266.459 307.192 266.159 307.119 cv
265.857 307.046 265.528 307.01 265.171 307.01 cv
264.537 307.01 263.996 307.119 263.549 307.339 cv
263.102 307.559 262.756 307.831 262.512 308.156 cv
262.269 308.481 262.081 308.924 261.951 309.485 cv
261.821 310.046 261.74 310.566 261.708 311.046 cv
261.674 311.526 261.659 312.132 261.659 312.863 cv
261.659 330.937 li
261.659 332.904 261.906 334.352 262.402 335.278 cv
262.898 336.205 263.821 336.668 265.171 336.668 cv
265.691 336.668 266.147 336.604 266.537 336.474 cv
266.927 336.343 267.24 336.128 267.476 335.827 cv
267.711 335.526 267.898 335.233 268.037 334.949 cv
268.175 334.664 268.272 334.262 268.33 333.741 cv
268.386 333.222 268.423 332.782 268.439 332.425 cv
268.455 332.066 268.463 331.57 268.463 330.937 cv
268.463 326.985 li
276.488 326.985 li
276.488 330.4 li
276.488 332.27 276.305 333.908 275.939 335.314 cv
275.573 336.722 274.976 337.989 274.147 339.119 cv
273.317 340.25 272.147 341.111 270.634 341.705 cv
269.122 342.298 267.293 342.595 265.147 342.595 cv
cp
level3{
gsave
clp
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
281.562 342.059 mo
281.562 301.619 li
289.806 301.619 li
289.806 318.205 li
296.927 318.205 li
296.927 301.619 li
305.171 301.619 li
305.171 342.059 li
296.927 342.059 li
296.927 324.083 li
289.806 324.083 li
289.806 342.059 li
281.562 342.059 li
cp
level3{
gsave
clp
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
321.025 336.363 mo
321.464 336.567 321.992 336.668 322.61 336.668 cv
323.228 336.668 323.76 336.567 324.208 336.363 cv
324.655 336.16 325.004 335.904 325.256 335.595 cv
325.508 335.286 325.708 334.88 325.854 334.376 cv
326.001 333.872 326.094 333.388 326.135 332.925 cv
326.175 332.461 326.196 331.904 326.196 331.254 cv
326.196 312.326 li
326.196 311.677 326.175 311.119 326.135 310.656 cv
326.094 310.192 326.001 309.717 325.854 309.229 cv
325.708 308.741 325.508 308.347 325.256 308.046 cv
325.004 307.745 324.655 307.497 324.208 307.302 cv
323.76 307.107 323.228 307.01 322.61 307.01 cv
321.992 307.01 321.464 307.107 321.025 307.302 cv
320.586 307.497 320.244 307.745 320.001 308.046 cv
319.756 308.347 319.565 308.745 319.427 309.241 cv
319.289 309.737 319.199 310.213 319.159 310.668 cv
319.118 311.123 319.098 311.677 319.098 312.326 cv
319.098 331.254 li
319.098 331.904 319.118 332.461 319.159 332.925 cv
319.199 333.388 319.289 333.872 319.427 334.376 cv
319.565 334.88 319.756 335.286 320.001 335.595 cv
320.244 335.904 320.586 336.16 321.025 336.363 cv
cp
322.61 342.595 mo
320.415 342.595 318.545 342.298 317.001 341.705 cv
315.456 341.111 314.224 340.226 313.305 339.046 cv
312.386 337.867 311.72 336.481 311.305 334.888 cv
310.891 333.294 310.683 331.416 310.683 329.254 cv
310.683 314.326 li
310.683 312.164 310.891 310.29 311.305 308.705 cv
311.72 307.119 312.386 305.75 313.305 304.595 cv
314.224 303.44 315.456 302.57 317.001 301.985 cv
318.545 301.399 320.415 301.107 322.61 301.107 cv
326.887 301.107 329.956 302.221 331.817 304.448 cv
333.679 306.676 334.61 309.969 334.61 314.326 cv
334.61 329.254 li
334.61 333.611 333.679 336.925 331.817 339.192 cv
329.956 341.461 326.887 342.595 322.61 342.595 cv
cp
level3{
gsave
clp
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
349.733 336.363 mo
350.172 336.567 350.7 336.668 351.318 336.668 cv
351.936 336.668 352.468 336.567 352.916 336.363 cv
353.363 336.16 353.712 335.904 353.964 335.595 cv
354.216 335.286 354.416 334.88 354.562 334.376 cv
354.709 333.872 354.802 333.388 354.843 332.925 cv
354.883 332.461 354.904 331.904 354.904 331.254 cv
354.904 312.326 li
354.904 311.677 354.883 311.119 354.843 310.656 cv
354.802 310.192 354.709 309.717 354.562 309.229 cv
354.416 308.741 354.216 308.347 353.964 308.046 cv
353.712 307.745 353.363 307.497 352.916 307.302 cv
352.468 307.107 351.936 307.01 351.318 307.01 cv
350.7 307.01 350.172 307.107 349.733 307.302 cv
349.294 307.497 348.952 307.745 348.709 308.046 cv
348.464 308.347 348.273 308.745 348.135 309.241 cv
347.997 309.737 347.907 310.213 347.867 310.668 cv
347.826 311.123 347.806 311.677 347.806 312.326 cv
347.806 331.254 li
347.806 331.904 347.826 332.461 347.867 332.925 cv
347.907 333.388 347.997 333.872 348.135 334.376 cv
348.273 334.88 348.464 335.286 348.709 335.595 cv
348.952 335.904 349.294 336.16 349.733 336.363 cv
cp
351.318 342.595 mo
349.123 342.595 347.253 342.298 345.709 341.705 cv
344.164 341.111 342.932 340.226 342.013 339.046 cv
341.094 337.867 340.428 336.481 340.013 334.888 cv
339.599 333.294 339.391 331.416 339.391 329.254 cv
339.391 314.326 li
339.391 312.164 339.599 310.29 340.013 308.705 cv
340.428 307.119 341.094 305.75 342.013 304.595 cv
342.932 303.44 344.164 302.57 345.709 301.985 cv
347.253 301.399 349.123 301.107 351.318 301.107 cv
355.595 301.107 358.664 302.221 360.525 304.448 cv
362.387 306.676 363.318 309.969 363.318 314.326 cv
363.318 329.254 li
363.318 333.611 362.387 336.925 360.525 339.192 cv
358.664 341.461 355.595 342.595 351.318 342.595 cv
cp
level3{
gsave
clp
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
368.709 342.059 mo
368.709 301.619 li
376.928 301.619 li
376.928 336.449 li
386.367 336.449 li
386.367 342.059 li
368.709 342.059 li
cp
level3{
gsave
clp
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[122.323 211.87 -211.87 122.323 206.382 254.465 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
.45098 .231373 .894118 rgb
%ADOBeginSubsetFont: Montserrat-MediumItalic Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Montserrat-MediumItalic def/FontInfo 7 dict dup begin/Notice (Copyright 2011 The Montserrat Project Authors \\\(https://github.com/JulietaUla/Montserrat\\\)) def/Weight (Medium) def/ItalicAngle -11.3 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 97 /a putdup 99 /c putdup 101 /e putdup 103 /g putdup 108 /l putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 116 /t putdef/FontBBox {-813 -263 1626 1053} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-14 0 530 544 568 581 600 614 700 714 742 756] def/OtherBlues [-208 -194 -114 -100] def/BlueScale 0.037 def/BlueFuzz 0 def/StdHW [91] def/StdVW [99] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings12 dict dup begin/space <1C60D8A8C9B85FB1A8> |-/a <1C60D8A8C9B65F8A3F7A70438485C715FCBFB234714784275FF3BACF60E68799CA6305E2481AB0D5D878DEB44C058C7000F9EAE4D8001118A656C6383A65AEC0C1E25A28CF62A06080D03F5354706E79993B6F92ED469FC654F280E248261E14D975D79D9F12B2097CC3B0DE2D58436251579A234ADD422D7CE6760862141EFF3F50056BCE> |-/c <1C60D8A8C9B7E02AD8ECB39D7E1E4E1DB7D1FD36544D60EF758290A81165C0E859BDD729D32C641B21122BF041878600F024A3C3C79AE4EA22BAFA186FE5A382B45C8442020AD2011FA2C2251AD24448CD6F04A0E47F> |-/e <1C60D8A8C9B7D8BE64D61CE787A2BBB1ED6D4C7BEDD3B1C755800848749D9C3E962F3E881597FD5287437CFF3CB0E1185D815CA29138CB01DC1903BBBBA78A6A8D66A72429F414788B9EA24DF18A086D1E733F7ECC444A3327C3D88937090BE9C14E516A37D035FF1D839F38F81253> |-/g <1C60D8A8C9B627523022BCC90A45217989671A33C623AAF151AB263A1F437747D66CD5AC51A99B9246551F15735967E1EAAECF806EFEF7DC18AB4A4B3F31A34C42927A29C6584DB5BFC01CE21B71CEB9A46CB02B69028AE966F3EF6275FD5049485DF41944BF4FFD4CFC8E61B425FBEE1B0A3B7093D31C89B8A058174A7F069BF0192FA778510FC08F5E003555F6402CA3C4AB5E891CF0AE8C4201942138330EE90E7058C0A378F7C7E20CFAAE7E5D217AFBFF5F2B6923CD2A4E38FDCC4F87C8BE8B203D752A> |-/l <1C60D8A8C9B855A1179525AFC67D416F1DF5E96A8D37EE9D2DD1446056D89419> |-/n <1C60D8A8C9B65C11F99970DAB1C01D626D5542C9EAC2CC685FC62EA1B00142EFA28539DFC8E82E017C8BD5DA99F4B23C7EAB069249D27B91895DAE0774B0787EBBCABCCBD75356EC6D9204E4A4007900456CBE0061D874A705C313F0C4CE61A2E9FCCF881EEF9BCE3483F8B6F0D07D853E00CAA2C794> |-/o <1C60D8A8C9B66EAD7A3CC63FB216749A744740E7CD6922CD6EE3A2DB6F4FA7F5FB9BA943CAE85D029462494F00C573E1CACA7F8E4CC1C1CD648B46B41FC73CBAF4C44AAA6B67BB53993712763BECCC95AB7AF3FF5339DD9E> |-/p <1C60D8A8C9B65F8A4103C79436D60B928B4C1F648262CDA697129C231F9A603C0164C8AC3AC350A10D17F9689142CD99641AEB604DB0EBD7F5FA5E061B8AF375E43418052AAF7386A7E8367C7EBC125BE476FACB1CB61BCD1C8F5CF3CB28FEB26FBE52D6309253B7FE315D3F308D694D51D31BF1FDC3B47B4B1EE798DD4B9828E122C02F5513F8D5191758> |-/r <1C60D8A8C9B7015BFEF26263CCC90EB94DEB0BDE7404FF177E1441E93AB48976C7B245C016B8DD915EDB7CCB3E12F27CF56324F5D09021C74EA964BEB6E017EC2876772338C8EEF742531B3B9B15BBF4DF6A1C956F51E4B6BAA12BDA> |-/t <1C60D8A8C9B71DE7A0115A73E3ADB1448A1F570871D8124778F9AF8788C7138E2E486E3EE3EAD32420250D17EC75F4BADAC91590CDA07DA94F4A080A2008294C4FB63ACD75B03EFE711B4A680F8A41C94A443CCFA861C686FB8BAA62CACC9B72> |-/.notdef <1C60D8A8C9B7F000AD2CED2D91C87343ECCF9C077097569818F66DF60D0330D0984016D559AC87E6AD5A1B7053E73A56D42FEA76> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/IGSWOC+Montserrat-MediumItalic /Montserrat-MediumItalic findfont ct_VMDictPut/IGSWOC+Montserrat-MediumItalic*1 [32{/.notdef}rp /space 64{/.notdef}rp /a /.notdef /c /.notdef /e /.notdef /g 4{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /.notdef /t 139{/.notdef}rp]IGSWOC+Montserrat-MediumItalic nfIGSWOC+Montserrat-MediumItalic*1 [13.9162 0 0 -13.9162 0 0 ]msf173.316 361.894 mo(a great place to learn)[9.49072 3.74316 9.60205 5.53857 8.50293 9.49072 5.76074 3.74365 9.49072 3.88232 9.49072 7.83496 8.50244 3.74365 5.51074 8.83691 3.74316 3.88232 8.50293 9.49072 5.60791 0 ]xsh.576471 .592157 .701961 rgb
IGSWOC+Montserrat-MediumItalic*1 [13.9162 0 0 -13.9162 0 0 ]msf173.316 361.894 mo(a great place to learn)[9.49072 3.74316 9.60205 5.53857 8.50293 9.49072 5.76074 3.74365 9.49072 3.88232 9.49072 7.83496 8.50244 3.74365 5.51074 8.83691 3.74316 3.88232 8.50293 9.49072 5.60791 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 ]]
] del_res
/IGSWOC+Montserrat-MediumItalic*1 uf/IGSWOC+Montserrat-MediumItalic uf/Montserrat-MediumItalic uf/IGSWOA+Montserrat-Bold*1 uf/IGSWOA+Montserrat-Bold uf/Montserrat-Bold uf/IGSWOB+Oswald-DemiBold*1 uf/IGSWOB+Oswald-DemiBold uf/Oswald-DemiBold ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 26.3.1%%For: (ayib) ()%%Title: (UP - School logo_38-04.eps)%%CreationDate: 30/08/22 2.21 PM%%Canvassize: 16383%AI9_DataStream%Gb",KH!f:Jp[IbYGRpJ,/nAD@<b6L4E36Md+=]5[9L=)Qs7j;$kKIHI=XLrY2R\uK.3t+F3AY<?F(UTWZ8h2p])@u$ps3QBa]%^=%Ra&/.4Si+"ZE[q\YC"+/_8WE`He@BUb*aN`H!.;+Jgea1n]EMf+$\moi!C47irqaH)(uA&qp"\(?0j(<oGIPI9+n.=PXV8J"kKdL%NqlFof\9IeU"dT5:?A+<d+PAg]rkCBYHU#,%"p7jR9%;'rTn%-/+@[Yl>]FdAl9>S8McFh@9;Z_%!sR4g5OK;`M37r,DQ1i#-_M=%d!'Rns1$s=4&'$Y?mMFQ:eC5P;7;K%gr.h8r<<5LPniLi=6r/QB[o`7TZ9WBZMPW7,+![q+E.[K-`TF1WGHr,6_XO]5I@]rOuf9S%r.rW4TXnSEIEtiV>0*48r^W=T\Ja;b\IL9lK2RksB(oX4P0Q>+lDOL>@OU`o<POI35DO+keNl2241kRTNVD`?LW9I'[/$[:\E'G%%?3(0CKcq?@J4XY[7fA/?`?QX<eHSbRI/d*W`k>o'CoWS*1,(PQCoWTAdrCa42GUTt*)%';NRJ'd:a+-47AG.^r)?ldFeTfIVXjOF%bh<rYj/LOVl1R'h+q/t(=AWY?+a#m/"QpZ$*e.RZ;?b7YUAdsU3t-b9n9o.a!4+/q(.=ioa%^6Uf'cSV*h!NUI['q$qLC\[pnBr.%^>gU1qJ["XO0Q[rqbU7:)<qk0GVPP6OglJq?u[>ql?%:XT#g/Z"HV#s2UI$uE9S:m*\)R66ilrBe#.Ms=Sg0bK2[\I\@+6GmRi!X%cN=,BRPW-cmrQ#0[U(tThi+CWoi9l>.W;uR<NGSgA\+0_?)((8=!((nC0=Cc.pC)Q7TiUUb"sZN</V72U9X@;.,3]e??dpTJI_6u%\dd\jQ5*^=&/6nW7YmFL%0_;adK<62,;=@:_](bAhe<BN8eNIWW3)8$Mh>Ae.Bc>^Lq1DJnkH050UbZ-7A[mdVb=GiW@W#ZCWs:G%&;G5/gE2l<o`'F2rH)uA]H%q?VuJDBSS)>DrGJ5thg:mK*X_+d?@[\*>3kWE?:I2'`1Qubs%ckWHMB!u=1?E\n:L2]1XL6Q5MD)5%@#P0E',?(J<m4q98:VQ@%M7^lJ8=c@OuaI,%GA,gC2":=8A>749(P4D+%BcX@U,o36`h%%1@M8&45CuaKHS:-).S,.I!_/=F[g.6%8]3d2P[a8(s2*=*da)2!=@3U43B_n9`"#*F4P(pN[5aR53f&8N;<:dtb((\@FNK-/29Y`WMA\:HF#A)Rp=9';<cm.V$LOmJ:=V\/%QMP^5:Xp(ZC5FHV2-9(<%[nhLm\VRSWtWn@g(M8Hi;^;(f>[reP-dj/Z1R@ds2%@FT"kdMTL6!1^ST[)]GJ2]@7H\KGeB8,ODMp4%i1VW(0Uo*8gEP&s2WKi.3B\Rqn'fQ+C$-ur(VfmB2?5j:Y<H:XLb8Vsf74s@4'!*4;g#<gch]'W<Riq<ld/g)Zl&"uj&Xn0MCJec%\oT;0e_]*13EfpOEB;FC!Q"R*+Xb'd>e8[>"pUk#ZEPp6<4Dp!*M,W/JptZ%!fa]+E)3;<?0FI:VZFLQeooID8aHl?^g"EIUOo9E%<*q&N:OE!I(QZt_C`6D)i^@dtQqqc*Gi9aH(WA_PapXkX13>u1IpcL\o)0@GWB$o]!"@hkq5`*[Ku^Rs^CBb83jar%e7X<n8-[+0%#3\Y;nOse:UP:$(#Q+I40t*&(.=M^m!VkTf4:HT&48`3;04SQ("qDngrrmijAPucWYi8k--j()(=!,;Kpo"+@nCptB)>$o"FnKXS%s+;-+JYcPX>]>,V&9[*+;4$t$)4JFN^c-ao^a#h\N>*B^?C$?:C]%'E"g_Ce,GUmbD1!.bO%(($pkA]]+25D![A4OV[KJ(`qG'H5%1>["d#9J>Y2C][p)-AZs53pXUbB'FAla&:o";\iSWJ<][.Z<=Bjtq?"YWO,LLH+K(^f!;Knh&>gaXQW/UM`^OC(2L^!)6-FC0,nR%,Ba4g<ppXM-ZFK/Ech$]NsQ'XeuTQ#jHWra)H#BWk(#`9D[sAdDbdLg)^(bA]_T\ZGg*)XP"h^g/<Y!R5/4?7/&]VZM\KhI8H\h7%ApjEShrf=$iErrrELL'f\_[Ke_SjV?Eat_N<4K[OQ)+geRB"XC8D57nU8n^IA=,JX@Ob'BARf->(YD?7b(-mja_+56C6m#Jfh=;j%/S$Bb>)paVnXI_aMRc?^Su:PijE(,`^6Gh^C\_.b0!L%G+^ZW5b(WH](+[mm<08VAMV03+Z,KVG;QLXL`Hm@nZ))7c=3?j:V.-E/%Wg'N[>,bi*b&j%#ZfOk@>L(,d-l:('Ek,F,f?b6_f.1rZ)doku`l5a4_Nf,OZGra?At^b]Vs74jrDdVJW3fNV0#_RZ)?M'`bLSFf%Z1qdC1qon,<NY9hhPjPV'tDE].VT^7<@u"Oa&fF4MkLZ/A[O%@0,?/E?aOuRl;ah$"W]pP=3t:l/f9r_$sEg(1KK&m`is)(W2.Ao%@Cd9U^;:SP*5aHE<*"T2@;-(K.oA<oEMC4PM"I/d"P>/R*Y3E[)s/[m;0=E=4F[.ZQ11a6.tFUaCaE"g.nkZ":_g!8#>D/7i1dta%\JPDobEm:#E*5Ff(=8*p;l)N[243#'+D2!WZj;JV#DC?fJ1L\G)*hW1=>(lRWPT(/Th#bl]MQhm!8"Q-o.495;l#=NTjFZ@gjhsI%(J7N$!$m^\jFC2b5VNV.%:,XtFhkb,*mJ^C#c\/!nj$HjHo;1.`o<E,K0dDo^r=0U_,QtZ\^"&t\-d0Uahd>1JC;UT!Z3's_I,WU%oI>k"JFES8fGL0q<u.qY>_o1QDi0oFP\:m@)Fb1r.3\m_D5_=D55JdJb.s9r$WmLpNr_2]1B8$h*V`6`JaijOX^I@uHG[UX\rN4L%n"[W+>ejuSi%9K0H!irB(5<?=]G+ja8hfVB;Q^Fl=j>KIoha"6#)[$`=W!hpN)^J0X:/T?Ki+qh0[S/Q(</9@j.(l:0>bdTVGr8[%5[9/+5n@+X2<A9'MD0ZoK0`?74p11b0UkC&WoV!nE]T\I!BsL;VlIY=df;5o;S]sc9PFO3Yln03!W9$!l7aO"Hi\;>_ZCV:!BH$f%f4?*'.PR5N9G^uE@_dOM!.-&aHn7q+nu5SPRq;0$3.(`<Z`7l)b%.Iqo(t-qUj3_9!K.ha/qBUfj10CMlp-Fp<A\4-a%<9Zb:uu)%R)r1gI3o?gT2iRcfh@N;e=,T;Y)kGH1g;$]<G8XB28lIH0F;;=PBE(_E7^>JLnA485g^<Sbr$%K1gmUAn;>m3#eau]N[P"64-Rhg%3>N#cXCDi%JqGe2Jd);Ak_G8'$B.4bLaLt]Yg.f@:m[&^0bs(,8>i5R.N:+f)&T8,$7&,,ZrO?[/ChnsV1(eXWlA&DPq<ribJl=d%AQDp<<.Y&6[5piWr(jq(a]^S$=7=X8)(^&QfpGgir.cf.$$F6!mB">)[@3VVY8Eg3J^gltjXM*KhRIS\OSA%*26MmXZ,Xa"(N!EA%IVG5O^1(^+Wod[-\B;gFeHS-;RP4e?A4RoF*3r0[;[-ANOB);@Mn,2uI8&=H,`aF!XA[*'3ED!#7H+N]/"NR<a(r5#%+)ZrBO:o'%cN=biJJ;3/#WbJ,AlSpGWIXIh!PoJUq.pNCV9PSqDH5_sBNJ?K9#al\Y(CZT[0t]G@JQ)(Op520m:)&Js.bR3;D1sI1aWaCDbO*E%.b[nRY**c>[0qn*)]M8j1REY6,*nP>Y_\iR=BUN8iQD:<9i4*5GbRee<m275\I9qr)Ba,7=&?gZ("Eet@7F$/1+]!d@*.G00bJ3H%\T-aO@a(o^ggoon@eD(KI:ltLol'+K`jj?&`<^l^lB2($2',[DV&bF>mC;3S*Meloo1uCuP7Jc]@&ou:+m_\NT#9Vs=0:8BWf3fI%jZnsN,?62t\l8i4.3p#I7mlDON=A%HI%e;[-4Bio@.k>?6nBK9K2%Z#-5e7+Gq>8BR92?Ts(-c<o0DsP9`7M9Y$bH=ln,#qC4[,P%N#=01OT<X95#MN4;SmgXMFD52L?5BA4apSScV.n'K5F=_bSE]J4iX5]l,oSbeUnn]MOp^-Bo8Kfe^G6r;pDWuH<B/NSujMg=Qj3_%096j]&m"R&(!fkM9GJ'eGr8=<6^*;F(Bb>YT/A@d0Nu_ZF^0mmU)b&H?SPRK3\KT&eTOq4=4qo=CgtsEC@1$3/oihclaX5T<VWT*%$Y-NRF\u<s`276alfPV*Ybmu2FDTHm``%TX6=^sGn,tN!5,>H3=N<[-Z!^U$1D7u(4<jltO!3#k;EBGmK>FkIZl3^^[TB]_2Qb"$%f'%,i)j80\&'utabdCn#6Vf>t4iD`i0'HeR,X%!OO6L[+ErZtX!jDkoc5KAC"brfUm%XR!MASqiQj\N`%3TEq-4$lL'(DXtk"T":%4Y4dpJ8%kSh3>.HSh2n89Ns,Lf%Zh\)?:^4N+I)cLA@oX);Bl+NUn2rG^;&R<NT:":UOV2euQt?X7fKBCgY]s[VJ%FQpp,YBr85:%l)7XjY2-&M[OMf0]ggO`!,#:h;HFr_<sBeDMu&5@b=!ioW=W5J27-g)9#WWW;DCe_VsK6!=L+S567,l',Y_du)4HaHfi<FgbK97\%.q\\Ck4nOk"<&'t2=)nmQ#iMH+kBNB]Q1TE:7Xcg?Q&6/]m?]>0<\Z8)!4L\I-JA]ZGuPffXt;c<%a)G#/cU#-PS7''nR,8Sk*s8%29W<cV@Nff`Rq*s,_QCjFju_IC2enZk1L/@)(@8,<UCCPTi`"YP[f5*'OA(9LDi:(,tJJ?;(tZX;O!;N.p'ZL"KG;BWiBlqaqmn1%K`[>P.]'-gAj%[Z.V)9RaE4H2'm,mA4W\"LjR]C@USp7Ycp(A(1FRdt>rN;op-`Y@hG#TJcho(FJ'#oA1@pjVr$B,&?]o&-3AYIB%R,FeF[*VY#/5Xmn<,Kqoeii;K>:e,P0O,`?`3F'm6PumHjcMD/[SKmL16Z(FgeqG&0H6sAG,-%b7A.pU<b(d%onn;PWQ:Vh[+i6J%W9P!mhX[YK+_<KHc/S<j4%7]KTrrs?eLl!`bIl3UQi<C/^8pR.k),P?-AGU?E+MF<9V;hn=%tUtF""g@@VMr"b^rgMgV.'o1*b#'%1koOJ2H8@mb*]JWRotG65oDKQ4A6LLdhK6p/(g<9@LF+-c;e[9,?#J=A5tn#:_`H`1<aq`S(srU%19,SO;3bVB4Ns%bSaNh3r:p"%S,+%sq7f,&.PBq0JS#ode[[<l9:\M"NcVWh2Xf]`]ML\KSR#7VlG@Ek#.qFORY(u.[r`@>16e0-2Y;7UdJ``#N5+]Eg8e<V=&j3F%$.o,S/=nr!hrkH2W]jatc4O7?.i'"&)pT.+&hu291Pi#,J>rdkH>'C7i[4n+O7E&ek(3fP.;%NV.'JA+43^C&ed_I(!02:F%6P`G%#&8GbeVnm]RCne0ZOF'K<7Xni91,*KCK[-s@\pT$75deKAJlnP_A.ZuB<[V.F$NgX,u7">1bs?p^"rJ`[-F,O(_kb96")'7>IARj%)Y?q1.jO>eYAtZ4[;/.?VN>h8.aJi(].@0n9:O4Bds=`jeC8o+OtiH4;S-58krPrqKfGbU)RDj*=;4U@=ZBKPVBbqNLbZfpB%%<6%+fX^D2T<p:F^prARmhV'`N7d_WOe'kn9MUdd],K`)$.1`ZN\PdEZ,6r]I_PehUYZ249^8rZ1=+[r)@f!eWtr)d@4P+;Vk0$Z/2+/%mYYn(=0tEWiL%#8p(OKhCF-&Jl$jFA(3TRB_)](AMZ(m>m#fR2&L573G$#QclPfYp%EiG7<Fp;Sd>%V8g96mgG@gWS$kJZ(a:qTP%hMCpTc1ic34#,B@<t0C)K2JIL6')#o4A<Oo@Nu@0jBc:8mNj[1`XK2IY`WA%ipeKl%(kQm_6%)Q;7C3.^g^V9WM#V[hW;nj?>b61%FknS.\6.@@EOfbl/!d#$0<=8VHq*1,XMueTJ!C`\RB#,dE\,;pY=<B/J(A0Zdhbic>\2)Y19RA56Gfc7_uJgM=3bhHK0PoBBJ+(5%1&Ji@k^&Y&<<KcAK8$fIBX;tb$`7B5c=>6%1]u,g+D[-4<)nn&WEKVlW-O]V/'o;j\[]7('CN9M=D,I@Gnu8q$[0NRBC']Nm'H\(%YYP^eO3TrVh?Zb&4C]NtaqbOqf18mhgknSBqI70bi@s_fZ(A/&kj.cqqM"FNU.'Nt[<;G2[]Wt6R?-Y2df%9EU*7FPCjMB6IV$N3%I3'P8/S=dA<=C\NKX->8#d5)(;H3giZ5AiTN'sLY_5'XQ!Or`!4%VF=08&;/i%O48<-OLK,CU#A:_OLYhA#mN\h'Ys"k@Qk&D<d)%?6Y8d'A)VVe5Rl0F?/$&FkB:d-<V$6(T*gl7Re_E=\6ma7-e$3PoB/L8(T%hj<Da-Vbh'qi\h/QMGqDN*?^@3*fUpoXh?CA*BdH-%a/pL]X)U_]V()(7o=@ff$48H*d`0o6Ah8@WHupQUGkelJN,Pl;doZKc)t#QuPhR6drhh.9iTCFA5W[:bHp&6@]06,/#t+WXNi2V;%A[4HuILYeQF@hY*?d?+UbG!E($@KV5s*$WY17u$_]0]$IqtPHEMg%MG,\K&IV5pt1d=*f*=YH-=@M?N:?ejj'1UV+)$?6D0fbu?=%e*H4K%?,EKKG#pK"bdLI"m.@6JEabV_pfe%:>6-MK6Yh38-*;h^)\o7Tgg'i,QMBHM\%f-7#r%,%Nt*LWm),#,7+JJO29:\oI7-7%@"gRQ=2nCUOl_8UJ<r5a,SV'<.$$ATP@F7B55%:u1uN)*6`J<heC=7aJ_'4L!YrMsU<Cl&f)o\62!P]pb%.<f@Y?]>lunTn]u#:'%<9@j[UNPE'd6A^oB)W[A\B]sn;`5aHm6?ni_(57N7g]mYEB>SP4PK>kULKYJqfN]B#B.aU#agE,1U:ir)(?tNnG%%IFHq?9Dp:tk%R0bi/!WD!"6jfl,Rt/nL3n(A7nICkTE$BJeR18p5Yele;33rWu2W2d`SCrFVfmqJu2.ec)bQdun2IM.Vb&Wj7Q\FCJfS@iE,G^KQ%kr_l=19)OO1Ab7+dh<%o:KBMVr^RcCVu7bJ5<Ak=/;Vd<B:1-;cY1d(jH+4FiXt_)"EV(DOAL^3+c@,pF@HtM%]R_q0gL2AV#0;)%D\!"H3^RQlhK&Yj8FeRAgK0EV294UkK1Kuk"7PFe.E!(."\B#C,9&L:7VMI%;G`b%:!:<#G?4XLJeFUWE&nCU*=4/D/&)3b2mo;5%k)D8_l0d_MTU5C;=#r&i%L@j<1Y:cYD2oI[BZ6Cm!H8%:airI'"0p2HaaG2WJoCi"G:4tN?WK.,-mK%o$,gXc,uPC5n[_=,\c*j)%.a`A>0n6ELrk!FW-Zt^+*j7tJ@</g=qI(dd;XPZL'mts?Uk!JehVSAk*-9@Z;S\rC3rgEm\7hj`D^1YC(>sh'lAT7C!+A+SN3FHo%kV4a(r.j:\V/c,`_Xa0u_F8QdTGr(Ml&V9t8.%/).@IQ&s']Hg"r"7$Oi_(51(f.NU=cKec-:L\<Fu.70/R%HNqi2VbHm$D[[AjN%+#`WP=Hj#nU*./]19fX\YWATRJ#(G$'\u-f1HJfmMqB5qP[#)'F:1iSpI>T.GCq")S2)@LqkR0<g($I<HoQ!@O5b$h92M!q\#?Wa%8Y]Q9"jDq'`BQnD.ks8H\og=\JJ9\$-7&J%9oDMh0!W=UK?(CFFpIg2-HBbC!-4qP/J0cF;i;D5R$=X?CL3mF?UM20%B$mH6aW_,%[U6qNFK0NGJ\\\h*oC%Z\Ntm;'KH7+=M(.ZnD=d,'J]#=Bp;H4E6KQ:5=E_B[,@)&K&(oV?FbNW(Ri"P\&l<_V+<m1$A;ogF$(Qu%+pI$U&0^(;"]7>CTFg)!DoCa7ZjbSYjAE:o`2!T+[-#>uLPJ]!HNY&SRhSaN7(<W#jq/?[YP?1?g@dC%E9f34@XGk&$P@.r\:1n'%\>&S!RBA9!-b't';<l)hC&H"RiW-uY%pZ$]<OtCcJWtCq`^L8!!sC]!T\Qr97FDIbAYIlA\S+EsRLhH7\17j':'@0g2d5gLp>-sB%`"2+R6JZgd2iofFj_THdqQC\TL*K.hf5;+G_r/LXMmL,>/QB&Ci#j17m!Zt1"1@/!Y:2NLLfDo](><J.+478,:*L1I&q4l9U'6e_%^sr+i+LVKL`@*+=#,>`o9kk,,CL3mH03klOj<)&g*%;8/7r(k3@5F%9Q:\u+$B]pP(,hq'idYXo9KQ\kI,d#jM"-$f\QZB&AP-Ae%&_k-:G1>V)E$hkWMO]AjCjGI[B&Vg%1D/[)P6T<#%*'\*S;EQ#4U[dJ"j[$#JMZ\L3>a-*8($=BPF<35R[718N11:8+"]8VS;B#Y%MjF#p$/^XVVjN_;7;H4A912NE0\ai*L]nA(DR<7=n(u#:@S>1"pLH[3K942B=f*,H6_<!RZ2NT-gImZh(c7HDV3m5X0]R#H=:muq%*5+nt5Be3gd>\aAAnTZ>[YtVJ6Y:\-IAfLX6>b`t/T3&r-=5a.H\)B"($"[kZpmFu:G_u.j)6aQ2@b5[71,D1n@*(jaGdl&Nkb+I%(uud-Z+#On[qI3@^QlL_&DGF:[i'CZEOX#>2H/J0bMAmM+<R,cI?7Qr0qnrJ($ZA\MVrtO4k?T]N7R4:La\ucP`HNI7#d"s2*)hJ%M#PW#^=3b.#`=e9mIN2@pcS9GK"gfG;C11EWS?n2ceX'.JbK+hS>?7@*PP>NflWb@@]28WKhj0.s0giIr4`CGifSiEN5;)ndl)K%%[V^p:>Z9:^:#^M/&?/-,dl-d1cKL)O3q\hVFuJ(sm"=^:p*&f8nib,>GDc:m.4B]0EM\eeU8__!7*EZ@+<..$p'.62W6KdeFc7HC%qe1m)Oe\XBG)D+HMTgaC7d-(Y3Xg8p[kYS2RkJ_Y=*a3'9#U4:@f?pA`1*8m6r>1t*g_[`8uoRAoG5eFe+/D20W<_95Y*U_>-mcX%Jo5K-X)q40Oj"(R!>.n#SImcU.%MZ3:G(NeZHP+n.BZ'sQY5-(Gi;?SIQ^/:84VGaIsA!M.&_]4K][7s<'2*OIW'dF[f61hA"Bt!%B/^*/ld$Ypr>DprZi\KK>L?qp;d"2@1Cjh^XZ?EBTp`#CcdnV9ZZg)kjrD46R+[pLe>Hugk3V.9eaE&#;!*hcG!#cEbdO"4D's",%]$X!ZCe"h@Ad7,9^g$fW$\J.plUBh/rYD_QILEsY^5,uX\tZtj>8#iH&ga\&j=m3/IP]19IqAH#N`M`SIP]/c6HcRdKt$p$&c%0D%^IQ?@\(_jbDk:-gQ:'*a]m]Nu!BLk1YfK6@.SKO9-eY"86deh+PXpeW,Y-c^bp]11aH,?QGhDgZknu%;Ar+@9U:$,p*<<Q/$NjV?%64@]/GNar7L/l/UQ=D!L]Fc"I+GTD$3"3;fJa%h4Pb-;Cn86N>V3s+h5Z*t1ULqfMaFH2iB9_P);Op[RB+"O3B$R?C1MZ'2RQ7-T%cD[-el9Ee'LqOHg0He-d2_jp*rEZ#&^XX&FCBe>!OtW`qNhSau5ADa1#&*gp!cZY[@@KLkh.lru5`Ht39LWb18"agV19C@)>3pDH%MSD:Xs%hC<,HAt;Q?iLMk%_=fLLtE&U"aWVH,lEE\O7-5?mk%I6<?2-\j>%>,kQ?@D)n>u,!!KJ*77[OB%q>o%ZmpLEm-r8LCp5B%AB^6.c`$-'dupBOOufq?XWj_PbX?-oAn8?VeWf0>BF,J,K_Qd8[0kiP^O;et[]>[;,]r+UJGBk%[JDl;1<d0^Lt5K"e@%,g(/LN0%.tc=6B:4g&9[V`9QQb@V5o`YZ44.OIm\J>=&EO+<d5n6?FkZp&iORT<"6A(X!r>Xh-fXbj?jckKP8!UHbR\E^2IF"TpiEn0o'`t^%B1?.%GYD'ss3-9<JLhTdY\$@0'Tm6E`;)Z"L_MNV(i^,iA7id)N&Vns1c+-'7NBOcP&e;H3h))XE;jl5nt4_JGp[-XMAA$PkNrhC%MV-"pc%qGjj!ol9ZH9&Gi0>\9Y[43[L`r5DqjI?A,IfrjLJhn9nGT#>G@k&;L"Wc2`Q<L5inoMFYQ=<5[U[d.iVQ8lCms`qoPsRV%;FJq5h,L`kX$@\Lpbmp7C:45nn(`KY=V?)"8/JC&%b.YBGX)4g%@BIt/$dT'g96iKJN,]t0/i>^OW#;\(bV*q$"3/!gNhib2FhS'%Ha;1XLs:kTl9g'R4)HM'%q7;OfVU+KrnAS(@@KYc-9,CPW)pJh,.O3j%L,Ka&\AXu_:NH2iFMrj'64&ZI;U7Kq>T=>D5O@5OZAaC%/nu9aZRE2K)g7+oqp2`'6Kt`^bZU_AS!#*;XY>uR/$dZsWQ?WC$tQ6UcLfbGp"7?*^6p<0j^=U7`=tu]MF0f@RYa@N+pQ58JN0O<%q\ZQXbAXkW_?Jsf%Fo(,3&<((Ad-J]_!kB4Znfe%D$<B:]%M,DbRFF<-Y6loMDI'X6Q$h!1GGgb1U.f7/[+Nb%%N`:ZRmUs<lKp$%+X37J5CP"ee?_AP)f1Hu(+ibZO5=8sPTtteOF/%>&381,D&;bOfYQIWk@7d/77)G8D.Z7V9'U?XA`3^_,6s<s0(=eopt]S9D<b9.%Rk92,^MUs?>N10KGElO);=b*0_#87:;e!%qnR`5qaPl,,EW,!:i97G(8c6@9=+2JZ=t8OiNHL+o<BWbA83?A=GI_Rj?$nd-&\4Yj%g'egjTH:@sPnDlrrS-]Kak$OFB_e'UhV3V@"mALE/OZA!HYD[Cs!/85A4RniYjT`S&EW0H0J\C21Y:cYD3!9"L_c&V"5l(M@:5!o%-G$>Z%QB9&@26&.V=KBEDZg8+Lk;MnC_1:<#)#3JUUI(_'9#c!?W0#fG,G39&!Xh"Tug"&qqH8.^K"Eol7pn?Tu-HBMHnmECA:j,%B-?nnEnr0JS7iTDG:5\_L,]OY+1GYIQ[@>Zb5D:t=R/1R;#f@aJWm[fCQFP12E_`FLlW778BrNUkTcU^6O6uZN9^Zs)j/M-hZ>X*%Lh]>VgC?J>&M@8`le;]B]`gg&6ktg-#Ts.>s%rrQSVb]X<J3i)0i&uVUT06t,\Z8lh"VL=@]I4;JjsTH_Fi2.R?H$&'T%(mhqrjZ%A0cl_Ir_(?C]gKj28+H/CkQjl7?s@$X^dNg@3i5(fguoZi;V7)IK-CNSHMeNk+E8oc=XG;G=9!\KKQI>h2m8!3$Q0?6dS\k!:>4K%"^*"c>p*bCED!ju^);,="gebI.)tdS2FdMceYgJ,RBnJ6S.l_:/O`4.,dKs"+YfNWgM\n,AfMc;U8/*=j4K0Rh%=rpN^%KbnkTVs%N2B32aWb<7RG4NQQ&):KE0jGV.!MbC^ctQjNpQ++W%hE5MH9TQeF[Z?@cu-6TRgU`Mt.N6-*Amcs1Vc/lbe2K,/SFB_TAQlXb[9T%2]iRuj`MD1%hk"ileVh3\BWn2fbuYWM__T7no6-#/\!,o\+0s`,)pL4#A.lR4!jQpfR0AMe6>all<PiBE6T#lr_1X0A.`_M/BVX<%I80,g;5&p'KT3qoAl5YYo[uVH1Stm>3B#FGM(T*$Udg'"?:'\]nZiQDZ(lOj42WNe0k_mp_^]\J1YsQ]2knrMOgp539TpN+'fA[S%*FWM4WZ>N5/FCp9A$+WCNj;!\ZKTToM:b#pM"!ku)sZfGs3g:=+2gnYkXe'gE[D4Ro+V]Ii-%V,naWnAP[EIk>b?B%V>.%>iM@:h%B6!TQKbK.-MlN@`,qh\a8AjVprT`r5]b4,?SUoYP\h[iY4F.3;pZgIi)J-s"i\X*_J*:@kd(63"];RnB8P0Ye!$K>1LOJ]*+9+SC%?g<RJ3;(9t%W@a2HfjEGi9psp2b$0MZ6-_c1lVrC^iSOlZfT=[Yc5-9TWXi*L-S:F7Bh5bh3GT(!EV6a6W;stD]rjDF)na,I9dKC%Gk1SHr'36,Zkjai"JC[q"lC'ro/c*/>"fk99,QaWY8A!=J1og=ek_[Kpi662JVn[0p?b9W([8k;RYo/FbEdHrEe@tThW!cU:/Y=>%6er/*0"t/T\kEr9@j0d'&KKmJ%,CDR+#1H(*"][0jahX;<oP&tMTunQ(AW.<4IsXWff57+M?USQd2LCsb:c[t\SN,tUK_D&!44N.%$oB4#[3'er[*p0<WJ]?s%(ckg0Ni/\WN[rCrQ_di*`j*qJ]pD8htItJX]R,[qhK)#;'590m4^jC3mTo=^TKQ\ih0DBdJ8aH6d[p3%dRB7!:c+Y;YuD3d<@XVN1.?LYk`I+^nkEW@ccb_Ic<\?pII]T"26>eeNNUKidFAA1lBD-1jdN/B5$uM9X%T_.6EX.806E4cMs(Yi%:dliA?aBK4-;UBi70Y^q@YPS&bQ/gI6M'$4F39Q%.5R8S0$A2";od.hh"_oFT!A22bPs`hqGCDpe.cIW>Ok!VM*EVAbS^;gN;fp4%b'*LMXlD#KECTu[Yiu\6Ru0"7h$9_H:8RO[S4`ftg_?i3hX'q?JjJS7a^Drs9*Otf-,3K,q59q9fVg<r1HmZPRqKqo'Q\TrEo&56%Vf\im%Ur3/CmN3+cqG7S6<<Jr.[-]d#X]GpB!E1&'JhROpn'8cU&+4aqe,M`8S;YZkV$=5;cB+rmpZZ<?uj'/$4)2]H'Z]01Q<hU%9M#Urf"e#JB[cb#"#fb$rK//*4Gu3H$Xt,JqMcI/:M#o@L7NV.Afe5W!T1YI]A-4Z*rM;M\ET@19T9FURF:mNXkFmsL;i:HO[>LO%J]Ua@D?8j`aeB"s==^p+rfYM?j0p=TMP32_<#hE0lZ^S"]YO<V1JZjCKu`\Q[/be&:$64/ldfHbTob3Q?-KV<$^bCk6=0!;o)/a)%0.R[l;W(seO2^M$1$AMf=Z^e-2EISA(FI#g#cb5VMi2Bm!?Jp2:37^TWK3L_H7_uZebhX)#cmp$8**qKX($G.!u=r!'J>]!9^BFo%K?u8e^b,IB6\^ecbOZaVCd;r`nhD7)-M^d9M$euLoseCB%skn*FeIcYGJGjRa/9#(32qi,>FR_bSGqoHq!EM)01Wi'8ph=i4i>%^%U\.Jd2J!A<;FD/tn\c&mAFD7!-b,YhMgbE+4d6\d\)gK>dV$<[rVs\jkV.rj#C`oQK+'lX6TM0^+W/d%cuD`1&B+8]+-^IAjn`GY%O5:H4]m$/?:'*15_#OVSf';7B'KUR0=eYUt@R19+&7o;o*$dW4o(12b-37\Og\rG9*sP,-%`[a=ObCj5j^3REgn<=O)c'i1S.HQ#%s5h8eoJBTuE3^/m0joqKee*?F#RloX)DM3$!Fk,<I^H(/;a-`p[6t1__'Aq^3L.0/3:k]C3*Q&P70Ktp!$WUj5n\TbaZ;TT18W9#%g^WJ-6"OVYk;rqQY0DNo["5>Mih.ReS@TIk.`!,G5b)M_TF6W5Z.i>4Gi;Q5:pCCb]&b`T7hNCdT@2GXZ\8k2AIEBSgWSccFM*^Y%A1Ua@l7Rem03OE=ms;Al%g;=P0djYKNTB:S7kn.YUR:4#)jq[AD%q$0bf2HVE*8c@F88SNJo`50Bo/A0\[pLuC7RWJR=^M#5/n^l%Ff`n](Cip=0C/!^H%Bla\dD5m(=6;r<Y\`+>.k'1)+Oe*I@?1g8\E8?5PY""s,RerFh.q3l3^fc0:ZM[X>XsmIGKTWiVGbu\_6r5%JJ>U`_p8KYq/?m0iqb;qmY-^oM1abPX#4\N=D>Me5N_(Zp]W#q][Zlrq[MR%]IXCWICIYc,>6_H3#sK$Tb?k?o)1<#kmi'+#7mSs%jOWM*!*$i0GtB"t-#Q#XX9gBlIl7X+\18L_@%p%<hVnYJ+1L8ME9f"VIH\Wl]JMl+7+qTo[a6&5gEQ3]r"GFl(B@#"Uj'`T#Z&mV%Ig2X#pPUQD!0;NKs0D7<#$Ps0TFiS^`ZMsC*VN\,rI,!?g@*'$BC63H>s6l6%=SB70#ej/bFHGiJOnksBg3*+(p<q[0IJ8U@"<@`%,4-Z31L<DG"!c+>OLguQPm?uongdBO/uDZG?n&#sP9Hsa%&S\ZTlX7s08?Fb;B/fqf2:G33*uX#'\-/BL%g(t/r659r\Y(a__Y?^%9!Sq6(-jCSF=mj5$`(r'VCT;%eG`>?+:t*G2Yjf6f9fNgb)nPsN0CTu6G>^>*4Y#B@>>0cpul/;6&$InH&nBM0[sC#7X<o$n,oGF%gCRI4nqLa+C,FYk(Kbh=&oT8Z5U1N+4]j"V\Z;phQ("!:rBds8,<h"-I9M+?D#aBN!r`)T[R:&4OdIu+ZtgI3=;L!BX$:A*,-]E%%IP;IHK3d-ee>D&Hf?'Gb`5"at)0AelR>c<e/IIY.QuYOFaaN9%W&REB3*F]JfUUff!S?R<=C8]t<(')/l$tK+VI0[i@[toc12q:8%`!$fm)0"ZB=Z5SOPQo.b+Y7>.)VDc$Bjf%!M:]./g9[;ZfW^=bQ-=IhUbNJj/[Sspq!))YXY7-?7$.'pP,PDlN29e`D+["M,]n>U%Pj*ANZ8(Wq"(Zu%dX3c5i!(<Aj_eub=N$JU(qT.Ihqs(?.\bEI:a_?#1tA^+*Ej-JfE>_`Nu\or]E@%sV1a:OP&ou1(57>*/)<0m%2Q-5/Ab*CETBNi4d=Ca8F_TK)IW])QCm]jE/U5-aMd#q*f!?b_7L*2Q:ejMs8t/rgN,=VS5Ri;tne*>o(*2&&jH0_SK607l=_iR]%UdCbUh)LQI4=i$4PP'X@cF*IGs$]G5CnXt(IC+k%L^iKMX'*YZe5:YF6-j'Lq2?D)==-r_,Slp_\@@mBB[p\cn`Fe@ZsGbAo@a?X%E2kG&R_hg4;H/OZ=B]X>rVB>%FC"SY\d%a8:JCob))25_]dEjrF3HuoO]Y(4J4-N\b'K@BRSVCtBt7!C8Y\;#p6mf@=2W&6>`5;(%]QB@]YBq"(fQZ:3<oX=-[*\43E<Y^MT[CSpfL@7KNN:Z:r[/fj=RCu[;\A>=8>jmQDL^tE#=-9@Kc8!B]Re]K6,&9U4c9h)@hCVf%%>iI,I)mK(/q1b=i!#[NUb0DY%T__NNIm&\#s8:&6FZ3%k<iA;gLa+-9H8/?,6U!Se[U&uo`Y%.i6Y6dX@_oIc-Y)!1,Mf!Q>69n%^4eWcr/q4:S(nPRGUOtG0U27HP"S&N2EsgLOR$.(D*#nhK9tG!WeG]2q#$X#aukV@B)NXV(cpWs90H$rPL3%'?e$;`]\@B>+6h0s%Z'B'HPob_5WcL9l9"0-rh<?%3YIq7%$)sb3]D(X9XqWi&!bLmK&!npfjnO;,P,!rGg]is_3Rr8J+n<)nn@kIX)-W.O*3;T)N[1OP%#RmgWrlsHn>e_q\9OW#mE$:c<aKkQMWWe1VG!HYRO7\3&)#'9&Ndh6^bM%tL,>^YV,j\;P@)[\@LS1_.kR7P#aF$7([cgoqBqSQ/%2=u:*$&4&Q\)gs^m";a>W8-(89s(3?LbM&5/,A0M)UiAAPa%[a%6pM\T[WMq6Js=gq-t*Q!q"iNcGG1(7:3S80Cf&7#rHZCEf+cY%(cqm+Z1sXL@2/<E2,LI%^Mr>pJ1EjLJU&CCX9%P4EDp\b[Ii6U!:*jp%q)>,7i4eCU=I<L;9WQ."RKAKKg.k;741WXZ3"]Y`+$U3%%>*#cKeERo[<9Am+C],t`CYOBLWW2S^u0a;"&N.3rF[5/U:)WKEB"UCX\=VoH32m\T98h[=_nV1+S[N"^IhSTAJ`H-Wf/^pSS,uS%4d=d#N(onR:1d_qUsS[a^^X1+#g9pX-kK3KkmG/K*0lZ@mCjZ.WauB$>@1u_B5MB<:>kfZ#F9]GJl-h#*X=+bC,dJEq``Amo)'X6%N#K?dd_D6h@(aX5+T\T[!*ur8.:k%E[03Z2k$M/UQNL+T+\Yk`A9\+\N0I%8!V'&XE<eL,eOg.*>*M61S]3)0dR'i/.dZYFpSArg%P+WtpYi!e<&Q#0&dI(Q:./&k+Qo/'cV_SVbWq+KOP</6bYBX%K8a:=WNf>F%lfS*Z.!P=d$?^^2?Z!5?2P9^sClpDn_7uol?@iNQ%ZDEXk]S]l_/R*=0i:^T#eMNpi7pRG8iMfX%KFK(TJl[7Qk]f%GMJ5d(jToUUZA:1<9DAn298HDhaVIq<gEEu;DNIsuTDVA@;*]:]%d$QEI<XU:*$KEGGE8:)NNaZgpgdD]qhnAAh"l^?F:@DHfKq,"(<En>Ni\0k,G6#:bn&'KL0f23AMmgnt&u`4$b_p^AHD3-5)sRO1%[1A.XAY;3Q8kZf!p8Ic)37sR,OO*&go8R#o2O--067nrbH)7^p#`,e:%^N96TY`"^1/W'1L*!HTXWG%#@MKRm;:36)0!&InjoUeT%o;PNY"YS_=PoU"7bi]Lfg7ANLp47;YMXmdeIIqLkT>;&X#IPL7#XMZ2a82MJYS-EuEBoD)\f:aA]28[q_HF;GW:f)sZD?YX)#?mM%dB"hsm&R*SLL!%G_;[nj^DAfdaS@_kn<%(EopDcmfIngO3T>MX]($KMY0_9c)UpC4Krr(0VRk*tfjYdW[FJd"p5pUQ[7!58h=bU&%[/Mqt[dT-**d3V=(j2K*B`%b:0U/gY?g-c7_.7UQ?+ko8c%VFAWu"<ViE5H)hP9)f(ch`IhNgZ)IVZ8reu@NIV:=n+OMr0qk&MT9%/<_bmSIbR4lEYG9&pkorq'epSAW)l<2cj!c<k<]rZ,N4[O-.5]>ff)D@[@jgd\FJT8lI.<6##g(j"9:QL<*fS[0B#'iIU<Nq]Xga%We-qD2&FmCW)+#+_[EVqXt/^hjQaA,heEX*BO8ZlEe3@$e@8YYp4QBae_eo__1.TQ-T$S7F;PL101BZh.4Ib,#pUGu\b=FfGk\c7%Vq\c"m#YV.D`N.bDPSm9ef?c&POO(A_MaLC_TBe(`.iKgC\T1iLT5p"jfl%3ibL8OKgbeQL5gDH/jE*?^,Z@_Ht:mS,[/4%!5_[N%a4$dPD?.5a%FcNhXtGB5=#3033.&raLT4h&!V]S1^HiqNosR+'+5`%M)c&u.MP"8Y%<aG`I=))m0S;Bd[XK4O\seQ)eLf,/b?((e%3%2mgjctmBk'S0<"AQ*?s7sh3j"g?26-])_f$Qc>&EdSG><Qd2W]/r);K38jW(Qil=8#9,`Wn3\EDUh('p!=_C3;1C+/5p?U%LB%%B"ZiQm`-%S<RKsh?#2N?EIn"@@f'Q?!#nm+>"7\E621*M<U@pcX&3*e".9RkGN,s^Hrl==qep-eQP?\mCJ3K7^Rn=EH4XLU3r=11%D6m1O=L0r2&.m>#ha6ib_.;%p\:03sr-\IO:0dXtN#4)IV!Ga;R3eM(1<-)138diR?,32.m(7N'e:<B'_BRO=ilc:Fjn0@@nEk'R%"+8VJ-6/dD[V6*P/'(>_D8oB9m[O1S>9*#UA+A>bF4QFL1R(C>RrQokn-d62,SEbpX>6,9-184NfkUA*YIITqP1&N6oD*Y1kYnIK%8:4k_rnZBmh,Ubuc1:,6eH<@jr9qBKKR;g[RRjM4bp="G#BR-qY396a%u#83m7QR=1jk^XdEcDRs6q5JQ\>hBR*.G2]6j_T,M>N3%Zb+g"mjmm=E>eeX4`.s/Di:77cZGS#D+WsS&cT=fREP<Nc`d+VmA[dKJ:7k#h(i3eg-H:QiLdC9mcBf/-G$I7Dq$;`&"imHIE;q)%CTU6EY5YE/3Fp;:p7PAu%:7W.X68eFjqGF/>1i^UID1(]e2V>[TsQFW;A]lP+d8CrpFELZl0qa+c/nZf)7EdT4S[P((JDUM*`k1=%=3oUAXhK3\Do1D7]^et9Q-LZsQCb93^L<'@GOTOa^;U`cErPkD*`-qSc+39HGk.[42bs[uc(0.TIJsAe^b'7$p`;Co`LH_VS3"nY%2n4-%p1p-R%C'K2^`AK_WXF`s'r]=hXf3bbL9jI$oQUfsFYL_R+iTL3H@RlMg_%^f!(%A>I3/dilZ3.]n>[,qdk0@FTe++2rJ)2^%dV%DLj6IXc2X7WlqGfK.X^_r7ksq.k6*E96)ZfG.r41GH3$!(cg;%NQ2%i#A30h$SR!k/J`0f'!X,sAZIhoq,eU#9$n#UA=TCQbZ%f<$lp?9@"GgNce$oSpt?3o=J-#Ns)cr*YH=\Q$`%k@3IgDuS`P=+-t6[OGroc>=tR>C4!F454sqnp]i-FL&<FJ1`TaWX3i#F**Xa%k5#D\F`F0HSZO5,RZl([WP,3^*U$&e/X;X.Hc;o+'t1][f".nR&$==79kE^@2m&=*dX.h@Xm27!o:eVhDOU34.GrGu.P'["R9_cW%=@i>An!+6lB+Oo%Zi'4S1K.eAp"f@ATs8rfq,L!.5GY_[Y<lZCpZaJ[Z?pmr4#_L'9*Y+[Y[6&,j`\gC-\\VdHtQra?CZL-W]V8s%O*892-Pqel]Ce4NF<B8D[24!`)W'jn>46%b?uAbPlO&nflaMMso^NN;:cc>jI^puq/07af>\<1:g!+QG;/Bcuaj\DMrXcS&oTo=^%]fk7+599.;fuA26o^AQqaI^(ChhS?1mb-$6!ljh65dT@F7CM&jhPH9?Ujf;Xg,q$2<uO#B3(@Pqn[WgAjtCo,o#mrULU6#Moh0Gj%F_cabUrk4$`?o\5W7LC/ei7_!A'&[1'sjN*%)6k,$YYu4..qB-VbHJVqhSNOYfH!dD\\C?m.Sl>g$8+IDW]EG1Yb\u03UlP6EBei%,F7.9m:A5?J./XU0]u+cJ%3+s%R8\e;#$[g0@$c(Psr5Q*H#o0D!@b:0Iscb5$R<D2qBGtWu"skJb6AU/"[$UQ%NCTkO`JXg>ag.%g,F/ESoSV=&*,'9>@1a6gD<M*lM5+t9=LKb;Ym,WRAV"Iqn"/O:OV%^chB%ah.l3U7c[++UeJ0hV/P8^BP\N!"ZgdX^TW("aLt2Q%\bf'X4Xpll[Mt(BN6KA`3k0kJ1VA'L_9[j$FVaGGqEUfj\)^cX@AS9DV)-A-%#3?l7inH\]Y!k`1WO=7_M^7BX]%lf%p-<AB;=.$%p.b*moLX@R=0?M;M"Y]1_Rl(6mXj2$>T8q92mcY]H^S?Ko]F_</1F/_jqd'T"``H)X#,2r/M+@H0#"nS](Ut@nq&\W5C`Xn,`<V$%,tD@fgjPm]jkQh>U[h[gHXWVoDOn<q9%BQgHZ"gP5*h[FA28?dpArRpFf7bs\oV_q:k-5h.[Ma:f8M[EVb=]tgaL&#Z_\tgXKp8s%q@tpro\6D!BD#SWW*Z*i7TW(B2"Qf+;HFft7\LR)ftlNr#4#rt\J&^nhQ,&4oW:C9\i4q5>Fg8i%?G#%YfcQiEo!eD]cEtGIrTB`%ZZ<O`-![!#)MM3K<;O85\pLd+\M["0Mm[D_7W\//c"h%:UX?[YWrB5H!NilJ3`hZWP&KUNVJDrdp#1a?UJ(O.m\usYe-^*e;^)\I%d+JJ8FEM,Ecg.Vnq;&tD1n#LG)a2?1n$GRQ2O5ACk*eeYf9fc/ZaHuTFW7DhG,_86>1U+/\\32Is#,@uF)CPo<U)U`2*$/(IeW67%;Y"MnIYDNSo!3V;LDsS248c\Lg1^(t#;eP==AQ[!*L+5UX\dVB[fuLqO625BQWC"l2@?b<D"d^](-NVMC8;f#=/1Q#omklkBQRl5%QG!3?o2Kaaok(,0lIkC]@nF6$B_6(pH8rTC0cL9u/BscV^3m\tITgl2oKc'>HT'S>>?ec5C:"J<r-85?aW8s]h%f1g,Ze4iXaT*J%Gr/^W9AH%67r"gSSC0)K=I!QCUuBRH"uWtM68YV3>:\Tc]glc.ZfGrpC%Yq$C\4a=C25[')G;\\a-s)<QF<.Sm#@kfq;l!*27bNb%*fa-TYOf:c1qG2uaOID&;/LDf\[IOj1"u[U9(gXZ[F#4jo>&WYYL^/U4s-Fee"\\kMVcDr/UiIElU+1;80W8%<jZHtcVo!hpTDZ\%`D=!@G3A/Sa9Lo,]prrq@nB%I1B$4lgoYV2%um<3MOg<$9!/*C>*Ai;T8u)d(RFKlNkQRE4rn[#:XoBq29#+8i;DBY[V?Sg]FApY%?V_rj$WZiKKrqcZ\U8gV7ScO9Ao@&PFN[p=.E?`smn<K*LV9e0;ai.^gL'O>:\PY=Wi:ZCNp:+qqo[LKrkZ86rq7N.E4!'>*I9im%4eD"X&!n83[1S&SLX0V&q<JLA[gOQjk`t8#qZlb8I?[Z-$cYl#@f0)@0p]K3mVCPucTa!g=$GI,H9<d_hCM4RZH(G-ouB\mngf1S%11J;#qY/;dm#(\p-PruDji?)Da4&f34]Y<6Ni0mQSb1dXNAnT0rq>0cRBAW`4FL>F2m@Z$l/OirA=XgR4QgUMcZAFJ]),G*p8"k8%Sau2ET;dUtV=4;&*[?u`3U^3+-Vej?hNjt`O6>ltq=6:eRMpUsPkRu"b<>JS4\Cu;l*2T`*gWhgF)7o9DhonQ0Up`JmO`h,r!1HR%Z\iAN0h6Lb:C?\9++K+n_,M2qfgW>Og3lc&Ms4_k?S9%[ekbM)a7mSkQ=1Psa3KE+2f=YjRge`VAbD%cPg]jreTq.e$!(^1ZETHn%*5]2)fkstrWmkt%eiU\2kGjs\K+-0SQi>4,]:W:XTYA\$J7s*YCdTJm0h\.b2Dh!!qX2SEM7;[$-#BhqTb^:=DcZ;p9MV*A0(bL/%o]OsP@eI4GXIh_f2%$F6PP/gWW`,t=2P&aZ/82`mMj4O.7dn';2@9k8^j7mGZeq/MEod<PBYF;Fe;N0s6a/KF.C!?!1t,^6%e!Pd%Z/JetEH0hj^e=Jl;lI%27^K:SR0i;@Al]s8)[/l^Y0L/^hqfb]5Q#Wcd:dD]R5q61Gr0jABJuko(04Q#)@JRo7N:O^?T]5Ylm5H>%a.-A/8FC-Y/pmlujRCm8d9>q;DP,A]oQ8paVU)t5>lC0>-n,VY$:Rc$1pbGiUKfA7<cW%U<,*mi;-gK"mkX/iUP-8??p38``bgE4%g7e5fYcr@_/`+nH[I*Y@]&a$]<5ietBF[7dEG<o*K:6)N\;T9L'fct-f7E1XdPqYWi!MKg((p-XY3HIpg9JPj#e`6&*9]h[]=7pk%ogKm3P=b@UHa);97'0j.>5+JR`M''=n$nIMc/L@Be$"-VM*C']d9/=Dppg\`o`#uB--\"mm289)*Vo*i>#P6"58MfCI(E:D4hDD,%qa7PodHg#VhWg'IH?O$@FO7-#*J6O2jS4A>XdV.s/Em?^]<HF&'EfNS#b&N)3Eu^Y0qT=OoP$,J>i=@SSFugC01J'V'`X`=%Pq4Q%WiYoP<gil/'3#h]ZAWhl6#PV#f.HNt0l&:.5WLR9OaiTBTcB9i@Bc=RWV^Z?bJAL>?aj*2et[PnCJO#%^`RSTma`]=!,D0MXj>:?%pp8JE?/[T[Y(k0eI@o@Y%[V^P+0QVn\*Q\OheLBQY^C+>mQder\?44&co.CnC!9$`d(lYF%N=Q/Q,T+_7:)`O0PJZ@WlF"l@m.b^%m'X#sV";4B<lhgdg^U?0DQl>1LKR"e(EUf^>E*s+kO&T[`cG7d'O)Y=jKqWRQ^9S:q0\^`!T/;!*+PlDV0Lps$N"5Q.W`rW2qM0<%Mu:.6eUc!fNp^)pd!mCkh>,<<r1WYr7UjbIj0Ks72to;p5G?*;L"/ORJfAjV"(Op+b'#4?\OqqTXMq>eo]qn7";9[\\Ft2I$hKc!%<DTtr8]+711XQb<YO9VI'W4#%HF<[am]I,rBoL?F="+&K;#CK\g\eXB,'<e<:tPP+";@d.e8XtmVcX#=NS+H<GGk3r03Pi$oZ"L9%]%k>snknXH0+=9qR6QHnB@lrZS\e1c\'A>88NM>^^%`#eou=qkTLiZn=b+X.!jf&YNiJ&gKQ/K:VE&,X1e3LmhMAG#NL2&Y2+1Xj%2-aM^W6Q#WF"eb)MM9E;RIY3-8?1$_nM+T&6(hVdlEr]R^?jN!r$57@ln"5:ap*mbV-;Ku;3IVBa/(_QYlHCB0KKoo4^RrR$8GJW%E)d>JQ:E;KL[PMU'#MTYlpq-8`e_XQTj*9>81]V/ihY*)RiF"G\k((/+Q8We"%0K8ghakc.qk@D$VQI@b>ej>r4ZVX[KlUs$1O$9%)HcMH]C5WoED9tIlf;J]9i*qEmO@2P@.s#OaT0!?I6n,<RK<f3`@S_YD[,^(/2'a"T5!bDhe./909=!]qWO$U#"iDRep?QNT]S,7%78io^nM"i:83JW>hhLW5\D-'Ma-Nbu8@P>>?tJ,T@Dm@U2H]AmmYM>j]ss7cI3:UBS6[NQL;??Je%=]'+mC$"8ULqR!kY\I]O:G&%SUGZDUZ0(g^UlQ/<%2F#b.<.9fAO[L/X?Ot1<[L$mH`Wm*B;$D*NE5)^qkTk?t_JJ_Z?QA1>pG>lY/m'qL&jHQ*9Xo_r?ni5m-_k%\bmb,k>ASK7s.H]3c5uX+')e@1tYgmoU6[[C/^u7LN[5iYQ587RbbMXRh)0Yi3=4@qY7Wk`?=kYH3qI5o-G$.#Sr%X00<7)PL@Y4%cn5?iTZ)_sd`tjUScmA>9KjGYHt*3<'R:b65(<d@H(M654(8D%Q2>6&EWcIXXNMYG"J%Iu'Buf9YmM5VYX4'3fr<99iZk3[`.Z`5%0`kL*m_#_)e!+k6IA*KC"`sZ;3>fF8r2lo)T9Y7YnnjS4Ohu[Kp3Asqjt$'p0OCm#Ak#s*7Dm[97=f?a(n-Ul4VOttBXNBGdpfFH%8Numkm-B9Fg4`U>G.0G7k$</oS*42$T5nDZIP4Y<25[l$Yq&[_X$M?a\]3emPg)B5b2@QM/p$o1ZtjZGUVT+3d4F'n>YP:I`^\=f%"D`(DOe@T9*6mJo8!P),(agRK%3D#c-J"E!Y<m4c:YLSLRfZ)I[/`]A^p1\$JiR"nXI^lB^#FA)]"DnEjkO+]ERtB\'BWai>B%fp%FQfm(%'68q['DUT)o'(0>C[_Ik,ND[#\?K;YJ$Y:%H*2`9GXX;aO^*<[<bf?\&fI[&fQ`E](Yg_r0XLk3A5X6lsWWK0SO:$`SQ2V%@Hn.+JT0,uk(geG\=:uVH_U`cH*?`6WT;@IJfIq=pb?,iq"9&7)T'0qX#`]q%=sS:-b&k#^drAA"W4LnmhSXVMIT'&OIL"tPE4Op%BV!\C1%fnVX<C_+YnTRufU%H7P@@?a)#`;iMP5>CfC)Qg*jQ@3qr+@0N@u0\b!HeZlQZit>bp=qp`Mgt:$GOGObVH6.0A^OdCcj=%4cc1;LXIG=098O*)Jpc%Ch.#?L<<g/#gu&o0J?b^%@+UY"BS(.[aBnnO>r):q'^OR]WP+HY-'`P$n3:M[9kVY9,%ElPRil\':2WK%[:IgnYR@=o4<8W!1+?q0fMRgQ21*)cS:E;X3!4c"]^DX6D$uU@Y20;ah4Ue3_kZI@86RdB5M9O`^cn*!U>T6\Ptf6%g;k\6^g#9s%@0BGo9T2eP#oWN<'!=\>kA#aBX(A!nR=b-g3)&,SlVC4mW;C[l8JR#-F?@6`PeQp9.PQoFS_[2Xo7^Wi>MIadIJn2gAI:6a94FZG%rg6g&r`2[.Ph9o2NIt[l!I.^4hsM-CYMV"\7k0fmGO(+Yl9tl)gn`Stidq3bU1;i_Dmkld8Z%^&KPl-+'\Z'RB['8UV4>d^qBaai%lm\(J7b9gY0B\?b[9[Iqh+=aR_S'#kh&!ie]'k(cIEs98Pq$('lPA`;a0o'E*P^C5EmrGbb5G4ZXRtku=5N#8cBP[&pP#1>WAD*Q%cEgBT?O(*4of86%MU[JQUUg2SM]VK7/%NrndALSt(]u=%]Gk^h5@&Uo]#68b?bLIr;g9YsNrbiQ+"_ar.`kcH$-u'S]+5jIem2s^%=h^hY!.WHE@\rXle$I<58%EQU?JiMf[b&e$\(^4`@#`i@%IZ.9K!K4,QIbE-2EGn^[OhFq0oGXtCJK`/-k1)#@>O!M6h/,Vb^J"n%8CFr0H7T]jr1#@h4a$as'IcP(<)DN'BU:7cT<2%8h:X)F4&jeejDj3*=a)Se2'FsFc>Vu!'"R;WR)^8GX]6=O]#OAkDCnXGiD.p2%r@7E"`[$0IgFlc^n`PSpH,X>5oKkb*!<K6=?#n9N%*H!Ll]RgjXK8tNOF4)4)&5QPVM88lR,&a#<V107$0?$D*YN[H1N`9CeZKDL%k,KR7"02B3/ss81q8q7-C(i[t0daf.#Q)#_kK8.*_6@:&df.7/O]o8+D'ZgF1U/GYL85Rr6P=^ELE;DAnh'"[!V;[@RB'+8jpK&t%gpCOn:i;eIW)H7e!Xoiajs-:DjfL4UL8ZbR^2hJY*lAB;n5R"^1VPu"j./Z4g-qJ#Km.=&<h>E/Aa-Y`J^(Xt:.(NBm#o+54W;Z8%FFAngfs>;Wl.k-gaq:%7S9#P^3ko"=]/12GTO`9=KL5rj1_cr@aMo@B/BN"1:7)'5.gs@Andu6:`Xaq9N_HWJJ2B:?=<ls!*%p.*%D:fMWpDf)=fR=]._%'5H1J-CIM?'Z$p#['N.Qf2*S$PauQR\SoD`%<8ntkb;dOeK*iqZsTLlFR$$;c+j!.tQW+t1@SRe?$M<pnp;%ZO(:.OU@C-\k;!X(<X'Zi+.X<Qs=9u^%YnoG7!aV%R82A!4$Am:4Qduk*:uK\LBW58<dsZ0]^;:3cSJs]pgXOP,]tuLNN!0B0RiJ%dX2IOCd7ip8tPn3p\f(!*RBBijP7#B-&k&_,:RafENiJB_C#^DS4CTM-*-ur3Ye$F:=pjS0aC@VYh=,9>mejm%-<VVFij9sW)>2.%nGfLK8CR(L*+4iOK^gah#qlj7A@,HSJ$X]3fM!klifULuqZi=3A>"P9anLNN(t0_ifRF;UjA"p%_<H2fO,R.PMLY2-nN@Q.,NJ(P%5Oe?eKF&_d3I+"In7:bdkfaU\Xt1Z`b-K=57Y;1AP\!?/SL622P#G&Mo/&;RW1,4^dWq_;L!&K`8u*]W(Rlh8c81G4I'g"O,+U+?%]&\a/T1ET:(/#R:?+ZIXOj9/:/\:')M0,>@c@,u9BW)gXE,*gcaP/%VAZX6'\&pf8O1a(N4[Y:!iME)LPhK8Y9]ED:&D3F%VAIB$%[O4I+Uq,Nc?0P;6V#(>R>+GK+Na%Q/mg]r_Ke")qJR"D[p>nNG^&Il6?1K.>n_%8AH^e0HfH.0#MJKrh(oa9T'6g2L/M49OF!sm\%T'oM0<iei4''6TfOdni8/KgP7Bo@6gl_&VMgN%$WFjO5.!<G,"9gYu)^2^-=DFq'T.9&dJ&V_t+bAS'_)c=EP&sMcGMX+CURXN&!%!\u1GE^iMV%iuN:fB$/[8dZ@OM?q/@+Z:5SMJ:t/$pjVkFcmp'$^_2)&UJ)e>Yd\@AgX+gX"Yt?6=mn.#J9L\:GTR%N4C$iD7(;%%4.O"JMJ0E$<@@B[h]"&TSoEcNC;&VQVEd=7FMgMY1uimQ1=Te:W]dL9?l(n3.q)gmH[T(;g#`mE#l,h9"<,e$+(iq@3r]W"EO'Dt%mmuf/AJ6PKcAPKSN;A_caJ&4/Ke2t8;K%k`q_hjmSUUiLLqR]]Ep*dmHsAI+`lOkFc_/a!5@b6ER9p=&:/*HQkY[d\`mF*01PTeF%QSESD`JgK\BmLXaS'.dFA.4IaY<5+j&5(!47`LOh(fjNR,DonUAa-G2IuM`<]CSr0XfML^5=#dX1I*/NY4QmcXHEoEMobX/W2-^e%*^ued)_*;"?+u,:(oD[>8$J<?]sqJ'^#=uj$--tfA<`SJ,4`rY_Bi=Aq/3n('Fq]ue3uKeoLl%HO6^]NiSLm%`MI\@GlR)Ml1P&A%>5J"L^U*f<5(7.9<`^6:/lRmB8TaCu$,+'#>;%]I026O<Vh/uA'$D(!H'BH'7-S\]M2fBl@q,+MMoIbt.'KeA=F][B-<;cm3V;]4%9<L@(baJd&YAJb)hs>@C\gXm40.hMuU_V2'p;9(2kLuV^]kr/@Ide7:gAB.\>W^gfk.\C'hJ).Rj.j;ic>\,J=J+DqoZDd_k0mug%OgWZP4o#R.m;4]Fb^r1e?@VXj%<F[A%Vr:^JBrGA#7&t(_si6/*fXc=d;db?Y:MXjp!3%U3>9hI.*kBQJ_(s&k2t'2f.BLfa:d*n%ja=Al)UtWsU\GC+cUQ;*\l\#$YB,6GrDN+X(EKH-=N1P_*e2X[+GZMMflo)p3mX#>3-Y3ZiE8p@@N/K#jPu`[]o8U*M1[KWa`MM_%HYR?]:)&7L@Q9[>c5(a:5nDf,o\LM?/O"G`-eFanoLO@MnB#gK?'60?H0fW#dVr7946kpn3a3SY*2cX[6*p;+404E+:.qa`jjrW*%o!GmA!)&(Vj`-I2C2%I#9RLl[C->$+D]+f5k-t5uIQGAGcE$R'dcbt(5'sbmbJ^0Q75*0^;<BApQ^g.Fg+Du^33j0G[lt'qfZCE&%^XXZ;$`.WG:G$@,'CD>sS)W;hheH*B4+3:jhTV!RA++N04u`;oku2S#f;>lu3]]'8CAoqeRJ.c.Tm,"#0d<nSltQS\G8.8s16JB;%STX,W<?O*-8Nk6OJgL%MGtK?5=2FpD]1L;ZZ^mBDHeR:$BAJ8)+5)s^6[[H*_9$'A!g77'=K>&Z,cBHmEn6f89%_@uY\2efA3L2e%g68.O2oX!2T<msEZ_,;h)rn"]NuT[:e*\O_Os$*H]JArp`\Br!N3hrb7kER$/cU8[cFS($IrR^?/p&NAT':+cc:ADgC*LpGnQHU`%$YDAc]'2KJr3D*1(i6eF\?SHE:&q02K(I92(+2j^ZY6T'kOJB:Y!SGp(N:c<5oq+2NBFqJZs/\U^/,$,a3p,s;BBiCO.TJpFihN$%FP.bUgAmc*n]gY"ApJbG4HIh.@A$Q00j(:t057-TQF=EJ&#PYZ['2P\?rmQn-1qbFQ^:)^/s<^r#kF,o2X.&pI2BSLC#gQl'SB.R%+A4,Q6=(9sR[ZWM&kXUC3%kSmKe/*(GiA[1\p6k/RqIWM,g2aZV#S/;(9\9UXnM5lJRf&=nV\ee%9.6&#U3`EaP_#POi%0fC[*GO%BGO9*S:'(@PW.b@b2dT7GYmPX(mtNPr0P=j#B.+He#9>fDd\A2U!cAb\u36B$B7M&:G=g4JVn4/W,p9`28sDnJVrYZ]d[K5:r+OE%WGCK=n\WcY-gH]R=F$I:(Fmt_6$hR`@2J)(.DI\*-I.'!:=Pam$C^0H4b>(qm7b3dhY9NhR[IDHBBk1CJTmW_Vltp^T;b=#39YCW%Sjt[D6/Z.<'D5hQBBfY0M9h$)p0GrAcIA=o(Cr<cCNncJR'-@^DSd\Y?\OQ'p<KqSR_n3e.%q4:n%g@gqPWf)DefK<d4pf1-<]-S%IH.i/aci2k/RD%3q+e&,p7?KL:tRR&d.)M?p369f;sjj-B;XGnVQuU"8t+IXS74D=BkV%V$5WNXP74WB:0"Nh@5e?F]GnAKd35o;%SA7^\TO=g3oH[I:cbs@mem]3LpcBPTH3eA%^T;'I:Jg*n=XFEu$a.]tM`Um\*'4RZinmjZKR;_7J>X#ndJ3Q%KcR(REYks,N2N-)%Jn+EmOl],s+$n4aVNECOc1(qWFp7[;E.6O%B3O/*-a?F<i94r[a-%V2)>d*#$b*bd$*FT&]k<rkCM:s`N$:P;Q%KLii#5h2Q?@su%pUECB1*f(XccZ^ZaPNEU0Khp,Req)NiR</p4%ajloh;Z`$0blEA0X"s@="eVl#WAd94d&ldrX?=4`Jm"Y_VJBo+H#4hPam#I$gL"%0uU>lm],6e%`r/>m-G@qP+!rIc46Y>h/(]`Lprt+b'Y5N%eh]D@\-e"Zt,nM?6UDeP+'<PBqNL;<tEBnSreDp$TNLZ>NC&;#PXc;%:o=RR_G<-np#PN,ESkmME,V^e3O^07Q[;EklhrSC9&r`?-VT!1eCLsID!?"J8KSIr5#%XZf%Bi'F[PPG>uQ8Dn.eOKTp**&AI2t`%I^tZWX+%&*>un_iUtsI*mdd#K::2U;Er$?<Ibl(.Am\H?&(/L4U0M-Qm>O(NPNu0,hBscAI.PR>2YNp9[b@Y"<c2?l=\F39LgK97%AaXI7Ood^ZcUOo1A_HN7^>s#&R.G(baY,)^UM+AkRBs?4-<iT6cD88"mH`/c8']iDZJX&SFNW"0ofTsr:Kp!Nr&gTF`6@&N?_UfO%s#`L8o$Xkl`?YAij4,RHG91,MjS[T@dFu]j_fL'>M4W!^cgBociE6<gTg=[QBm@?`=Dl<aS16%+,r8nhLhb/8S>kU,=7T567I`Og%rKc42U#8VZpY0DB+O&IZ7((Tinb/J)MUT\'$9leQ\Ph^`Y4k]<-&^@;e#D8m3YHp_2)pPYcjtM2[4;B=Qa__mN:Uj7&SgSnrQ4e6%iWBqn*.Cn(re<H;^`*GFs!V9aQ$8kC*1783n2XP_X!8taq!^<<m[.D/]rc$BQXV6#']djiVj@UkGaeKo&-^%#qBZ%8G^INa'iECd%d$fY5m;G\1=WK6V[(e>Zr^-IFa%Z>NA>BF+rJd6;2pMp#iKO7G/IV$S^G1rOggUsbm<_0aoV]Z6OJ_u9RIh<>@;KY-@kO)5=e)0E%PREcKBCV%:F%:mUqX[g7pIb<=\eHd]:Y#;te,F0T8b/ZA]G!8Mg>A8hJ)d(O(cLX)1],9Wm;L4E5L12Ai;Gc),lP\KpoE8/j/0&k%SLs&hp,?U3T/GbGK$"A)#"#-a9ln5Sp)"72oJ`TY$V:+%2e(Xc#\GYl<As6kZ%m(#)UT(\D0]T#(<?-]lk/C`\PjeRi+mYY8?)sN%D!$m]5J5(kd/&ut"oj,s?#aGu[u/YMF%4jgk0#dYTd*4?ZXqgK31\)]\9"u1*Ie"Gr'So>+g6^i]eCe0BE"T?b)uS84eBP'Li)R8%mQ#.F4l8t;6_4Eope"e-A?A&s.7272ge-8-VgVA.am7/sn'%e\R!k;X7ug6faE#Q&:u>)@A*,%3GcE<:.6n]Rm`ut3:<G=@`Oe1D%FK1!h/PTlJh"IX$@hlj,f*)Lu>F0a./,_Dl$I^:Zgceegq0mc1`@h$mq/e)JAsXKD"k5!i9r1UggtB+\M2=EX*EI&/aY"84Sr;%X%cFk7pd/-Z7=OPIGi*mlM9QI;aa@UZN<hXr)R-6mFrV>htlOR0d,USQ\#aAp;52ah>Ppjo&W@*apIn5gB'U1+?O@2BRTV5q.A>2$a%1cjL*%pLcVCqoZ!Ti5Ai.9HKY+k"hh#)ABFI;>8a]5pCgr>>U/JUcnGcF(h3@YaC00[q^mm_0&/mISK]Bm,6\oZF9_9=(,).:t!G%DW2m?%^A)Sk!/$>q1jN(9<j$B1.r8>GR'UMg:6_SZb<:4,tD2bgfsI_;[j:[ef:`iS0[9Dr/BH\+jHb@*f5n@0sjtLQ(D,XguH>p%knVG<-H7d1m26UC*$_OtZJ]2.-/j.scJ6CH9OT#3>gGB"kIR6td3Qu(-d/f0]#@sjh5Qr$#?<eXL)O:6;cEYmR$kKdVcU0rFXSmL%LXNb/j,!#B*87^02OXr#2.e3-BPml)^J/g5S=Y.2\%k,RI^#cV,CcbII"0>^aA1.CdJh\WgCW:R2QtZi:hL31HH+*\[]^q9jLWH/%:-u?^^))?(O14@J'%-);AY$i_8`ico.r-bJGWhT,$.KrqWLP6s';(ucBhqEW[BJ0bPiF#Uc]dqf8G3f+aGVm2E-uLBB6t6qBk[D:%q:%4rL'0I\FUDXb^%&M,$$VoZp%\!TkEe0fi%V)bs6[/0Ce+QqX^N<;r?NV6/jOq!*nPMo33Hsh55+Y4Pa[5/nPjV'ZDfgh[$1&-%hAmVrG'7n5+&6GV3.I3(G9C/:'_j$)ij>E!3`d$\$"lGIE(d.MgW(B+e2/9Y[(g1."*K7;E-$;QjOCQ]j]'Te3eV$gl[NZ<AOdd0%A3W^rN&.Vk/FUa;VhDkX%Wr+k[R4%4Z9="7Z@Y$%af(@J^M2qRT>5UtZ7Bi"o7MHe9gdTh\t#<NH4Y9LkgVF6\qB3Cc'4,qGXnDD%`f^J)+d/JSM<G)AIL_4iP5PpA%!/6,S[i4i^%3N6Ftn1Dn\?kG#;W<<@%Rc]*Mt+rmJ9AhM(>R4\U`_P7tf4^brF8">KAdWK5oIm%?`+/a_HT!%=5VA&ASOUq*+aN/XNH7EL_#8N(U$n$G<`5)Y$hM;hV/Q)FRZQZqM!a\ANOu#Bt7l!H""^o%tU/rTVk$iXNk^1"OS"V%+<N8cmJE(\lJSgOA/ERtlfmI(`HUTTK<)88X,1,*m8dOHob1sS]4YTfM]4oaLO4`7`8\"E;nbi)=jeR8IcY4>]RBHl[iA$fP5TbT%Z*[*Q'<>U64MbhlO4Ugnc19T^B5)SWlL8qQWgsQ#Wa;do;Y>g#4fYbN]V(;Uja6:Vr_&_A?BnGgF)*3t2'7%beCF:oLUpgW^J`ZR%oK.1Y3*60\]\."!WJAs36g?s/h,9=2)h%!coccsjIJUAr8LGHMP$E=S8[>k90+Bk*H[1':IR[s;%b7m/='rnPmG(V!po9ipo#of$%Il;fTj`5^A0;[um9]kjjQ<\`NDAM@e&)%t<Qh@\]mIO,$DTt_h>h\5Qei*(hMr.t<fBVR]]T%ToI7U+iaU9*9m35mS@iB6/L&(IO%/@h65C^I`*am=<L=PPQ,Ht-6TO1L2B&i2284CTVQ/h6aU3>#J&NZO+TpA#iqS;?,;SQmc6*ZZN?EZGpqJ(dV/$X7t_jPo^oqaL*9%GOt\1Qrb%LM-WY'Yfi#2o(d`aIqAC9J"I=fnsc"Ge8m!-`oL\j06@htmENfPJY$D?(p4B)-VnM+GrM$gcP\:a0/&O=!oJR@B;43\%2K6_i5jYh78TGRrZ%*$8l\H^0b,p(UqN@`-2nolkK=0/Q-<6_Qe#esTV=_kfG=4Aj)&ZE$n($7L6?[MGH==l["%TXB1!3s7jjQdJ%Z&rA(7ONXc'+<>W3jHE)]8Q(t,hC9(@.k7LmF2Gg[$0,jZ(8i0na0XlomL/@dbK18,K%.d5&_?N%I"Q7oP0*:WcYd.NMu_oGO$Y#%i?>/OR,\5PLgGRVfnOFsmoUl+5,Ga!'Rh"r8l).Zj]!/u6nX+'mFuh+\RbG8n6)R.G"8^/]f#3?k4/`Q\Y8sab%MMP?Yq:#p=jp+%[?B@D8j2]8/fig(4A^C,rS.2/b5EKs:A(7ONZP@+<S*GPqXWMB5.t8o[YtIWed#8ua*<\$+!<`Bjg3YbQ/4^1Zj6/<:t>iJZ+5H%%bZ:[fo(&Z,Dg0GSr/Ik-g\dj3W,J%6n6R7DQGud*<A;m];[Ul%];CTo\oG]^\lSoBPbM1^?l(;u%NkL1r7p2Vl".B)ET4="'J9Fr%grf-XK#5-4[qPR#TGt@T[Hu1M?_&]ZAKeI5B95aCmB<:_CY%1R4&+[7fQ)NpD"6C`Sh%"TqIs(\bSP)Xp-qNO>+&:o2l4LL7@Kl=%\,'Q?2-s-lNOc+9S!DFPimq&i21IS6?'b=G8<ssXo)7i4N%3%DqmNP$r$AsU]>!)goC@QI2jVrYD]Pr!;oSiTUj@"K,)(bb*Mj%D%W8G+qlOEb$#/.RIIOfnVpQ/dr@igAsp@1(Y@TtKg<+H*s@jj#1m4*g5FeW=$$?uSp"6qKjX5CF@b%Ih8D]E9ZV?IE6mH>'e1-/Ea%aVqCjfU])>T#tL";=;Us29gPQgjJ?>?.D0i1>a[R9''QBgN1V*UOFcJ4F#)t-S$f!pM&,EKPdPc$k%HdI6C\2^KLE8]Wh/P;ncJ:%3I6nddb>G8cUmqQpX@E)VK@&UbsRVK/Ei,W.a)39]?*Kop(]Ru<lQbDoa,`(c\&#nj["c_ATn7S<*N][lcgY3<p/*RdO[#IkuW2m%E];0X!pum];N/JY&kdB4NTgl8]mR!*4S%l<k%T6T&K(,4DE4,1oq=Q;-SsYS;j_@9>&S9l.jn\i2?#\m`()QN!DhR_9WW>imDMKo%r2[u(Mbm2h_4i2`Vm=GU52W@/)p#7`l*nHS[3FBfig+drigjYH@;M6l2>*p3aKUGD4A`KD&_C=;\1Thde\ZIt7#]E!B^@&e0Pqr7%Frb3-@FS"qDj?RP?LFtK84@%4/o9&JgnQo]J5-SSJi,a=K.AMVIlkDSnktI.D1>luguIPj#B6ku8ST.5Y.(\jf<6Ejr%656m$_,4%c<p$?T&*'[#>[gqHAiCn%l@L`ePU-f/L*RUEXM9,XCM&m2dS7Q`(j4qcb5$<Y[4@8T0s$mA'E[.esDP+\&"9#f(sPI^1,XHJZMR/%)9p@%Ti<!,qfpE:NBlX*2u5C[HF%t,FEtmWDpN"'55]^2b1)dVo^QLi::F0O1%b0dC%q7sG-6Qj55*WT\pJY4b<36!H%>A\/mBs2%>\MM?TC4P8St*Wc^4"*(0,:QC.o6E*hVC1rgE*4V6"Spa!5$kNgakf#WGEhY$bJ`KGarY(?n$9'^@o+e?`fp)MqL+I3d<`g1Y)BY%'rH<HE1rF%$D[kdI(P+/GQ[Qc@$(@a!RTI$4Fhqj?V=KIeN)$O`TrOE9S$arpK)/&qWgVBH",+oR?`b<"'_/,lKJYfpaISsNFb#Y%/"@F$Od.&qansW%h9F"9UXJH^I0#V9@8-*#T64Z<q\RTjmVC%hNXU4SZVk=tSY\A$Uk_['doo\Bn!^9:fAQtk@@0BmgUO@@:H+,I%](,0r"<H/Wp52dH^&(>@4HP-]h4,S9m>IeZI+0),CMA8AIF8+Z"%IX(IbgO/gqE!eY;20UbDKmSXj#8<o#q'2mQK1]BTfa],N'P,%!efn-8ll4*]($%NN0"#W":YWiP;"dShiINa^UPLEX0S/u2*uV$GFrZX&<t;ZN!t&'jMc_<?iF.RO0=%HG.i&[Yt.62rGca85=_/E%jD^tr9B0)648*qKH?1c'NWbX`o3u3)/G'C>Fq,WfeM\.05"X/UWfX&gn*CiXT&I[@)6Z!bV7md_d,%_'a/6V>/sW0^9^TA2\B,ht%G4-#hBYLJ_)Age0hrP9WF&t`f*4(P^<a!OmK*=8smAR8dS2L6AVKunQ,F\T**\gY&*[0[Sk=)(YS>AIPS6ZG)JZW(`SKU9H\uZ23%eFu1qb&Y.<qY$*=^Tk&I/;[Mq(*^_GZQB#IXjL(SIY!40K0Q#3:A0kN5]8(l(%9BrI*g^$EB.8b1k)(Q520]S"6D`U%SV=6%ifXG%.gPGKW9!=`2_F:ZUG]OpGjUE`f2#@mHh7C"fdZYY)(]B9]B?1PC]1F%WL])4:Y&H+khZ#%S>58*XuAcj=o?>giCc-:o%SIS$+n/%%h!7(EQN$AP:fkQ2*^jAGrtnO`Xqd.NnXKdU+]I,WQ'P!TSV"u2ZV*Ld6S2#F.LlVf][f0:]HiP3JtIYb>L31j4iJ--kaRY3"Wq]e%RsYjkHsfb2@)ecV>fnF&iH+\2pFST5e]NMlJ9^W-5Ccf7md$frJ<_1&";r=LSamtOib]aQq+U[Ah\uZ1@f-=chG@!n`,rEXUb1-I%GOH,JUUB9dL)A$MLK\rVc'W(G?h6,0j5IH$imE#Wj-FY[/&1q>rNXo4&aJDe8Ab]1R#]m[TrYA,q,HTa'`<cV(\8#5_g*o8To[gj%B5l])eB^F)h;!3ObZOeK:Tr&k%68idn("ahbann*4<EO=n.WggL<%$XUZ_1"X-8+tnlTuopn6i!n,[)A>94j]-(BXM\G$kJP."<B%_IJYP`4,9jDfUN;0$#qtdCNcTcbs='+A_-.a]E/\7j%8tg3tM5>Y]SQq+e][nW/aia65/nS+Xs7O+>.ASBh`SQ+7/9ln^h8+^Pp)%N.G(1Ti"L$aBsnbHD2bW#;#)nlIK),J:fM'6\S#/XdL<@Dn+7NfY)ca'L0OBQqB2^PKNKmV.`oLX&%/2j<_3IU1QOd]3F&R?ug6B%r,pt8]d1XelW]A<fA2KdJUoi6>9+0&Xm"BqYOUgYq!2I=4PZ3BE+*W.r;6?]AGGKY7Qp[W\_RO@4o[;!13Z1rYb`jW9tZi2%^TbA%h:4G?3P;gaF14BK4T5'b=d_1j@Hp:/q\)JhSMLtu7@\#3&$+<2cE'\KSmSZY(?3L3>h1_.Pofd9ZX17(I,3?)=AUC2F'5^'*R8-%%bnnWRR(E4r/\PJLX<j;O]$X/<K6$JAoIG3_Q`d(CpX,LEI[h@WX\N^+W4l&CfC4nuG;hq]F0.Z1&p(7h%ln\Le[Ed:T:kNuDmI./%cOhTJKj2*0;7O)*6T1%oUVDG)%!Gh:a+m2h2E-AfjNQ\EE1tA?O4SYZe^+]tIYIlu4==&echE&16ZV]q]r,l(o4'4Q)I"L0\[HN9%3n$'VI/,6QS,'T3SZRe+`ld;tE4#96<?n.3T>MX87$tP3"<8EmbTX%#5L8,U0B^sGM>>sndB('NV\ttOGACHr_sH3j8LS-Vnd,/)%rH7bHQf#i!DU&b&qmg2gX_I7dpsn6FMr]+qH)\&VQA;6=4+$ktj/nnmg+V2.b9I22d.EA-jFOD!Zq50O<H!%Y6`>Xmk`HB1M6Qqn%QkVO4NhW9NNATh]KYKc0AnMoZn*'CAOKF8LDCVJnh864?@YRtbfSF8`oEZ$@jlE$CA5+)i'U-qp2gVtq\O5/WnInRm_1hjmHdbM:%^3\&GZ&jHb);MP\A.q*)H)/FSM=Tu_4=;5&%*R/?q\<`&Q9Smf4*Q4u23@g*X/j5Kbo!u[;=/ISX5U]1jBic%['FtXZ!Z"t>9B$2%%EOrqV0<Ck=8k%%HH-7aB7:BYrU_7qbo]AT`<GMfEpR6TjUNGto'9Dd,j%mQ#BE(("pU%KHfHt#Ec0O+0Gl`ih.JsNs20.TA([EH%T:0PcW@.t0Cr5o!qr*CfQPje`EC;Uo(Xpqt9C\3DP?Yq7piVfsT4RedS6;K8d@6W[RVH+%N5FtE:u>IE*Ca3B?ECl,K?92uX8NtH%q!=6QfYMjmhK%IK5Fn>qpHF?)9[l)c`a's2@.$GcUO>f$Ee'KoN60bX-A$Ss;Dj3g"kEX\3Ni5!->.%\2AY7;IV)lrGKV.&qSJp0%\n?ke>h5,ZppS_GjZ\)E^\32WbhHj1C-tJKQe.UbAI!$/eQ4=_C)Y"ECJNn"qeUj[WE=6I<]/bk"*s1r'2<W:<NlZbP7/V%3)'Lc%S"suR"8RE!a9-(hC*7>j?2@J:`<]t.-TqQe[8/pf*sZr7i9AnqIVSQbc>J*sGqn-"&W$")&bqM[h%^=ra6TIfSm43LBAS->Xo,^.%+V&+"Q]73@QT_)=k'F@r,jJD.m)P$B(4kbYcgW7CjqXp"P5IMC2sBqSg6E>>gLi.h:(D!.V^@/6)hRe_iJ`K-E.Zmi$WsLpblJ2>%aL=JBF4F0l;5>'^0BS<7-g0akLA6//UAD(F(J-3<c.#I2g07c%=h^"SS&`58oBO._FS%oWEMW3'kOY_lQ<ddE+]uO[`7Ll0H>khg%pWf+@@ENNcXJYi_2m]<$HSjobCas@DlUB>NQtJW(_+!Nli8C)H4\Ou$)XGioagtSXm+J0nN\?L53IX65`oan$aaq?8Z5&,Bf.XlL%*m2*QjjVU+272-Uq(X^'5Mk0E8"^)>*.P8[)Hj(09/AqLmI[6(%@b*:3Hfh`P"X9sf)5#2o<!,XFF045eIX=S_.rFD.5M%M4obL2%eD/"aqC;9IXRVj&c<UYKgg@*`H2;Q^/Cr[tlUSW%S=ODWh9"s]j>_XgXfa7uEun,`0ZR_kZiS[pCAIPgbh*4!<c*7rnL)u?a</-d%V5:l*cS2qhgNCoIUZ8j0b$h;'87,^tWWnkp5!<pk+W5R8^^@Cb#d"IFjn$IJS&3&&Lni-.DP-=n%%uJn'4tsoi^L`\LugM!ORu46%jX1(8!4SY.bc5Ml5>uRG_B\Xo"EQPWp/rYD4/Q`!?RFjja#LmjD0%'q@cA-0^c]/^lU%bkg$KgX_3k5+`ZF$ja\URh(1)q"#2Fr/%2iuKMWpq7%-ar;C5\____e8WK)Ju?B:/<Ik:.LThEb9MMV;&^Y6GG)+bT;W$h;QJ,]*&2#Ak[[Pn1I`>6W7peT(,rWQCq$W9[S6k%/u&LbnSdOD%-`oso/9T?(5FNc_jEH9p1M\l1N?jJ\=+"f,'HX4#4`K"@!TbV4n!-(J_mjmS^\33)@UG_2F>+P6W]DPDbW??Cu3!_%)A?2IUAsD-*e"Ap<SYUi8i<]Z2sTk,^>7LX1.'iuSE\k%CRbkE/iD^c^29sc559`2rZ+_pKd]jrjlF';;n(6:4C`_A;phUgEi`mr%JL7K.;rAJ]CuY5@KttS$[8?>WX'?YbrtHjZdBsthZ99@l`n,,J.he77iQ\IU<fX5U%9[!$O,djSqs*(B=#X=$H77:JLCX2-gmQnb%2;TEI(@!n$B)?Ct4t`6G=)#/G-nSXU2?2q0WhF-2H[.D*]_2+^#Fo&P9Z=%S>Q)?1]E93lZY/K-j$h;0`lfZdL`#REf8KNVXc<(f%=uk5[&._0`bT*a'XV+"XeOb2XC"<!i0H]@VBh0F,9(of3`n'\QP5$-An=3T[qC3i5*oC<1;bh%e\0h?Wi\bcB_&@Tc!4J,R*tA_>%[21p+r)jf#,`s)*bm/e]&?^I2Y?PO[TuE,F[A2A<X5&3aqt-Ic%L8]o41IK`/N&Vi+YRPCBT>d@$V@*27lTAb1NH'!ebWrN:qdka%o07]JGbmUp8i9Y9esob;\2/)irb.GWCr-*KU(<lUNf0#_Z73p/r@rS(%!*O\D8M)oEdN6`*%h$go:Im!_buJX+#0bmbQ)aq9Rg`q%c9s;>l:5KFUT2),[mA=]c%r4Qc')B$JMHYH0-sad5:5IL@[rP/'MT1W0$h\V]>K9<<enTKLu-?';lg(7k'Ip*bXRn]]W]P@]i&]4%CD\c]0UI[Z@^bX]oY`%aNE&&UrLU-OEeF&e4J*fqg>UhGYBc@94)t4l*,bqsE2e1>cKUt+Q-VSqP@lh.I*Fa]4_24^%c<j9P'>GK%rG662Ujd2VIY_Ua4'<Y2,nk[da8V&X=an%g?i.CI=WEafUn"n=fGZ]Z+o^W@$$.ltX>&O]nV/38_u>hL5op+ig^)\:Bh^6ma<4U-%g';Y9-\o;p_46db<3!g/Q+D7+IZn,/qJJ^-YBR^hEN3'62^?kXL9,<32HI6>,jT-o@XjMcG>Th?84kjmc%/3i+[D=1@S&X%*U#44%5J8^2YfjZT$HrA9g#ZHnj=KmMg#]RC8'/9qfq,liQd\8(J.*8W5,s.!j^Mp"j"?q5>6t3)Q:1DgUV).L$7*jL:(T`BRDlK`a0>Ai%V@KHSUKA_$&SG&>^(#NeW8#rn)gOXMR6<T9>FhB2d?F2HOLHo1b%Np^\N.$%%[0j_)V-8J^eisA=6.SRU`ljfgM^^PmprL1r9OF.%f3(56LuuL1"pSi59bGY/f_@,Z3Q46nEBnDoSF'H$/(@I7P#'9)Y7J[`"#RkRMAH*P?$&3XZg+Oob;T-5Zo%Wa!RT;!)u5Co8UW(7%oDMRpb$Sq:&&';BpTSk5XN[lCYe\k!?!PomOc%FTGoYC,r/ZtBP9YZ;,["T/)cJlQG9LnW3TfT.,HTb^Qs^6L)V?:U=:K*5=L9F.%jfb2oT)N/7Ua=C>O%!4nNO/P%q3PPHf[.P*=b9#+G.r3`Z>uA:ra#W$-C-a&5\V;iAsb&5jrUCggWAqDm%,QC`0"A=*72/K37VG(%M>8]''iLBISZ_hDk%_FjMaD[gX-8G]3S]3K/HG2jnC&S=0elsE1d6\Fl\WUYI7mG:C4I*!`)"VBTL5,"^W:iSe_sn\o3\NBr"#(^%%mNN.cuR<U2.HRoc6_52B%:)NaSb/G?6?Tl*W-IVnb#MW:4'*/9=1_4U_ur1Y-K+2,<9fS(R9Jm%rL``'O?.$,[bN"[^(15I,6pm%Rmdr>YF6lmr:56ADg!BFr8PWn%nZcib`j<OlV.$+F.V%HGu9U1/bp^_`0O_H,bGSPXK!>sh<]+b+$1PPV#AmHNsF_4b^]DCTT2Fc%/<!YU>s;@=0cYCq4,1a1m\fY.l$g5@pr,]dAdA))ge[L1_#oXE^trrL]4ACnq?d83a@-g)hVEp5p=I.JSD/3u0HQC/ht'(rTHp3*%QEMBVVK6ah0m-h$2UkiE*\XjgB</4QlD6`FVklE8Pj5kbbgG+9C]#'M?Z'T@E4u6ageTa'VhNCq=h-'??Sks,o60udkII#P(X9t>%]2,VB%k;]Sj;<N;m`T3[J&HdhEgGkj]Ap<SC7Sg%"<04gUj;e$$2,H$,kUb0nCR_V%I<KFEGhZY8SgEAP5Z@!;%d-'g/Thd%fCG8%Aa1!on.+*B>r%&h?[Jl%11k#Ka'5;\+#rf^pe1RLj8&TpX4^gM_!k\L$jC$^$gVa\PWDPA0%h-n7^P.rqnua)ftON5<]]ncBBK]:%D\[&!Roms84q;Ym;\ADi.Bd)ubnJ.3?).M?:?GquOsM#Z'<W0;;*;H%CDFlmNW1rbQ)IZ(-V5YrCE%K\8(V[_:VWH,G)paYm]&,[%L"Nt!]UHGr3dQ#B5IWFMc+An/bM2I4mTO+AH>tYs1Io]j_kZW3>76W/?qf_n3>4hE'Q@KHS=2I`k0FfLDN+&1*(N((%_KKa4^\4l%s%nn8r<kd][AE[T<'e6EF$cc#onV75s4F%c4B/Z[[GulIZ%'+RZ6]rD3b@H[H#qU3G5Cgih0a(5&WJ^biq:9iYKMhWAp3>q2]<n=%YXt?B)K[@;QbRciN401MGE%el6]tsMgND='X^.m9mGf-C]JK0d#E<%HjEgi@o]BtjhH8Y4)V?AHl&gCB2lOgU5M2C;rd=3Yp;?Ol%a*R,rC7.Q'1e4=#lVh.le#f%)LR$"ep2U\ZJD)c6Rokq?LsG0\GP/?cpW/99qV&R-M^Tg`'&rl7A`IlENkSn4Ke2#AnX96"DuVkT%n@EWHMpfhXN4Q'n2"%'hV7HQT(u)7nLU.Y_b+"sAai%14$=,=\[+tVbqWRg]OkOFDG!InM_n?Mi0RVJip!*<Klq\OU=_K@R;'7Aa%513EQc"*e;3C:J=.ooPfL_3-LOib1An*2,.4d0oj*\FD3l2(=Q"U-U:LL/7G>u0;$%^.F5?kL_Y;=^9dm`=<$rO'o(_BL_UpOu)"%o\[coC92u"r'9:Rj79%L2Du'.f553.P^9r,2:Fk;Ln&8Q%.Cq,gb\`u3-CK_qke+6K_sR8Va@T">s26\k$[TYB(n]1jk[_*lJ'!d%O9;n=*Z`Ri^EFsW0;C=Kn["?O^%hA\C93!/rX2+1-dLT,T@^#m?0eK>qS*a;=Euc)Z*/!05[SC%k+\g2%&E-:n&6ZT:g]4N(`-K%%6_bB7r-HWHoZBM'KGFc.>a*BVY)=<@Q*92dLi_DIfBFcdJV@iV249.`%>FINAFKiCYsDg``9:$*jp$O='D7L'b^D@Z4McMTS(VKY%qkqba?g@W^5?/=h\u&^Hqc?C!X`b23@fK%lCfasK-*5EFM1t]UaV1:J&kb>f/rKTX-*c6j+tSWM.j_I:\(IG-iP/5&bLNS#;=%X=%M9YW.^*r]YPf,oZZOgHQ5-:GQROp:*(,kH(Ir(f%f<0IRp_o\^jN-_Jl;poBjDl;:4hW,,A9,4/p90_!3c%Je'`1s(@_p0_U=d4Y%&o6g7K;.#5;A*ai$pdbW?R^g@:gU3)iVq#YQ%[B1<s)u6cRt*/ap%V(l+p.NYWj\i<aUlIf15St2on28l!Xtf6.?l6\Ps:?=%Zpn%Mk-B-I^sZEr1^X*HoQoHnXKC$lJN!e/VdhH;`-HOX)e39l8L@$_ii[6rGgBF;cs6(6d]rBc]Q.`0"!3d/b`/O!\'B?6-dX+Z/%,p%47qqM!pFEI<n3rkZ+G&=j5dND]"0q$5@:AGTjQ!6*;FO[>hm`op_aN$)cZe-nm-@7RiZ<+s8=2<I*5IXDVcS?WT;pQc)bT-*/cm-%M4M-q)6KGNCt4)@R/&q#q4<Y-#POL5<>)pnZR&(Q=*kn.U?Y\UBCddqa`8_C)rEjPOFs4l@eiC;SJ[donj@g%q/+<!DL<jXg1a-[%lCV@NUR@ZV+k;^6[O[1dSS8hgFcZJ@CWOZA[Dkf\=c*IA2TG&uT9%:`UW[jS[?WE&k=+u`J$1uISGhFE(M;[E=*$W,bs<\Uk]fnJ%bJD/6%<2gESc:2eXoN;p6^qM#%B)Qu4.ZC2LZm4Dj%N]bqtY4FlS?)V>$J*ubDhdR?Ph8JpFiSpgYIq2p%+&geOZ!JL&=BM<A6/]%^5\<qnno&1C6b6fI97-,NJ5mflaj]3QoHEF3h.IbJ%6c<p;@5C0<IFfeuiE?roe1fkE6g23H-2Z00a=d'A)EB2^>(^lfReOdP%p&%l-!IEjm`./1%N%kU8(se-VS?rCF@.).3c8?[4o>#]6t3m1.\&aa(a;r'S=cm>\`/Oo3,;V%9!Wb#aia_G[I+k4ab#aH#b]c`8[\W%CA@lX'3ffNZ[!Sa(>#N$;$H:A]aTh(GNG<EcU!J$a55**<m?%oHGDlIK$Q"C3I-m:\"ndL<[BKI"=`i&"_8f)W]@2Idn%N=D#T(l%\[M3mc,Gpk"^fgQ48$!$<jj<oT-()>hKcKRR\>kiW$nC$*-tYVoh[@LW-pet;o$p7D@-TGG7VI`.B$9NlE'[)kLE_Q^j9Z$nd;eF%l9XetI)/IdcIsjA#?+G.lE$UYD!n3ONur[CSM`?;InIi^r<M]AEd,h%GJoL8+7\T.VdlA;C]B4(lXt[d_+h22m#4+'1JTu6NQ68)%Ve>]5hu\Y]"8n+#4;2L#2o#9LU#+].PLDb"9%Lu"g/UrGcffI#f</KU#OG\0%tI,UfkH1BmX31QG:-MfB^YIYq8AH(MeDY6k2eCE%m-(m&^r&;.kTeB"T$:d60;$?r4')s_=N?I^\Ge@<m'b,*$]gk65&W=0cL0CLJA.l?8*oSbY[-!I+NO<E*-<b/*Z2fB"&hd$kj%JI%20M`D^#L1P"16_+feZ]>kOS'2WO2N`dEf=Og>9>(L:\7Lk/]@P`pV$:^D_a;q%RT)SlbAV2T&$)*'@.)*$"q$2=b7PG\dd9%l75/%(ij?D3f:85kAeGVA^EglPa7AGU=(98[b]q=ksoi7f+\/;I/0N/C]@%g^-dn`(1dLh[Sb&GQLp.&*Ms*"0)&>Bd.,?>rJmeV3C3m@%'8K.8pBt`<T<mDGC7odXVgj*eCH;=F(6XPY96Tf+Iu]A>r_lcqXo+E9lShb%Q29&odZV;Oc#agD\0g)k<n:W\W;?A+5W_g-K90%K%l2:^We?`uT_3hFl8o[)N&q-dP:We[\CpiH#E@U-h`Q=V2GI<FZnc%`c?C]QtPJ^,U3cF<Gh4+0#_W`g$FkE6up7%`)J[!+/d?XBR%`Gnu:YA0*BO0s4TC2maps("Z`pUWRODf/(hf_'gnpisc_*'B`s6'6`Vh!<T:\Y8I]U>rpZ;TcRe$Qj']&0YH-2<+Z]p;stIU/=;a%0J+O:C6'qj]&W)9]PD\+p$q(Ma,'EUmgY%'n5osR"&SBbNutPgk%]^-X,dF:441X4L+Q`T;5btC5.6!mpr3>)$UAK65j#`2Fp2E8%A@K(K4M?TfO17'O+N]uK@Is2ZA$9Vp=*cuaD/D6Sq;+5O<6!W&FKIPs4T09"FgS>!LZVH;JFc/n)k^17C9JpmB!3:DX$0E50_C)h%g\2U_^<q__Wf`YbgNDGNANR9aa78A<V0<(t4<;+<';P-!>$1gLMQo9gLCSl*hiBBPp.5dL;oB"2!1_8U+$kdaURHgUllq*a6smE'%/72^XW@'N^W!nNFl'%HnNJkfNl<dhh'.8e9C2N"cedp8jorkOLfAj\R28&ndAUT!dm,O^U)Srgkj$TbPXNRfJn(.'<&0iJM0Riu]%V@b[Gqf8o:mTiN2dC1*%DYM^_IU'OJHhEsJ3BO$S`J@WtUYoO^Z)T<mnu6HW1r<82'd3F$9dA6d0k2:CL@3cK(L=ibG]!gbq`@eg%?%#-^g#&hSZa_u!8+u\WaF[#gl&MA1]dbd`bKtlAAG<]grf&B_5&\NmOo;sC10Y48H!Tq.<KSHMn*A'o?54>ZVRnmp5>jp.LO/;)%J;1Bs0;+5]Y9Wpk<Ffnp\N7#\=[b52nU8BM#b':`gA@.ir7Wsto>d_^G7?J]lbIc468iZO76hoAGd&&R]@9a=FBh5]fi\/NXOQ+@%jR,'e2iX$tger7,[6N>(ft"bmFV?o)bf621KBSsC"F.#E)+:f<OHocUl2_pPd^^\`\fWGYVYtP4^Q$=.Se(:)/'%LlIQ"TS/"2a@%MoOo&nU=V(qF3O*e'<)GFaPr0f3."PFsHK_KXI"rmQ0$h7A>#!=Y)V%2\C&soG%$[]3dG.<:gXq/ALhU4U4KGXM6CGQf`InpLsQt%m_O)PM:t.?$--m)(m;SMGP"[P(HdiR%"?hjm-29q3CO%3jdtGeJI,3W4m+-\@N"+1G;goTqg)=_oZn)Sd?51C7ErI9.pL3CMKVRn%j_$.SSP!`B*c)22=p=`'[Li2%6?o.(GAM/N)Z4JWL^0A8N:isCDeEj:\V"#B;ao"*`&"iMDVc-1VSf2Hq&+IYIcj(`\8q=L93[3q%2Ec79AR+-Ag-WH=1Y&(BdB(*GSVhpl0D%j2TR!^,+QiS3aMmG6efhr<(CToXb]NnH\4^)YT:cM;aD9[OkTHShcW;he.F&gd5#K&g%:g_?cLK+<1c"ji&_R16G]b$pk=%W0=Eq&*k+pY/3b.b'=e'QMQLu&b&"H&L[Ve[7CBYU"D2?`SgK:tB@0@9-Y1oc$V>9JW_bc8\*%Q])M7BX"jO=_`DS%/Z`i.IY#6h/0s-mQ@.LJeb6SOh]hZq2IhM@PU_o2"@V)',)=_l,)c];`\r?TY(&,mk3-#dZM/pk3/&ts7V]V%F5(1"FF("%FjeaZ^h%MKNinKpZ#KuLc!@\%0&B!7G<aKXCa9rElEBiP,Mr2ZWVXB40'8Sr<])(VT<:ZKk3DeS[.`MF;JkH9m&`77%IX<Z-o^WX/j^%GWEB1D80#Yu[Kt;Omp[/i4`)c"WdH'S7FbSec5sZ0$$FK7>T0W(2<?`1dpP78>K1^ghbF_]XpBo/mM`P&KQ'B!I%3,#>:$N3_X3gQ':ZVM)F@36$9$PH`51UY\a+)C(;8c*FjX'I5+Gfp1`lCQCtD?OFl\!Z.G;MukX@?\:'n^l1YhTung+dXlD#A^Ia%&Y$Cnq\,L(09n@UO7-.=bl`_1'$&ChYk[]h--ZP[K/P&4GY'8M1N<#R>$E5V6>?-?&s-kEZ%$j3;OgY$*rmR`Xb-&Q_hXN5Ml#Y[%%67@:[:8gC+>72;$@^)Z^gSZd>I?bCG^>2F!,1]PneA+t^?"_$UQ(-H<lhWeS]3p(DH):3a]fMYL3l4%n5)K_TlA"fNEtD*ko#3#%D&URQNqfOS\IGTY.[EBqKQGUS&65+9YN0_oS:7hXWGub]M3%HBdK^9AH53&0P/YO/nriimJ)&/6p$[#\\%B1O2t*1u[?WCHkL#dR%D_pCK2YnBWK9kSLYI)!85!Z$S+#><dce:6&JjpgK[%g'=T&!:,.-=<,f0j]Na"8CZ8=u%:e5ko*>!m[dF%I.hnuHG@pu;@bVADU\%V%7C9mspcA+3=RkN8h"Sf(8t\io?c$]NY;eE@.$#.n?&ZH3Pj+2gRr"0?]sdiT]<mb,8Ck1R(m(r[Q2M5uq$-iGD!VdHgo`YkM[W%P3(6Ef.PM$0$[FDInQ<2AVC2\.rTPr^=]WX?$Pi9.EsLC(3VUEb9^;UnA,XVjF_<f,\e5epPN^E.J`UJ(G.qPi^>T[liN_L8U;tn%q_;PSnsRVg1W'as"N;uBqGD8^8pMNu[`0eQFTRjfr6u_'WZVcHAX;Z"M]BV4Y,s99"SY4;BQ]')p2d7=3iU:ik)L7aY^R8Z%EPH(%'D;\u#N9,,=WZmgSG-f:9'RCYK2_%4''G6bo(1,..GC>edqQa+2t3-b8;/=:kUjQ1*E-%/E'(:6Z.=sr$d0>bUbZOR2iijD_HC88%a$gX5=S7DbVYt(Z&F"8&pEu]qR9m7<?"&d/rU'mU$C[o*d#4u#Y?K(tYGK64Oj@c6;08)T?t+r8G[0^im@EO7M.V#>o2&Ma?YGP%%r@082UXQ\]ponC.%I:!cA8!@>p%?Jc#"dO*4#s@uU,%-?8UBj5oR*YCGs)%a\E.4+Oe18?.?5=5lBn[5ZfI@pQejbu_-4h2HkX]1%>4\M!d@5ij9B*t[GA;AMD"mH&oTR_L^;fH[$0Wb5T4qC+?39spl">2qj.cqEk;U/Q?0ROn:\QCiSYi#b"iMMV/6^NKLar='!rCmJ%1IO]jlEGQp`tQfEB\#:uDD8JAb2ZRfkFL'67,Y8<)ou/MpG3Q)L;^#6a`-rN,4:CLe9e%g:O@*8nWL![j0CRHP+Hq;c/JdP'$s7#%*mD*LR[=ffm<eTnW/@!]e*H4]bB"Y>9VA\+h%kj3Z5a2T)!#mg4e96XjX;8r]KCRg1r::@`skZ'$`j2D$P.Lp[Chch"FF.+`T@_p%Midjn+O\MO]'t$F8NZq=]9\i3]pe\Ylr2GJ8US(JRr!8VZ)WR[`4,'tS(blkm2ok#2qMc<eT+#Pb5V7kdd,-_@n,hTrH?]SQg*]0%9t?^fUBL3[I6BTi2(jZ-QIXdeapr^`@L=-T2sTSgFK)PAH?3/h]Xh=6eZEquaJuaKo:DP(IT$$QlhPBk4%MSk(#6RW`jCBj1ZHM<%@duHq9FK,D@/ARLm;/,>L=dFO%@K^:nK(ChhacKb\W(;.l"AS4:J!h/:AfKc>AB1'rLcaWEm\k2U,:6UKOiZC2feWb79]!/\+p,W%aBc0#7Sif9q0*UnO*4l^5(.Xf`FNo=_QF%TKN==qoT<ph"VS`X4%FW=d0r#/A1h&3h=L>#4n-&Zg3(7/dlm33>#@eD5?p6unp*Cf%o"Jk8/pMlW#9L!rW=.Qh?6\7S*@g7+eeV,.A%JM@0jUd4]N0L)O6LTYT1%>UDX-DHc".-eXau,;kL2usLMo3Ym\0cRV'Tm'D>,in%#Xp,P<T/ha-TCP\HMHiZDo7sqF]ZrHlqQ:"b7c*N=4V/$<lRuD[pF.3n0SsRjBm+lD6@gI@hl)LQgFZi"Mlr#WFuR:GJV4^dgWA7%eA?Z,AZNPKr6Ij"-!6NRlemWeT%EYN'A&Skn#&M#DiN#RhUC06_mQGEBtf<2?Zs/^4E./jq>H`',\NDR%V7Z,5)o@*LRMk'GU!Hc%E<,>1iD#FFXD+j,PKJC'p&QGnE,O!>`H;JS5sLZG2p_6b7eoh(m!L1qjBYH&<VV?;ZX0Qscb>m]3CmC=4f?bPK>g'Wm05dVMjLIC%_7,f]cOkb,"#e=Iph0LM_^eg&TqVEth5:#,qV9]s44?"'l/:@Pm)o4TpJA@RA5nW0f"oNkq_<\9.'l5i)Yd5%l=f:bg`s==<!pa9%0;N7,?;t^<0@p!1AIE#+X#E4Q@^UW<\5?UQ"N>Q%ZX)M5kV-l4mh7URQ<WATJmrm=3!`Waa8W/\76&GiGO^HW`PP?WmLjF/H+tT_%L=<\0b9PDGmbf`-\Q3q'IC[jIh@36LZ*g<![A%q9WRp<RjEoIcMR='la)qh/[,p`$MOklo1rsQ(FY;C+0Nm:M!tUQ._Fh2pfnEP7%?0$jKrng*[c9tkN@W1u20Pkj_e^m<Uc(j%*+1T,Q9c\XD]j0Focd?m%kdLL[oH4',Z>Li7DJ9OX@R+3_kSfh'9J=Y/]\Qb^)=1\D%m-<?+26Lk1:7J_j=-rg9s61R.BmXE:CN64u[(CGUlg=cl;m]%RcsI%*@rIFJ\^qR=2s>bGs/(;&G"'qPVQl)ll%_fDS`'es[*TXm%2+qDL#lKd!"WI?$8nGTCpU_V.H@".lka+7#_fm=']3@\Z/);:38)8rFcUM!!7,8TON9\.@P53GIp?.Zi9Nlme<uaHo`@\h8m%9;u%DB(NPpFj:P*t<DF[OtA'=)dd)qXj>_2ue1!oNt+X-i6,g7Rn9g0+ZBiY#k?NNpO..Hf!cD^\5uL&)0;tJ'mKDo[WWrdIk-Oi2P-g%96Ji%05p;b\TiCGHb+^@I^afO]mk<CYO2*J)cq6ML\-AMS"f?)`mOe]",#=[5<QWk)'+_'`M0t&F`l6siq'55ftU=$Nh5f8q5iP5%-f,k=EqG<;`D\rt4lt\$ISkASe2+i'WV;_9lt4^7%t3TWdHS+Ra/hiJM2,\qADPZ+p>]*&Y^?!3(Oe>,]KNM9V.leKIG^'KC%q>q%gA^dE`D-6E#'+[.apM\md4CG2Q!Xf2#pB`Y:&cl.d;Pr>bYGq-lpsD)fD\r7hpHp@G;Osj/#YOp[`0R<_7M4#-E8?C0=jiI<\l(u%<?Xr6RS6alh1d&H`)KZ,G6]rJU+3,B'9cm]n[lrDoW*rAT:9+Iaf:cS$!J]V'c6W,^ZWq8mdd`4&>Ws=1*!/d<AdD>%j?ObWoj<L%iM\nr1g$#bR82bAi.5Q?c!inPqb*,b7TEA-r&Ms;]D\qLW#[</6H`mmG>0+)M@FB-?BT=hm/D0&&cs(l"`6,u>pYM'=s*c>II!W<%:6HI_U03L47:.W[kY\'#hCkn6Ttd$u<-??),j?["]!j?(<2N&@8lMJ(Bp@'?B\iCMMGeFpNMDjV027Y1<_@R321PMZ;bqX^Cii[G%PZ],o<>"HuY<F:nSXSg^g?RDW@a71(MRs)t]=1",h?VpWH5`ta'G3]Ei9)qsifupZA<(%4;H'DTfp37i[&8a/Y%BGa"ZC@#-Hro]%`g8J=s3bE^9N4=*p^.Ts+K'mOS^[LE[)o>jPUOIp8e`A$CIC$Ym3r'_HQ#Ug<MUH49rGGS;HLtPnt3_41mpRf%fVuq]VgVljHPbL%F.+1ElRG$<kfKTI:1?Q0Gd'f?1=MU(qBBVV/IShZOr0peAVq.?RO6TbZnF##CLT0;X@Cs.XB*m>DW:44Xhn$p.0Kut3]QLc?Tcm7%Mdp=uA3fa\&qfb9^LH`SanAibW$9.RP$$4*Oq=7<Wh=6c8e78O=XV3U9#\G;5:T#O*L#!JI0Pk1Q-1pS,Y6CC09`bM<2=5:*AoFI%Orm7_2i4@<@Z*56N[4um(%KJD+W`E29FN?#Hl['OWCS+)o.Wb'o6-I`\0SE,'NJ<;.g2$8^heV"')S*8IPJSaXqHF1)(A`6,P[Ca%k#l<a6BfcJ`AFl&1TTPeO]J-CC7NAp^KN).GLLfC8Gcg&_t,2iI8HZo#O.Je2\qd_=Lo$(_#:O2/Z+5A;e.]k#^WA0o]ae%'A=h0%<H,E>,/4aIflfd'#iXB/cn0E/>1jpMou2RMLf@i]S^o)ape(Ci9Z?pp@+CY<)Ffse_S1f&/'X"lOc8WHBk#8QfFfEl[+.Gu&ZnZA%8#.oVhb?d;Z:MS>ai'4'A5Nue2R+Ki_TGRc**Fb95boHGOG7@DW0@NT9;EPe#,U.+BN9:48WtP'Nkki;_&j`=cn:1\,aD[+Ql[<f%IaNff3fFATU`3-@psOhkW_?kC&H0q84JN?))'0>`C?fK>6^`i`2(kj*8>;u\ZUWq(l*ZJBR:al]-^l0:-;(?R-RFl%rl,L@H5eai%LhUPn7E.\?`lh8o3MST18-S!ug/qZS8Jt!Si\@IS$@Pf?#3s*d0p,LOO<Q"tRbB2lG'_9cT^A+go=K]e8KL=Y[FC0a8U3\Ne5_3G%X%8joX>pK"*'7W"`ef$BXg6ql8d8,7$3ICT%b*%'BSZ,HAMj?:%:E55p=!aF.B.R)T"&*2^8.qH$0I5+!68n4)+O.B'@4gKejO-5%')KQ#S=&4[1/>8H/=]"bZIHUV#,BsoV2@GVZpY;d(=ja.i^Q:%bVMOSm*/FepeQ2?8n6!'Tl3[gV^55%.2K`XEa1%nlin`kLkpOZ%YVP&F;p+X@U$i"2MsUG?%ABS@j%33b*0CXT`T*X$b&9#A2&'rJS$cN(Cdk<Z2]`Q8f#P3n@QtpfD:3:j37;t.FN+M)"G+uU$\'(a%E`+/T''TTgSEd(artul>ZC;.E.$I]S[jn0;LXa!oKA@8GTh&o:+S<CB#LaJ#ZXXpA=TJ*E7P]V#&BCA"YeBS'&gE)V)RtSs&8,WG%)9iUA!!<N?6UW1d@?r'sn(h62R=b)u@QP@$a!LM2'_-+UGcKd?a(,Ka(O>%5O\@/3!)9=XCo'OniB^-^WQQ2d6i3#&$T1&+Q_%le%]iX`s`ECujiZ0m*X*?bU.%Q#@?=P1R>U-P3k7MDYYR;0VC?D<kU#KeP':2k%=7M^^IVNDdiGl&cBi<OO3m*7mXWc[]4D7&bc0I7"%B!IXJAIT/"m8?s8nDogqi6j+)n2d9S9<?Y9)IAQ%UN,S)L'O!>M[hU,mS7oa=+W:l^Y>cW6G\j>+p!e4.!SJC0+$5U<:G,X4i2jZ%*j6pZ-nQro:ufJhO]V%^4&/_hs&m1uh.^]7FeR_Z9rt<pk][F`c7IN1G<D#3="h-e^Z3S_@3tj^WknT:qOONc>//AKGCFUD(VJ,`%TGfc[6GI"q#3$h'n9APUf>6cs')H,R=Y;,p];(h#I`F-BC^jILhsj5PVcf_OGrYN2\UFdCG)n*<G7;k<X^8bXpi4GsRb.!F9p.st%qONs2.]IW`n]9"Y=7:CA8tBU]X*7Ad>Gm$qa*s`t;'kT>U53[-V9nY!31c(0Db.*Uf<Eg^CIW[<%Zs'BaHX(omNt[;e[lSOk#$it%SbKV"6OWi&.[_ujXP`P='#K+O=i"T5Z*>e'.sMInMU^C*:;O8A1raS;.sR#/(f5kmT&8r%^-]YgWpS.@rJgopWseS^#*`R9'`&j1%+\OsNl$!Pk,``H.4,+F'NU51WhJ8Xd>c;jI#?iHcp!-L=SU'/C4,/r]kQo["L-o0GQIS(:6]C<0XPPZQ&n"k@hqMh=Ioa6m:f2%N%Mg@nk08<[r&rQ=7Jh;.Q]9>kp%ne*KB-_>O.-X^C[s@FAVsgI!:Z@;gTJjr@X*rcij1/=\mG%Y3)ps&e4[?1_fZG!u7A)L2<#sZ%%Cb//5>%M-Xr3VUk^:lB322_MGCD'!:&r^Z.(+Y1BE^WD/#t1_()=KJpQ>?qT]>8q-Yml*/>XW\_HQFQ61cln-BP%m;"5P'tK<_(c%&BR=3O!F(cXX%:Xd<CcH/FTo?776^o>[pEj.0JJ!DXL8-bEAM@Qc96cBUIEP-K4`4KsViad?Nu%)/&rHQ?uQ73Z6e]p9\l4*^rJ#%^Ya>"</9p!ONH'N`<)-[pbg)#&8Ch*io'$HDbm>/fpp'Va>X'>EH$'734!`!T2OC9'O0kWCX6Xd\)T<>5DRkSp3,4\jGs&\NqbfY%[Jpld0>VaibH&hSo9oVsU&"0%GI"*do?c2q[f`/m,GTiQ)f2p6MY%%^[Bf\"2b%8Q\_n#HV`\?0>8$KG,^TLPG(;+JUN*btJYB`Q%(M@9Z[!V\b*n`$)ZT=BD&D@]67._\W/E@GZ<$e-ad/UJF1'J,>9iFnY_gJ;Q&m?_>Shdd?TVj$%\lI/fTSdJ2BVYsV2=b8H%8jtC%6\,dMH%EVnaQOr!3.YJ`BG*kEVQI>)UdO@:.3pWQ<3l.@,Q5V$V`K/LK(MXO@8K6gRaH7Rgdoia2H!a3.a\>^Z7OlF-[F!Ti?][l%bY?^m^ICb9f2f(m2ia>.f8%:cN!98DAX8gK#C2/iY:KK,AcG-lF:V&((?Z^U^,s'?^9E+0o;mqhX+R1\`aX[uk2u&\cB%[V;$8]A%GO=,.JN6t/%TZ?"hqthP_$FcB?=A7K,k^C$>FH_d+]V7kQ7PM%Ca97WP>looBmc+J6XG<UeJ%[or2Y6m:Wj&(NT=(aUBDA7@6nG8%@J_B#=G6r/1+OBe-&)&$24)>P)b<4%JY.V+IkQ3V-O7_1+[60.-#'b,0dP`YnGZ<R004A-[\lB(M<nRF.QD8=Dpq6*qV-ZIo6I@R%Yo;U\18X>h-8]N1QmZb:j<*7/ST5WJBffY=^@%6?6KJuRWHWP.jP3Q0mJ"'rq/=8B6.h)CNJi0J3J>7t:l=0D[L$(kRE]el:7O^5%[L$6t_N"s`+>O7PA"-"u0aV*Q0_>pp"X7U]S[HQR<p5eUJ2lNt&k:qh,Jd-&PX'R<3DYhl11eq@pel.-H(U0s>(onMX@Gc%:[>,S%8rbC3V"?fRA8mfi%9\P(743dYin#=De]Bnhmk>1SM,%_:/G?dSL^TH<<Pd?!(#+0-l`hA<KPBM"q2-NrC"l&U_qUtc:;\u(a(s<S%ST7rE:%[uCJ%#'S2r8))hqob!@=4QX8<@c+dNpNnb;<,`]M#'DO+U(MEZVJU,(-q^jc\DG\giOVs52Q?oGXL#,ubM109%DD>q,Y?%g&Xb\BhL*b:!@3:T)MXI+r`O9If3AX<eQ`JV-C+!$Zop3c,$du%&'&s?joi8j8NI^mZ8<fldX&e@,k!",%Ta0`Frh(/RCXTc&dpI%Os@Gp9t$:V-Wh3@Ka>"5?"qr]b=L1'p`UrS)Db";+GH7p4s`]KN8k?j<RNj*7a4Js7;V0Gc0.m7`%VWET,a-$:)GDl9-6oo#jq_.%67U?X18KMf\l:f@%%HjN/=oA@+BW%Pe?WN)'W[mO4G^nNEC#l,4u..eaU!'B/rdo6BKS-@1`!nPC&1a`b\Z]+L%?c;=mjV^1i[(t%:Bf.Pep0n'Y)_>NWPnYY.C+Sn[Zjn1#I[X$JpV1;Uct3K11b)mk;WiFjj/dZVeLg[0L9\n-O;Osna3][dK[,n-ne%aoDP'd=!gH?%i%snp`+CD1GU8b1%EO[#lj0MO9=Q1/Y>_%%81/RG.G-QEDDsd3o*/n^J/Z,*S/#1n#.l<aQErtqZR[m(S8lBlQ*s'#C)E!/JuUVr%-VIAd'BTcUYcpY8E3%*V?/\c;eMK+h=a?e\VjR7ID8lmt\^Bn]m6k`QH,sOCph9s\;WLf1P421$ZhZ94ZI1-R]aG#s<jqWQ6oJ`E%>HWNe)o_7!#d=oRLW8d-^l#7V?pm\`jTOU/"Lr)*Wo4@]SfT5B*IF'+CLi"rO;o5cC17i+3hpObcN2oO5\u\^a>?qT9c'4#,_VeM%G#QoOWC%`MKurT6KP%_8;Hhd<JZ5X0WADQ:9L^$l\hnQ6ZW,,d`IMJI2fBu3C]^2q*jK)V+J81LF](dfno-FYd5JhJ$0#YXD2sLe%62k'MBI6K"etU7J&.I!W6G$A62P13^2W4cNma`TQMjl%"Fr%b;<`qBqm:M,dbofYho)iOqBuBh%%%eeg+9PFr4)&CCq5fB=Si*#\%g9!\1/\DO$&S7Asm^-e2=9+lqab_!JC8EAITNW3pGX!=4kg`Di%:N\>3>L:(Z<8R%kkS7JP$@5oQmBoU7+A3Zk85J8&gsPElsLg%%lp;J/MR_@@0&19MR39`.<gP\.Uk_@q"4sr2VS`tA;tO+`-[$j[Yg41phUm[jRJ_a5)k0YiW?r\b8MoML?mMZrZ;^p2;T=kAb.?>^%4>VU=72RCDI2J2,&@7Rd<SD_TUM:7C$6N-`SjpTu-aOH,K;cl(:34W6/Zt=UF!/gMj_ks2#FLsBI@]J!@0*V;0ZQTE:Jf($1\$4h%<5JJP"6ni[)H$s46,o%b`NTqf<.Kg<2UE6@h-_dW3"mW[ZQt(>KIb#7Bk_)knU;i8)%P@tagYm%V.CGQXHk#+chGn@1<Vd"MhbPp%$g3/mPgtn9!c=;crfKao/[p]E/Mg@4kU=2(eN>)CS9aKLPh#Rd!1+V>!*"o2MKqSaEG",5H;'R5`"<d/I4(cR_LmsOk?R/1O/&3n%P(XW#G'Q1HJ..!M:.o,[Vm.>dZH4:2GX>gh=T^sXaM2$_5@I7rj4Pj`s"Z)m>'V#Ce?i^)ko#/=G32q$V"kYD(*O*0e2c9Z8]iLd%XII0(F(<C<?ud4E`2FknA8DIU/TVir/k/RR3TDLl7dpUT4]079UuF6Iktb65loI%@(-2=g$H)*k=DGhWVJ0hD0[V!E;Pfoe+N$fp%[h0>ck"'?*K=2cJ\ISED.%.[8`^ra&!_b,Q>d+:f=@<6AoM%m!+?Pd$k7[qYO;a%+NZikW(a*@>0:576DltKWG#/O[TcjdDL,`:#%@UE:YJHU!Fl0Ph=`sDi<4Q/,q:&kj8Ij=ZT9f`r_159JBe+&l#'jE(RVQfD![MA$;8oYk#j45oM:aLWXWmj]3Lt/&LZ(q6:8Kd*1%:p_iH0!dBtkccJ"YQZZlP27YBX,2r3JSr(n1G9+hgdo_QAO:bPi/(#F9uA6/+Vj7cdq"X4%YLH_@FAtG65$L;B71#^V:'Zp16FRK%2OW$pOjL)*!r^3+SV>jNVXR3<^gt=>Xd.ID<#ajbRL'Vdb=kVD.g!gKU`Gl.!)Jm$]cLhiZFjETNt`+@746Z>Z+^<.<9,=WrA]iQ%l>bnCOiWAi`lUKJXGrE'm]^tU'%kXG?NOf_Em`ijOci&rP/hJ2+DmS"C'Nfh-egWI0&1YciT-7lCsomiN1PqJ<N%0Tjd.8'S3nfC%giAe7:OInIhK5)i3:.M<ducLodX3Xq34%!tiqLC),=7V.HkaKnp+P!mH,*T]3\aFYOa)VK0NF,FTIbd3M56aqBH:'Xf+l><4LYBp%'ID!&Bp.Qr#):AZgXEDrSRA3`G`KG1@Q+fH:b0ZV#t:8=?O9.)kG>cl==n#`M-Z>G+9OMU&q\Kgb!ldr%)=-p1=8?b74_qFk+]YN%pMM=OQiY8rS;&1#ca\iD9J,;LM0U<3Jkk/1TbsOE,\*O8Z7<D7A&=TTko9ld3+Jdo7jBo06[tKV%<<`R),cT?S<o,eZ2gnPUrr(,%D4P;4o,Xm-(-eO`O'm6j%#1#>Cb1IG!:2_X.b`#$aSJ-M*"F:<^n]Zte:SWn0j4f-K<:+bM_[P7nW[0k?-R),DWAg<PmmFAAR0p^%>!/Sig8?hOk>5GP;_V'S<5cWAEHc061^9hiKj:JH-8oXR<h(+&MMu?e`O6Kf+HJ:!paA[k=BTX!&-^:oja2"*bh6c/VYubu43'r4%+8#]0NHgVAPQ>_Kh>9!O!8rDt(6VD0</+?01j"M=8)+\"3\1/=kO#$V15c!B8n4*`$K4,E/9SeQeA;`AN\cT<-^r1Uc)[Pu4B)q^%$t@/d8LOKLe7YH\Lq-R#Sq(Wd_jlgfaGXCW(afQ[8L#lcM,A48e;a/g/4!hJQnXM@-U@f/#MEWqN-]YA12S7Z_E0s&]VP)daX4fX%"5+B"D1tn>@2f:,cScQgQGE2aC'"u!2VY?iO&.k<%^tARG'Js7UWosB*9aqW1Sg3b_(_f?M\49EksW2.9H`:RM@SNZ`KP^*,%9+K%D=.Np.<9te<.@B_B^93I#0p!)Yci:Hp6]rJ+KS@4lRKN)#emEoT"_d'D0JY%K&EXN5E>H@pFi"+DuXs%I=6DY<ci!M>K`s,84Xa'%8#b=QFDrXKA?3k[@%kZi[Cf]MOAHOj"`'HhO\dZthZCE2q1Jfn#=Y8BgoUek8gf_#Y"g@b6"-;#eQ_,XW&B;.4k*a@E"_OTh#9k,%-Z)]6@OVX2fd!d_V_U*3!cqNqeX\DK`SEQYDUKm3@9:C)q&V.-N#.%caL'cOY[A)ZN,%EU"=O1ukB0]D]FH!TQC5cddtEX/'Sk;+%mtfbZo0@a7n$Q]466'=Pr+ANINs"-caRX6OO?2F>^C3C('<o;DqJ(X&lijJ0j;>NpHeIX^!K%Is0CjGI;bC[ir-@3C9f0t9JJLEN%("#T-i@-du<SCJfGJYY]AGFoMhhpOU\,j7#"KjW8,<?#mT8b`P@uGB`^>Mm[NGOhe6VlRRYp-\;*h#SG.-tI*nQYIOlK!@SeL5.j%qsZ!37.A,Z%3=f&S,@GGjX6dHbYc^=]3m).;31=trrEBK)5(uN]M$/X/i*8p,WdA&#Ble;+OS&=g`3Cg_\^F2B(2uh#bRcq>Hrks%<#;=D4iqA%T_^3*r$&Hd8Kd#2D:KL#8-&CK`LNW:]h]f<C=NP'/.tS%fr_d$Na;u9[>ZVPF'Iu=qgnPhK7I7r?]R!S8?u60E2^&i%@SHc0:gqDW#Krb\pL1g\b('GhFnM@l5pE`\?)YSJdrZKo;trVL_ko_]WRTI'jiB9LEUgI@0`;_#jAW/O(3j@YEGV7H+.@qG0!LY;%9fX[k*YU046:E^TJEW_h,'Itp4s9V7LK&rP!!a,X.Mb>q4*mNQNKp0!p[?;8-&Is>Lso+A0ME]HEbT@:&f#SXGbS@@&*"iqjur)'%G2.kDhC8L'TAJg^!m&LJ;k(&bfKD'48nB&1A*=ufQ:29V(*GU^!9p<J]CRR!k7`#\V$-?WQRlZ`8n^m8?AWYUB<i&hX"@\;=H^hm%iq[&ECX-pkO$20IR1#[#IPGdQ/cubngiaOnZj+GC?]4RCOB\qFg[P[G1[L35r_N",5EAN-\"bKl`MSC>!h1YR&4SP_kcq*X>M;2T%N_S''6!o9\E%7g/27;sRd"K;Z3,g?<^;RYaVo"A9>]6><SBBI[Y!EPf$C]-l3#l[I3!D2T).;'r_IHM)2^NlJ!K0Zh1I$i'%-R^M%25D#?<.X`R%QipZWQ8C-E1$s/_K$uA/uMioW_O.#1HM?&(V,->O&!Y&WQ]L'b0d2]9'me"%\1ZlOgmjl%\/F.kU`Vd'"'Qh!hG3J%D4Kb8<^s"@NZ<4-*hD"sL0A1A7&PXG''[k>(7g?\<g<Hp&%3Pc3XEm@s+*P8Jne2=r[lKr=Q2;Q<sGR3M)3oE,R:6%93d!GgC+bR%<"6d!c!#k[<8`0uNn^r!<5Ehph`o26;hK8ti7*ilJ5ai`+gPgX*1R@c,]h:Ri7)^6"ZTLl`cQ#`.PGIObngmcjmIiN'clJq<6\Xn%!g="6Wofn<3<Y\rWH_4%\nYb7+783ha`BsM;Ren>"ZdCG:o3_r-_jUCe/7)bbbA$g=j#-k+Y?3^U?pXC?Lm#R`kb*X.g1K'97t@&%WB/:?-7tm"D`HO\_ku/%W61kd*&\OqQ8p@<!D^ViEGT3V#H.,s/99%^6bBnf3D4G79*e9]3]JU!;h_O*Z4^PDKBW]HW?J[bV@$Wd%-@0>T14pl\C2#Lb1)52!Asj..q!:OBO'uU1WpSpt*Q\@]5r5LX#3N^#D!9+%Hp'0KhdTig&2t9iB'0[K;rQGE(\mU32!err81ib8%FGm@s'*@!;E^)h-7=_#lBK?@C_5C,0"^jip(i^=PP%#g\_@/op0LUZ^Ba-S0*]M&uau"m\V9RHo5X=\Ye3\chcli*Y#j$'*%Uc5t%pJ+,:TX>ESlCu@t0Gq5(%7BiC#<aiTOZ.mZckHI'OZnY#j5G\#R=mRJXn9].PoP6E4DKs4QumDdmAS0H9uO!9/G&=BA>c7n_DuoP%!t'fY\Cq^R'\2"+aOQ&*9I\gc6WY&C?GK@k7=IL%\K3>1Xa%#C1HbkaRH#0!C)P`XAU4%doT=c@nXYWkXVC8/qt3SC(fH+R0!k!l%I-E.KHK!1^Bp:8**e_L'L%3CF5f-X3fYaU,S="/D1hRb^*A\q=*,3Oqj_;mp;=%/Z_Le2D_%Mr1/b#0rd:>"^Jo-H7*uq=4c\;b\%N!_+B>g(K0h?p7O1ko]8T#hUp[g-tEb&s$_"md1iKuj%WZg_qfY--GZ#UH=-SOV%;YUniT![)Oi[2bY7>JO4X3=,F7#cmM-1c=Ok%?qlkffYSO\Z1gU?93=F`%4D@]`P#J5G_L6s"u&ZDWIo=d+2Xj<p.hb_IfPd<gaCd<njZU\ON^[ZK4Rbh/@krf':Jc8:b%&u;;SJ/%@d)0m8i`i8a4^QoRsFA+#Na??1EDh@He:VVHUO/gq8(9sfZ"m@#Yn-SnH_Jd%['Nro?!b/).3aA.8+.]0Q]iRW&5H>!%C8Nflkh)%W0EF(RTkJW^9#pp+L/=!&"p:;8]UnnnWOG]ag!L_@iuY;M483R@c=RY%]RQLR7G@:eS4-+bZo3FL]9aNd^X<sNt[6>MRDanlO]oA%/>dRVZIq87ZsDb;$$qMR%oBBQQcktI!3@-(c9%Cs)&D?$1d.FrQ'%%'(GYL3I_A=dc-INgAN&k=bV>q&kN+^aKqEXFrUO^a:NZA>%]55J#;ms30o?nU6$sa'g)S&=Y"Z.)*@mp;e"u1b8Z@$L,l5]WZS.H>STmGO>Y%7$D`!A6(*%])J4X$Wn3n^:5"kO6r*F`I3fL^ql%&:FfPrd?Wgj-&mT4DKo&<#gAVc0VjCFk;^-kZfO<F?sOU(,RUeCTO+8O=1*RoW+10&&D*bHS%n.#P"b3S_1q7^]ceo-nc&l(pG0'%l[[PWU8Pf<s1UbB]Rogl4TVlFo$Yhcr.&%oD)qn)N52o"));J%/C(n!Zd?PpSJ"Z5[2+B3Td.1U?6*2]7R684W^eq`Lkm9[E*V<C%+XWK?`9EDIfNR@S)b4C+V%">H>b-LR=r0Of\$nV:10%pMk*W[8N[Y+!FaQ@G'=&f^3C]8gU+ANd:5FiUS[O;m\7UI!o(7CT1353N%]5FMMSe]RGgrU!Hqs$Y9jX=+uan#4t2s%i^*:4?;s.n<88383%T[t?/XY2?7_k&n?YNG8AOY7;YbV.P"4C+"FFm*4(Th'F&Kb:*G%ARoF&LE"-*<I)o,%nn=I+bq6X@LQ[72qg+[`?#f[%&5'[^7NH!U4ojkDK!5I4_Sl=+toK,bkh)(W4@"b#=tsZJ4Ps]3C$N<IB\Xt%&M9cU3q7m-@V0hrJYS@a]33&4:*@nT4Jar(A]7SP4R1sFFjd60*&Y5<OE,PA!-(7,,r!m6E&%%.L>J$\=5n40mD"WMmAs*Z4nXJd%0Pr%Gib)4<6\(o%.A*%2lU0AcFDPbI/\'<%3Kg6,XG+)^6r!&d"LCSGL1GB-p9M`8+L#e3qIjf+(eU3"4La-c*s8HnhoSX9E7S:u%+[3:3':_R+_t-@7A>-t4&M:S5_gXk9%gV)L>FZWYI&)mZ#>7P-2SrF0(Et+/0+3IA8Xl2")DHW2EMSV>5"2LbZkWIu[n_)D<Wfrd%[P?Nm7;^Zud]H%QY/gc:5X])#55Kg<V-R=oUq)$-_O@Arbre6jUId7X5OGUAZkYUb%+^(%/a2+a1p*pg!)S>&aV)#CcdF.%CfiL$%jW)!(*rWf^5#Vd<TpbJ,6V'U9:e-tmb."=0d``IrC"Gm[V[Q@EA`f-@YX67ij"WelSRTsM[(-5R5GYhjMiDl`=K+mj"HaQJ$hd?<%m/7K:VN*eaKocb!kQ&PR8TDKs:L[ahSGbk15BtNp4cJcWPd)53g@D''Ae"@FF>_eC^mliZ%_MrPbHpuqNs7/X2+B6)$]V*looF]?%*uG1uMn'g@0FH-dJ_WQE2+N4%,Rh/-3VS_SU[O]Z@VVsnaLJA)rPtN06>.3g^>q+iUFdO?/R-n?D%MJd0$9.u<AMiq)ifoOlpfW"%I?(\]#"FdbLQK?oB*id`O#?8nK>_Zn]qg+>6K+4830d'DoI/MiXk-<jqUucD,-J-YW#$IHNV7X?n1ohL3S7X/an2R37^IAaZ#Oou%O%[B$3XH7Mag/Sgj:+nr@Rd/mQ>"doL"3+KU*!?d'8j6m]0n*@c.g^-;k[$Pr/$=igG@2?EHuml=VnQ0F\.l`2mI4O!r^)9gQcg9%*s6OsU:]rj2>h>',02cICC;^CW.;p002aDcZIp'O?VaUMi`?%/aY5R-G+%.`,4&soE'AbR5kD0rG*T!sPlU7i4>B1(<_36os(eqk%**[D[n7DT-D8*ISa0m#$1jafc6J3?ZK!1'!%_D<PAaA`kam9#;+ZtMmFUW-/74L$PQI(MS6gNR8nMmh+,'TPbOc`_fa4U@IMl/Ub%0ri/*D+"#QigGrOh"`t<ZfgML5ApJ9.CEgpQ%UMq\gNi*m7^IR5$6lh=-cV0Cd$a`jXPJg-aBjCmtl3(#01pWD(kB&-TDN6":+)O%f<mao\,@Q':2'q,YA]%`5'Z&Qj^Iu0`L46Ta-KN>rU&W6D;cAS)Vb5<<iVq3cCm+''.K-"<,N</cA4g73J.8_1phLHSN/eI5IrC\%854*>5hmBo7jJ#KNPC>_H(&T0'U_('m]I6V-<WGb+LsGc4pI&2#J&VVZsOKZ,QI$eoCJW]S354G&SGcFWO&!`nnO\E=.5?*IMI&u%,`@HBV5s2?M>gE,i>k.+lG:MqF&kEu(Ep/)>2V8+R:@0\iY'cA%Un[1T`<gB!ZDtufNo9r;5;C>mEZ>A8_TS'G)*9KWQd'(E"18I%f.`_pFJ[p5A\nZV,kkoo23-n?\6PcM@eT^Mno&D%43TODj,^1'[eu=Qb!/`3"j0L$Ijr'e>QIs>[*VTN479DF]!]_?&L!Deg?-a"%lN6-i$dEUpJ;Ps;Lf[a68%A^,q(Ni2/e;1;edTOn29<:YQFbpBd/.'=!R&UYE+1I7(kX/"e)P?j!),/VEmTp!TBnshTAeY6_PZL8%FHbZn8FYjZ[NT.MJ[&u/.;-keGXrG-298<6hW'DLHZ^W<jq&a<23;rlWgu,%"0Z6LIbUsBD[@4D%846lVOH9T50<lsD!]W%]hgU;%b5G*\<)T'cB&QW&%NXK2-UH,LZ_njlFuUMYP95g<4Y8#BfK*TUP.i2/;_;PG0DMbRc,bnR-`P`.PW8#c+[T>K@2&ff0B3*uAVlk:%>g5*,5(Nh^%P]W>dW!bn5U:Hq1+$K>).*S!Jig=X*=.a-bYT4:&E5\`-.g:O.2&9,[aU=o;Ih69_&Re&6:opI;M6osHoS@m'-B"M%0<Fu^,!ul!0p4iuQ.D9rpi)teJ]Ma[*PO@]7uTQK5.Drs))J!7r!We"n>WbnK?sA'h1X*\.cr$CBbS:+`U"o;(s-0OnIk[KUO7[T%8/]"##4$HX`0>T_B'=/fr&`Igi[ePqe?\/[cGV8kg;ni_QZ73N%\bD*G7`n+eTPt_QSAsaf`Js!J2T!.n:/:[)BJXa5nZ2Ba)/B_%T56I%X_csjL3nRm8#E+?5u/^XKakKsg)n;1*J,NY\VjJ($&BanUh,I'9/tVA>;>9N]Kp!jW\P$/'t83JNImjT.nk%_hBLaYOgumm%,('qWY=>`b!)pa;B>G6Q7WV$KGV9aLj0-?`!dUnm]*@/DL83NQ2V]M_CN=LS@V1F\ngV8kr,HCNA`Z(,PG@n8Y@'L1&IV&9pBZ@%%S5V!t"POjeFtG,E$i]&?+bgRDnc./\_Js6ak6G2o+9]sAl=*J<hF]"qg*2>T-^oak?Xr.!"a;983<<2qQ&=!25rMRqE&QW+^`4O9%Q$3OjJmi"H\)M"h!m>jmPEo.5J+HBdr0c-9X@Kc/?&>j.6"Vt9qLRXW.3K<OHn2A_XuO6=iB'KOB-<o61hjZm(j?_8U%#j?6H^pM%5))OA<SAXUnjiG2E&iHa(04r+>D.R4I"Z"D+Z';XKk_d=/GXd@P;$`YM#Xkt"Q=J81F!'m,R.S`]I5N/`_O[GKRqKRKWC'.&0WD$%pr42SE/TfY@W6M3>%lI/LDGY,"F>pZ&er!9`"7R#$\h-'/8`OU6phhIj?D?CBFH%Q=c[59[`JF4MC4R'6_gCF]gOWGd1>sWDWSfX%pa)_@KN"be-@oba8Z5-E8sP:Ol%<3(R.;;L6I]^@NR3lhE:V2!KYn]T<$Rb57ToqZHOKi1hBJK?PQ*0+81/;unl/[tA'sYf?61`f%s6&UW;R*u4*IU#_A-us$$>5Ee"Iak%/)p+W"8_RSf>,#Om<>%Ph9-=/mqo6Zdl2H2G5Edso=%/8p>\g-M@KF>p:k="fB<S3mc].<%knu<&F4WoP>F1+HFDZ]gBUoqm&!-^FIZKW'\[qd$s.*a>pGFQ8,X'tu62Yu'lZLe].A4TR=@\.e;'e-tBgj*i\roMETFr=nWbDr_%0Qc'499RnO%DR4!s5,X0\,0CkYOPQIq59VCI>S_ol6niRaNZj^'bYo=b.^X!b!@;9k/"clNjAWHIEFqMWFW.ijZ^pr8sV2+@T-?+%X[Rqserbh`P?d[eh'7CIk#*ral@))bHmd@WM$^dq\j(Y(\duV4)u!!2_eJ;<G;/RTpL*:`p/K5ro6tO4rGH$CoL/I@dr3?Ij4jUX%hp/77d'Riu'@10mUJ)b"_AlR?M%;']p(&\,;0#K)O0bX]p=8,!D#UEI&j>\^ir(Eka5X<):guj8b-\I(XH+k[1cUMjpqRlm^U%#8%;prEAh6.[d6YMf-mT0n^s(Dh_O\CHg9%EJ#mZhF&!Vn+O^u,%'5I(Gr\+rs6XHNI,^Sr\Lm-e$JEHY;Q&,)&6ifL74"+?DFqXAcX%F4W9[,DlK9`&?L&16e5i20Dcj)X]SC49bKL[:M:6M2AH%qdk+0I)]"4#H5TD1s.N=8_ahQrOC!GBMV'j=K5QEeV4jph.?j.SRgFX%W7<",DQ2.%>1'Jf2+MZ9/N&P&D[1">hIh@=OGJ&`*<?)WWBD[CorjO>V,(A)Bk76_j8cYD7<<S=8HqR9.f<;9]1H0uG/A5)K>P1h%N/#.l89!,$``3mK'K^Um_j#-$0;piALC6cDhl=*)/4n>"E+A'k7r3-l3sTeZK"6r[Vi$$#ck\T?UC^P[lE>e$6YaCkI$D9tXgb2D%X5!'Qs1k(5Kl"mE#a!Q-<pq0V)APA;C6r2BV*n!1:/I.WO`Y?O\Un<;:]Q/4g#tF9fq)UGQFrEj[U8QOGN-7Q>=p+b]I$[&_)iMf%,M[*POOArW89'-m;$5r!AnT,d+g![a,.16ed&ND"hok(>AOM_1#\=X7K`R/O?*n+rF9I<^khMk3<8<EJh;hnbbh)i)-j[\\kfU#D%V,#$DEk2o\.!n(:5`d;.:aG<2XJk+YNFXCU.72cX>bGj5_"OE-gYH!4Q4LcCM'hS/1t,_R'tkCsQ<tpf;"P(O/lR*J%[Te_@NC4c%8UI*7in8i2gArV'mL`:sYR>r@.qCuF)Ja+Qg\*lXO4Zjg]fWQ[Aj?OHS"%h,Uh5OY%K#pDC5Et4k(q,l:&Q7iVh0e@(/+p59,gY?%3*QimC4c`'LD.IPE&TA[)^XuLW5$kB2p%?EnNjT3J5CWJ7>XKXCE18)-`&=j"_f/65nrlbOCm4;[6h7Mp:J["6aK:"$*NMXjXqXi%AaA==)l8K1\*k!@Qj[4Sgl6oJ31i'maDoS_EZ1f6M%nFEe<],=4b.G"9b*Jfe5k#9#eHZXLZ&k'j-H/<=,FpcF'LL7;H)(=0`E&I%]XY:P*hXF0bA*_cP]YQ71UcKX2#<iK2#$6JM2chY-JqNI8NEf?,[&Z8a^YNZ)Q"s-Hq0.$UH!C?]@JY;k=dR>6<Mq.*P:/m+=.f(%#?p25'oe`RF9bn-Oj!uHc#E.T6:k?Nq8SCkN6:laXu?HlDFVGufICn&PNX4:)[Amr3K`B:9bq*E*]CYD&@oa.(pF@9B/L[S!b=4W%`Ymku(RPVH9;4'tM'#NN@X6<kJ]7&PrJX$5HJ&9L#JV5%lc+SJ;T+e6oR5f2MM8%c@YlUbc;tD.:'sci9OaW-1:rr`N`R*B[n1VC%8:Z(uRcb#W[%V(^UbV9XN#E6fY&<oU8EG!qR2rk4KbLi'*FGpXH\,=fk$)/cZsIDnV1fP"*=<^##HVB`GF!"Qc$2BS\e7Nm>%WNA%LQH+[Ftt<H[+!#q21"5k.q<pV.;5<ld<p_G5X==T8!`uP25-^HGS#qaXk3_TSaU)W8aRBpD2EfMKJW&Pr?2o("0;JL4fA@r>ip$O%=b=Rc"t2U/rj>hC:+>(%hp$YdP_T+p,9)3/MCbM>HXnU0+em31RT5jmeSM)_SBhCZlcg/uCf-(-87YeAK*p)aPj[J;%p79SmR.)^%@l]e6REV4'da<jgZ":nS!_-3.Fl0La"6=Q\#qej"^h-&uQT[n5!G^TBEGl7iReZq@GXBQ$n[""M!@%eEBMZmd]$eCJ&VKu8beekK%f7OEn[`\t]j,%>D_.D@LmRt&k)$Ft!=&1UZ4@u.2leR&-Vlh)OfL]nm7,.[]0ka'%#+?lM.nH@):m]OqQ9S7;,Vnc=S'>?q=A.hY%_*g--M/C!Ua<C_n!D72A=+$&AJ#eM?'sL\;0]+`A%9u)8)h+Lj9.XmdS]!KZ/?S;N$g?'XH4?gp(%rV8e=jG_Nac53ANm'HZFu>s%*21`*0]H#t]qTNg!=E1nX+=##75tl.JuS1f$;5Pcl<Jn@VqHq]nteuY1bpe5_NInk[[J-]+dm\2LA!o%"%9Q!Y,1)&N78C=`7f)X%cr5;l8t"h#RM$>_XkJLId^="%DTLUHls[o$0rGM,h"E!9O`J,dIph7_%-d<'2Repfeto.E1?"6E[*X7.P$D10a$FJOiID5B_m'!:%mBe4eOq+O-bE73P.WZXB=.)]7_'6<:^a68Y)%m3!@;O8X/G#`[if'B9<Q;Hd9T5-K/n*qS_o*KNOXu]<mX0^f@1e.)VsL>>cnhXQ%+59Za\^G@&EA"#ECZ(;6a>0<,boF5#9(TF0WBGR0E.3'2AX%pKXAg)GIl#i*=A_:H*2i+AW9BT2Q3m[4a(TL32HRV0ZtGp,Hm/t2%lY#NsZH2i*##`;r)_dE'!3rq-:g4T)kK1]oK=*R!7QY?oV\-9e::rMsB7bL&fT!]P/R'nEqGde;We:_G[MrD=H+tk&JZ0CRk%3u[%U';;jZ]+JK2'9mARd[ro?OZ?UBQ<)Q&nP4dhX/l*7Pf:E8PVC!,r4>i.I&p7o,-:JVKo@j@0?fWbHPf^;Yb*R-\1?G4%@Dme1RI3%NA8(Le$=Cq/DrXCVDI09#mgqNiM6sr!^DZ`06.R[MVXQ3P65DEF&FCDDMb40h:uns]2ojQ0K3?r;a9;[s(;'rO/&6>\0XE"]ceb=%Z^b%R9Ar9\n9o8H5fm8p]CuHsQBGf2qX5m%M&DU_&_FO=#El9+ZJ+g]"Xbr)!<H@f\MQ\+$6_uDojhtN<rjhpN>nF=_eLpt"\L!$%#*r"S7'Urt"E-7.;;:Jq^3LW.Aa%Y&2I)2SK4WgD%@q>0*hoOUUp+%Xd@,%Lq)i;a-#V$?NC+8egQe:2C76#%\ZR$/i:D7(YCZ03%:S]hTa0VJd_X?a.c%Kk@kr'1>Y9RqX#KVYUEa3\.5\iPS3HI"e?s!`nR1s=>Bl!lG@1OoCWFlYA*-L6&+t:51Rojs.acJr.\"W\8%!.jMqb4*fhT!p?W;UQHnWO0PD/Pq%8k*B[5C1?YWWPk5FqLkY`_a\-2jsLc(/:kZ:^LuJSfnO9u@A:]$)e%CmQ%9Zlhd$"*4>$1S%iqP19C"D&r/iInQ7,0u\*=[j;Cj_0i.?+U(+4K@iZ=M@S,%4.sn2Q5=['aF+H1(j4D!S2mdKXf+Z/Q$*Ba]\W*-."=(o/AjqL.=]%`-\qoic]r$>au1KaK=h]==b\gmu/S]Z%6=Rmkc]E^]FdJ2#5qfgmV5<JtQp)9CjhqNg]%i-(QIHSt_[A;AP"&k!^B>]I672">2!m%`9bb*,i;6CgN4Z,!IVb\-S!`[WO"iVOp`s>GD4O+Z/TQ09Jp^;#-U<4&TO.V5gVbUgspjKTLGr%&:C4om+]G"0T"Q?_5&5>NDHpF%CQE3V;oS/c/;"V+Cj+Jj1IItpG%+qulRMJ,VDYU[%LA"J`2l[62TA_Y"[30c\T4dUUg[\7$^1D!W&P;UUV.kD:E/!>U>]-H`guYa%j3ZY2^c?>M7BsC5$ddepJ1SBn`0F&iq<ML-*R5Qta680>(I=`U`.Gbq`QIt+d#`uW`U6^]S<hj,m4t:VY+=,A!7b15koQ*/re)Qa%<(!(n*7aCjTrL(lGM=T$NhIj"M9;<.0h532k-tIn')NCT9hn2N4$QCg9W'][raqK8J[L#&%$EGe*ma"<5f>3rVOb'p$%'#18r.pH%D?,h$-LE&;eqiD>ZM'Ta,.#(iRF`Ue$d!o7-e_c],h"U!Egnu070QllGj?0$^aa]6W3C[PGe`cX,K?ardH3dJ+=8;Ubq>e#ph43%%jT0=r#=&Y<-u>Of]>cpj#bSG"5YTF>3$2&]h3CB288IcNVoES8i_!bZ9H:bO1r$^XEp%@[G#J)c3H)k?kC16DfS10sLq\`$r"[LR%<d@bg?5td&""d,NptY\<&0I;PhMol?dDPA1S<F^=s4pfOba[hI#m&:fG;-14EV.<!hRbJi>oEP82)YHk6K@dqp5i]Y-!*9_=1__7%)RQJDG3mMH6ShR!A=l(:.8>6A$e."+IAksVTZY"]61qb#N/hFo+O3SIAelaf6*_IJkDRU+G2'Y64R"H,bT:QD6J'7-1=n3J'h323%k)M><mKqi(2`HjjnL5lhofLR9)biXTl1_:6@4BLeJ3(Z0:OIni&0Nb"i?D<X:0P.kTIDXRmRf-]O?dD"[Lc@d2jheMP`o`>'#CkG%+nnh1^fi@d\YYlM8P&8VB+L[H`--JWqTg=te3Z$!$_csTnK4"#kmum=a/5(72pan"NuaN6i@ftpEm)?0;RnPi(H.Q&,mG_jXMi2]%,E'L6^CIZCkjtKfG-p'KRC:4*9O!fEs,8(>N8]dH/PNPK`nWeBe$+CQ3%`#DCta()`,Ptc65G<!ME2^$#6cKDHh#q,[mDi&`Jc:9%d3-,u*m/0ontck/1s1#Wkl8j3Ikot$-$:uu==RAq8$8HAb-$(,2QG;534d1CK[_3\J5Ws81<IG`,&]bV(4Fcp_pmTNE*j9P+/Tek%L@>N:WHmKt1pD/Ai;PX@nDD<!Y[4Wcl8X;LnXKmf&t1mWOK3aWRA!H#JUSqA9P3(0CPTG/K7ctU`j]Yfj*7no!QXE/+I,)U'hpNk%qoQ:Fq\rUEa!/s*gpl9/C+W&p"QeA`h0bC'as!RiUW?(_0<r#4bkU+HQ#2=Hf\s%;A5ejOb/T2P]UaS-G>?1$#f3Alk;IABB^M*b%'V[[o!?PH+9bZU\(?;O,SD"ja4u3b5U^cfgGD4O+Yp$C61=\>h1jBIGm]85bNs'0?K`fX1]ANc'9JE<"0M*=Y$`;.P35S0%;eq?@%Qbam@89_Bj>V:8;5ii-LReq6Dncp3Y>2H,f/.ssLBM.5jc/JF7D76!A6hK,f6kOd%D=]?(CbaR([S?^ANs*;1&hWXYjcJboB":T(%ZUEfPn3+]))9e%Y7*r[aj:dOomEIXj(49W;j)$\AP?WU_fJWe/H]*qJM$p3G=F$p's8V*(AN+KG$H#Z$GF2*TDA7mC;:M=uVJ(P_%"aU?0/k7^d`.6e`*]HOF^AJL[5NS;FCa7'IpcT7h_aE_L+a#3!_Rbm_)`,9aFQ:N*dLdDI7-4U'S+^a.9V-=9\/%q#RkIeTTZ5pD%gC/XqL?2YBQcV1u(*9XQKnlqZ%GKHI/r[&"Hrc_'KO\=@5pFD2D'"7CXi-He0I(<:>nNMt$1*6*M#j<174etBVRY@f#AD(k2d5XA%UuoXPT3=+Ur_PW-s!@W(C4s]MRM&KRn\)S/qrep&s%CHSM_213.g=k3c(%BLD_`p,\e9[h7_l)`%<U*)o)1_K+4RBp:U=\S!)*OE%`1:.%G(>FM'Se.o96*.`K9D#@?WKt*2lo3h7:XNt0X[06.+5-h@JX`YqUiUHC5cgKEV@3a6fMhhoSGV:nMC?1[.I9,7#\G,JdsK2%<==FQRo@i-/@%Z9+Jto(i>"C[gJ;-5cGNgko-2_O4\I:_3\M4HS=Jk3h19<I3Y";]l!S%[g(VSAV8na=CWEU&^dCA(YW>n9L96*N%_dW#WbU_cDLec'P!D1Tn`QaB%`Ps%E-hN-!Y,&B0S:Gjj^sMB+!,k?P%ruZ!1&0_o`8ZuWSt/uj=8Fb'$!&`NFC\kQrhB6MXP:cH%W#EkPm_mVL&$I8JS'rj)>&<uY@D,2j'1<hJXp<ePRo;(kXnW@96URbcpruC=7+LcGZsK.8^H!jX::B+?Vdr.j_f*omeWo#Y?\rR+%`,F#HUmU$XWULk-Q/<K;nJ`8Xq2MFRq2Hnrq2HIMnf&OBnf+&Lo,F/Wo,BVTjYq([b\u"2REE&8/&+*8)SPsCSCcKc>B%hQ%r6X3%)9RDEq9>:):>n._._h*<r5NL62_(`p)qCnX)qR7E)a@j&nIqH:o:(qrT_43"SAmMXWo5mMA)B)WnVmpk6&Z]!lHaRNS2]ikYjO9J%p^P%Aj)i1WcpjiNIZkn,.nl:8$O]V-*Tj%uQ(rcu2LmWop8n?IHWts45a1j@H4>^ConqWpot'*@BN&gfITpNsJ!+"2X\mOtR*3VL%`\jdo`c]W*`m:%JNGMJfNGOpVND5o4KH$V:$o_6W*cBPf7dL*iU=`I$DNR:t.V$N"r5Kd]Ip"qFglQoTMH3Xq=LjS%q%n1kDbd_H%q%^Y1[FH,A5g%,9@H'4Zb*5U\M;Ogq>L85a7-hmJhk58X>(.,>SNiA69r,Kod<ShEr5NL5\!7l&Q\m4e:A(=K5W(28LRt_l0X=.7%M.F!AA')6W@oG21&3p\*"q,1u18p][p:^aGNB/-o--+4j(\%sT&B^=BpsSW]+DX_"n-u;hi38tHinM@;0;CJ=p:ZHJG\kaCVT7;T%<nF$*XAF"XZ<%MB-Vr-Z1UUM(E1#/oXpp-+hDp!j"]f&c-`BS;lc/s%CCp2=*PTl*VK&^G?d))8/Gp(^a)W(`5M50A%ML*EQ5b2;%)T9Ghi9JYlE]u#),NTS;F#l4+;6f:K0l8P.G=#K:PAQ#r7i/_7`Zn7+Za.BH6R2:a5cO:9EsWN@./$C1a6*702]nBuqrR6:$2_L7%1$Q_tdH8^(Fnl"!\)mDZp&4^A#j9@I=W#>"mQ9G>VR'krFPcJ'\'2NI"L+F!]mcg=%-u[h:J/q%q4:B!^3P(7]mYC<g\cO#n+Et`%qU)hkf(g[7R@@XAn!:p5I('KZhh?9en)em44/96XO6HQ+Qec_(1L0o5p3@0)m,m+D?Bq(LQ:#<&r1KPQhK5M%K9u694`6m_bi_p(%9'g*EDEQQJr2_tAX)5>rHeiQ%=\X5Z``MoqZp)h&%I<X>:[/C]n+h"(P1P2t]tG;E]3k;^I=!m@f#qF/n!63+[TD)(h2?KtmDieE%]t(sn!6]6S:O!g1a&(9k3PPO_&!V$)rqXa(5Q(HA`IEO;Kkp~>%AI9_PrivateDataEnd